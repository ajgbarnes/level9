*>>>>>>>>>>>>>>>>>>>>>>>>>>> WORK IN PROGRESS <<<<<<<<<<<<<<<<<<<<<<<<<<<<
**************************************************************************
* Level 9 A-Code game dissassembly for Dungeon Adventure v1
**************************************************************************
/ 
/
/ Created by Andy Barnes @ajgbarnes on X/Twitter
/
/ Location descriptions
/ ---------------------
/ Location text can be found by looking in the dungeon-adventure-v1-descs.txt file
/ Location descriptions are 0x1f4 + location id
/ 
/ Object descriptions
/ ---------------------
/ Object text can be found by looking in the dungeon-adventure-v1-descs.txt file
/ Object descriptions (when in inventory) are 0xe7  + object id
/ Object descriptions (when in location)  are 0x141 + object id 
/
/ Lists
/ =====
/
/ list#1 - initial location of objects (read only)
/ list#2 - current working location of objects - initialised by list#1
/
/ list#1
/ ======
/ 
/ There are 74 objects in the game:
/
/ Obj    Object        Initial  Partial 
/ Id     Name          Loc Id   Location Description
/ ----   ------------- -------  ----------------------------------------------------------------------------------
/ 0x46   AXE            0x33    under the killer-willow tree
/ 0x47   BERRY          0x10    on a sturdy branch over the clearing
/ 0x48   BLINDFOLD      0xe0    in Limbo (undiscovered)
/ 0x49   CORPSE         0x74    at the east end of a long room. Its roof is supported by dozens of stone pillars
/ 0x4a   BOW            0xe0    in Limbo (undiscovered)
/ 0x4b   BOX            0xb8    in the box room
/ 0x4c   DRIFTWOOD      0x32    on a mud-bank, north of a wide river.
/ 0x4d   GAUNTLET       0xe0    in Limbo (undiscovered)
/ 0x4e   HAMMER         0x94    in a looted toolroom
/ 0x4f   n/a 
/ 0x50   NAILS          0x94    in a looted toolroom
/ 0x51   SALT-PIG       0xc3    in the Salt Cellar, surrounded by pillars of salt
/ 0x52   POT            0x8a    in a filthy, dead-end cell
/ 0x53   POTATO         0x8b    in a filthy, dead-end cell
/ 0x54   ROPE           0xe0    in Limbo (undiscovered)
/ 0x55   SHIELD         0xab    in a dead-end dark room
/ 0x56   WEDGE          0xac    in a dead-end dark room, below a black pedastal
/ 0x57   n/a
/ 0x58   n/a
/ 0x59   n/a
/ 0x5a   CARVING        0xe0    in Limbo (undiscovered)
/ 0x5b   CHAIR          0xd4    in a wide, smelly passage opening to the outside, high above the river
/ 0x5c   CHEST          0xa6    in the strong room. An iron door leads west and a narrow crack splits the east wall
/ 0x5d   COINS          0x1c    in a clump of bushes on the edge of the forest
/ 0x5e   EGG            0x1f    in a huge nest
/ 0x5f   LAPIS          0x69    in an odd little room, below a granite throne
/ 0x60   NEEDLE         0xe0    in Limbo (undiscovered)
/ 0x61   ONYX           0x69    in a huge nest
/ 0x62   ORE            0xcf    in a huge cave of glistering rock. New passages lead north and south
/ 0x63   CRYSTAL        0x2e    in the roc's nest, where it brings "food" for storage
/ 0x64   STAR           0x98    in a giant, vacant, rats nest
/ 0x65   MEDALLION      0xce    in a hot alcove, lit by the flames of a fire elemental
/ 0x66   TRIDENT        0x67    in the crypt, beside a rotting coffin
/ 0x67   n/a            
/ 0x68   n/a
/ 0x69   AGATE          0xad    in a treasure chamber
/ 0x6a   AMETHYST       0xb9    in the condemned cell. The only way out is to go west
/ 0x6b   DIAMOND        0xab    on a wide ledge half-way up the south side of a tall cave. 
/ 0x6c   EMERALD        0xb7    in a room surfaced with black glass
/ 0x6d   OPAL           0xe0    in Limbo (undiscovered)
/ 0x6e   PEARL          0xe0    in Limbo (undiscovered)
/ 0x6f   RHINESTONE     0xbe    in an ornate, dead-end room
/ 0x70   RUBY           0xb4    in a small soft room between five large round fleshy pillars
/ 0x71   SAPPHIRE       0xe0    in Limbo (undiscovered)
/ 0x72   TOPAZ          0xc2    in a treasure vault. A low crawl leads west
/ 0x73   CUBE           0x73    at the west of a long room with many pillars. The only exit is at the other end
/ 0x74   SPICES         0xa0    in the troll's squalid store room, amidst junk of every kind.
/ 0x75   WHISTLE        0x89    in a cupboard
/ 0x76   HELMET         0xcd    in a north-south passage. A dry red stain spreads from beneath a fallen stone
/ 0x77   n/a       
/ 0x78   BED            0xe0    in Limbo (undiscovered)
/ 0x79   BELT           0x11    in a forest clearing
/ 0x7a   CROSS          0xd5    in a winding, sticky east-west passage to the outside
/ 0x7b   CRUCIFIX       0xcd    in a north-south passage. A dry red stain spreads from beneath a fallen stone
/ 0x7c   HORN           0x23    on a smooth rock dome, below a narrow path
/ 0x7d   MASK           0xe0    in Limbo (undiscovered)
/ 0x7e   MIRROR         0x34    on the southern end of a small island, reached by stepping stones from the south
/ 0x7f   OCTOPUS        0x71    dead-end room, painted matt black. You'll have to return the way you came
/ 0x80   STAFF          0x72    in a second dead-end black room
/ 0x81   SWORD          0x79    a room carved out of rugged rock with a large outcrop of stone in the middle of the floor.
/ 0x82   WAND           0x1c    in a clump of bushes on the edge of the forest
/ 0x83   n/a
/ 0x84   n/a 
/ 0x85   DICE           0x1c    in a clump of bushes on the edge of the forest
/ 0x86   ELEPHANT       0xb5    in a dusty room, entered from the west and with a long shelf along the east wall
/ 0x87   CATERPILLAR    0x2e    in the roc's nest, where it brings "food" for storage
/ 0x88   CASE           0x32    on a mud-bank, north of a wide river. 
/ 0x89   POD            0x2f    south of the river, on the edge of a vast field 
/ 0x8a   WISP           0x04    beside a muddy puddle
/ 0x8b   n/a 
/ 0x8c   RED            0xa0    in the troll's squalid store room, amidst junk of every kind
/ 0x8d   ORANGE         0xe0    in Limbo (undiscovered)
/ 0x8e   YELLOW         0x72    in a second dead-end black room
/ 0x8f   GREEN          0xd4    in a wide, smelly passage opening to the outside, high above the river
/ 0x90   BLUE           0x89    in a cupboard
/ 0x91   VIOLET         0x69    in an odd little room, below a granite throne
/ 0x92   SILVER         0x6f    in the pit: a large pentagonal room, blackened by some past explosion 
/ 0x93   MITHRIL        0x69    in an odd little room, below a granite throne
/ 0x94   CREAM          0x89    in a cupboard
/ 0x95   HOOD           0xba    in the east crusher room beside an opening back to the ramp
/ 0x96   RINGS          0xb0    in a circular room of red-gold metal
/ 0x97   TEETH          0xe0    in Limbo (undiscovered)
/ 0x98   GEM            0x6f    in the pit: a large pentagonal room, blackened by some past explosion
/ 0x99   KEY            0xd7    inside a large wooden box (it has no location description so it's hidden)
/ 
/ 
/ Objects
/ =======
/ 
/ - There are 54 objects in the game
/ - First object has object id 0x46 (70), the axe
/ - Last object  has object id 0x99 (154), the key
/
/ Use of variables var[0xNN] in the A-code
/ ========================================
/
/ 0x01 - (Constant) 0x01
/ 0x02 - (Constant) 0x02
/ 0x03 - (Constant) 0x03
/ 0x04 - (Constant) 0x04
/ 0x05 - (Constant) 0x05
/ 0x06 - (Constant) 0x06
/ 0x07 - (Constant) Location code for the inventory (0xfe) i.e. player carrying an item
/ 0x08 - (Constant) Location code for player wearing an item (0xff)
/ 0x09 - (Constant) Location code for when an item is removed from the game (0xe1)
/ 0x0a - Colour of colour that the player is wearing 
/        0x00 : Not wearing a collar
/        0x8c : ORANGE
/        0x8d : YELLOW
/        0x8e : GREEN
/        0x8f : BLUE
/        0x90 : VIOLET
/        0x92 : SILVER
/        0x93 : MITHRIL
/ 0x0b - (Constant) 0x00
/ 0x0c - Status of the iron door in the strong room 
/        0x00 - closed and bolted
/        0x01 - unbolted and open
/ 0x0d - Unused but incremented by 50 (0x32) when a player eats something that tastes fantastic!
/ 0x0e - Status of the ants
/        0x00 - player has not grown huge and trodden on the giant ants
/        0x01 - player HAS grown huge and trodden on the giant ants
/ 0x0f - Status of the orcs
/        0x00 - Orcs are not camping
/        0x01 - Orcs are camped all around and will block the player's movement (gets auto incremented on the first turn)
/        0x02 - Orcs have been camped around for one turn
/        0x03 - Orcs have been camped around for two turns
/        0x04 - Orcs have been camped around for three turns
/        0x05 - Orcs have been camped around for four turns, kill the player
/        0x06 - horn blown at the army camp and orcs fled (for now)
/ 0x10 - Status of the killer-willow tree
/        0x00 - tree is holding no items
/        0x01 - tree is holding one item
/        0x02 - tree is holding two items
/        0x03 - tree is holding three items
/        0x04 - tree is holding four items
/        0x05 - tree is holding five items
/        0x06 - tree is holding six items
/ 0x11 - Status of the grotesque yellow bird 
/        0x00 - not scared away
/        0x01 - scared away so the player can enter the nest and retrieve the large jade egg
/ 0x12 - Status indicator of finding the corpse at "in a dead end, below a gallows tree" (0xb1)
/        This is bizarre or evil (see comment 46)
/        0x00 - Undiscovered 
/        0x01 - Discovered 
/ 0x13 - Status of the boulder rolling down from above (decrements by one each turn when rolling)
/        0x00 - not rolling at the player
/        0x01 - "Sounds of a boulder echo up from below" if the player hid in the brink of a deep, dark pit (0xb2)
/        0x02 - "Sounds of a boulder echo up from below" if the player hid in the brink of a deep, dark pit (0xb2)
/        0x03 - "Sounds of a boulder echo up from below" if the player hid in the brink of a deep, dark pit (0xb2)
/        0x04 - player will be dead if not in a safe location
/               "Sounds of a boulder echo up from below" if the player hid in the brink of a deep, dark pit (0xb2)
/        0x05 - one more turn before the boulder either passes or kills the player
/        0x06 - boulder has started rolling, two more turns until it passes or kills the player
/ 0x14 - First black sphere status (this one starts in "You are in a dead-end dark room, below a black pedastal." (0xab))
/        0x00 - Black sphere swalows the player
/        .... - Remaining number of moves after first meeting the black sphere
/        0x06 - Remaining number of moves after first meeting the black sphere
/        0x08 - When the player first meets the black sphere, number of turns until it swallows them
/               (in reality this because 6 turns because of decrement checks in the code)
/        0xac - Starting location of the black sphere (where the player will first meet it)
/        0xe1 - Black sphere destroyed and out of game
/ 0x15 - Second black sphere status (this one starts in "You are in a dead-end dark room, below a black pedastal." (0xac))
/        0x00 - Black sphere swalows the player
/        .... - Remaining number of moves after first meeting the black sphere
/        0x06 - Remaining number of moves after first meeting the black sphere
/        0x08 - When the player first meets the black sphere, number of turns until it swallows them
/               (in reality this because 6 turns because of decrement checks in the code)
/        0xac - Starting location of the black sphere (where the player will first meet it)
/        0xe1 - Black sphere destroyed and out of game
/ 0x16 - Number of times the player has died
/ 0x17 - Player deafness counter (protects the player from the siren after the seeds explode)
/        0x00         - player can currently hear
/        0x01 to 0x04 - player is deaf for this number of remaining turns (decrements by 1 each turn)
/ 0x18 - Status of the dragon 
/        0x00 - Alive and lieing on the golden bed
/        0x01 - Slain
/ 0x19 - Status of the dryad
/        0x00 - player has not tried to chop the tree and dryad is still inside
/        0x01 - dryad has sprung from the tree after the player tried to chop it down
/ 0x1a - Status of the dwarf 
/        0x00 - not following the player
/        0x01 - following the player
/ 0x1b - Dwarf treasure diving status
/        0x00 - has NOT dived into a hidden opening
/        0x01 - HAS dived into a hidden openin
/ 0x1c - Status of the main door north of the bridge  on a narrow north-south bridge (0x2a)
/        0x00 - shut
/        0x01 - open
/ 0x1d - Number of turns the player has been in the dark
/        0x00 - Player can see
/        .... - Incremented by 2 when the location description is displayed but only by 1 in all other instances
/        0x04 - Player is killed by ghoul
/ 0x1e - Index into list#1 for setting object initial locations
/      - Used as an index for looking up the current location of an object
/ 0x1f - Used to hold the current location of an object
/ 0x20 - Status of the player's eyes:
/        0x00 - open
/        0x01 - closed
/ 0x21 - Status of the blindfold:
/        0x00 - not being worn
/        0x01 - being worn
/ 0x22 - Status of the Rakshasa 
/        0x00 - have NOT played the die game
/        0x01 - HAVE played the die game
/ 0x23 - Status of the "battered silver face" - discovered when the player first does a "look"
/        in the swamp / marsh locations (0x01 to 0x08)
/        0x00 - Player has not yet discovered it
/        0x01 - Player HAS discovered it by 
/ 0x24 - Status of the canivorous jelly
/        0x00 - circling around
/        0x01 - converged on the corpse that the player threw
/ 0x25 - Status of the cold cream (prevents the fire elemental leaping on the player)
/        0x00 - not smeared on the player
/        0x01 - smeared on the player
/ 0x26 - Status of the rat
/        0x00 - rat is guarding the corridor
/        0x01 - rat has fled from the stinking chip
/ 0x27 - Status of the two evil giants:
/        0x00 - alive and still in the clearing asleep
/        0x01 - fought each other and rushed off
/ 0x28 - Indicates whether the skeletons are still guarding the dwarf
/        0x00 - Stil guarding the dwarf
/        0x01 - Clanked off after the player waved the staff
/ 0x29 - Status of the fierce goat 
/        0x00 - Still standing guard on the cliff
/        0x01 - Slipped off the cliff
/ 0x2a - Status of the livid green gem 
/        0x00 - not smashed
/        0x01 - smashed
/ 0x2b - Number of turns until the gem sucks the player's mind into the gem
/        0x00 - not sucking the player's mind into the gem
/        .... - number of turns until the player's mind is sucked into the gem
/        0x04 - set to 4 turns when the player first picks up the gem
/ 0x2c - Status of the executioner
/        0x00        - not in the same room as the player
/        0x02 - 0x04 - in the same room as the player
/        0x06        - player will be killed by the executioner
/        0xe1        - executioner has been flattened by the elephant in the brooch
/ 0x2d - Status of the rotting bridge / psychedlic mushroom
/        0x00 - player has NOT eaten the psychedlic mushroom and can still only see the rotting bridge
/        0x01 - player HS eaten the psychedlic mushroom and can see a fine golden pathway
/ 0x2e - Size status of the player
/        0x00 - normal size
/        0x01 - shrunk
/        0x02 - giant (can kill the giant ants)
/
/ 0x30 - Matched input word code 1
/ 0x31 - Matched input word code 2
/ 0x32 - Matched input word code 3
/ 0x33 - Matched input word count 
/ 0x34 - Whether the player is invisible - eating the mushroom will make them invisible for 9 turns
/        0x00         - can be seen 
/        0x01 to 0x09 - invisible
/        0x0a         - value when first made invisible but then decremented
/ 0x35 - Number of turns that the player has been trapped in the east crusher room
/        0x00 - not trapped
/        0x01 - trapped but then incremented
/        0x02 - trapped for 1 turn,  "Iron bars slam down to block your progress"
/        0x03 - trapped for 2 turns, "The walls at the far end clash together"
/        0x04 - trapped for 3 turns, walls try and crush player and if not wedged the player will die, "The walls near you grind together"
/        0x05 - bars lifted and player free after wedging the walls, "The bars lift"
/        0x00 - Not burning
/        0x01 - Message will be printed "The burning branch is going out!"
/        .... - Remaining turns left for the wood to burn out
/        0x09 - Message will be printed "The wood flickers"
/        .... - Remaining turns left for the wood to burn out
/        0xc8 - Player is given 200 turns when initially lit (0xc8)
/ 0x36 - Number of remaining turns for the driftwood to burn (decrements by 1 per turn)
/ 0x37 - Whether the player can see (either eyes are open/closed or blindfolded or it's dark)
/        0x00 - eyes are closed OR it's dark with no light (cannot see)
/        0x01 - eyes are open, not blindfolded and there is light (can see and room description will be printed)

/
/ 0x39 - Counter for how long the player has been staring at the myriad of moving images around an immense pit
/        0x00 - not at all
/        .... - additional turns / commands (increments by 2 when the location is printed, by 1 if not)
/        0x0a - will try to fly off the ramp
/ 0x3a - Status of the roc (only changes once per game)
/        0x00 - has NOT previously carried the player off to its nest
/        0x00 - HAS not previously carried the player off to its nest
/ 0x3b - Number of items that the player is carrying in the inventory
/ 0x3c - 1. Indicates whether the command was valid e.g. player can move in that direction 
/        or they do have the object and it's a valid action
/        0x00 - not a valid action
/        0x01 - valid action
/        2. Reset to 0x01 whenever "What next?" is printed (start of each turn)
/        3. Number of items printed in a location
/        4. Number of items printed in the inventory
/ 0x3d - Unused
/ 0x3e - Number of items the player is wearing
/ 0x3f - Status of the flint-thrower 
/        0x00 - still in place throwing flint
/        0x01 - wand waved and flint thrower dead
/ 0x40 - Location of the sticky slime
/        0x00 - default location "on the floor of a cavern... " (0x36)
/        0xnn - wherever the pot is dropped after it was filled with slime 
/        0xfe - in the player's inventory (when the pot is filled)
/ 0x41 - Whether the player has said the correct password or not at the gatehouse
/        0x00 - correct password not yet said
/        0x01 - correct password said
/ 0x42 - Status of the troll on the magnificent golden pathway"
/        0x00 - has NOT been given the medallion
/        0x01 - HAS been given the medallion
/ 0x43 - Player's current location, defaults to "on a mud-bank, nort of a wide river" (0x32)
/ 0x44 - Player's target location when moving - reset to the player's current location at the start of a turn
/        Set to 0x00 if the player is not allowed to move in a particular direction by the Exits command
/ 0x45 - 1. Temporary variable for holding the location of the red-gold ring 
/        2. Temporary variable for holding the player's target location
/ 0x46 - Number of turns plus 1 that the player has been "within a circle of distored monoliths". When this reaches
/        3 the Rakshasa appear and play the game with the player.
/        TODO must have a secondary function
/ 0x47 - Status if the mirror has reflected the sleep spell
/        0x00 - not reflected
/        0x01 - reflected
/        0x02 - masked man who fell asleep wakes up when the twig snaps and flees
/ 0x48 - Status of the reward in the reward room 
/        0x00 - Player has NOT been given a prize
/        0x01 - Player has been given one prize (the sapphire)
/        0x02 - Player has been given two prizes (the sapphire and then the bomb) - player killed
/ 0x49 - Status of if the machine has scanned the player in the large store room
/        0x00 - player cannot be resurrected as they haven't been scanned by the machine
/        0x01 - player can be resurrected as they haven't been scanned by the machine
/ 0x4a - Status of the caterpillar 
/        0x00 - not squeezed
/        0x01 - squeezed and a silken rope has emerged 
/ 0x4b - Status of the rope in the roc's nest
/        0x00 - not tied to the roc's nest
/        0x01 - tied to the roc's nest
/ 0x4c - Working variable for the first location supplementary message, can be set to:
/        0x44  - Two evil giants are asleep in the clearing
/        0x45  - Two fierce giants are asleep below
/        0x47  - A young girl, with flowing locks, sits on the island
/        0x76  - A gentle dryad stands beside the tree
/        0x77  - An enormous dragon lies on a golden bed
/        0x78  - A grotesque bloated yellow bird with big ears squats on the nest
/        0x7d  - It's blocked by a slab of rock
/        0x7f  - A boulder rolls on a carpet of moss
/        0x80  - A mossy lump sits in one corner
/        0x86  - The door is bolted
/        0x8a  - An opening leads east
/        0x8d  - There is a square pit in the floor
/        0x8f  - A host of skeletons are guarding a bearded dwarf
/        0x98  - A vampire cowers back
/        0xa3  - A fierce goat is on guard
/        0xba  - The main door north of the bridge is shut
/        0xbb  - Ghostly orcs guard the junction
/        0xc4  - A rope hangs down
/        0xdc  - An army of orcs is camped all around
/        0xeb  - Globs of carnivorous jelly are circling round
/        0xec  - A mound of jelly wobbles on the floor
/        0xed  - A giant rat guards the corridor
/        0xfe  - Enormous ants tower overhead as they walk past, completely ignoring you
/        0x102 - A rotting bridge leads north
/        0x103 - A fine golden pathway leads north
/        0x107 - A troll blocks the bridge, palm outstretched for payment
/        0x113 - A hooded executioner blocks the only exit
/        0x119 - Several wights are trying to get at you
/        0x11e - It is slightly ajar
/        0x11f - It is nailed shut
/ 0x4d - Second location supplementary message, can be set to:
/        0x19 - A faint light shines in
/        0x1a - The sun hangs low in the sky
/        0x1b - The sun is setting!
/        0x75 - The sun sets!
/ 0x4e - Final variable for the first location supplementary message
/        (set to the value of var[0x4c])
/ 0x4f - Maximum number of items a player can carry - defaults to 0x04
/        Can be:
/        0  - if shrunk
/        4  - if not shrunk and not wearing the belt
/        10 - if not shrunk and wearing the belt
/ 0x50 - Exit flags when a player tries to move in a direction from one location to another
/ 0x51 - Used to calculate the player's score
/ 0x52 - Status of the siren 
/        0x00 - stil around 
/        0x01 - fled in panic
/ 0x53 - Number of rocks that the player has pressed when blocked by the slab of rock (0x77)
/ 0x54 - Status of the boulder in the damp hemispherical cave
/        0x00 - not pushed, moss still on walls and floro
/        0x01 - pushed, exit open and moss in a lump in the corner
/ 0x55 - Status of the statue in the statue room
/        0x00 - not turned
/        0x01 - turned and opening east revealed
/ 0x56 - Unused 
/ 0x57 - Number of turns/commands entered by the player
/ 0x58 - Status of the pit in the "ornate throne room"
/        0x00 - pit is closed
/        0x01 - pit is open (player pressed button 1)
/ 0x59 - Status of the throne and its behaviour through button 4
/        0x00 - not risen through a trapdoor in the ceiling
/        0x01 - risen through a trapdoor in the ceiling 
/ 0x5a - Status of whether the player has picked up the red gold ring
/        0x00 - not picked up
/        0x01 - picked up the ring
/ 0x5b - Status of the vampire
/        0x00 - still alive (or undead)
/        0x01 - killed by the wooden cross
/ 0x5c - Status of the gilt miner's helmet with a lamp
/        0x00 - unlit and wisp not captured
/        0x01 - wisp captured in lamp and gives ever lasting light
/ 0x5d - 1. Location description id to print - calculated as location id + 0x1f4
/        2. Random number for determining if a boulder will roll at the player if on the straight or winding stairs
/        3. Random number for determining if a roc takes tha player to its nest
/        4. Cyclical message to print when the player dies 
/        5. Starting location when moving the packing crate after the player dies
/        6. Hold the number that is rolled by the Rakshasa
/        7. Score to subtract for the number of times the player has died
/        8. Score increment for various events e.g. vampire being dead
/        9. Current location of the corpse
/        10.Message id to print when pressing the protruding buttons
/        11.Message id to print when pressing the buttons in the reward room
/ 0x5e - Number of crosses / crucifixes carried. Player needs 1 to stop the vampire biting them
/        and two to keep the wights back
/ 0x5f - Status of the small ornate box with a lid
/        0x00 - never dropped in shallow water
/        0x01 - has been dropped in shallow water and snake inside has been drowned
/ 0x60 - Status of the coffin 
/        0x00 - slightly ajar
/        0x01 - nailed shut
/ 0x61 - Unused - but seems to be a location light indicator
/        0x00 - player cannot see location description (eyes closed)
/        0x01 - player can see location description
/ 0x62 - Incorrectly used as the constant 0x00 in the scoring
/ 0x63 - 1. Message to print between objects e.g. newline
/        2. Torch message to print ", burning brightly" or ", only a stump is left"
/
/ Notes and observations
/ ======================
/ 
/ 1. Why explicitly set variables to 0x00 (var[0x0b]) from 0x023 to 0x012b
/    when all those variables are reset to 0x00 when the  
/    "Clear Workspace" function is called (0x0006)? It's redundant.
/ 2. There are 54 objects in the game from 0x46 to 0x99 
/ 3. The number of items a player can carry varies :
/    a. The player can initially carry 4 items
/    b. This increases to 10 items if the player wears the "good strong belt"
/    c. This decreases to 0 items if the player eats the small grey mushrooms and shrinks
/    d. This increases to 4 itmes if the player eats the huge grey mushroom and grows
/ 4. One of the synonyms for "apply", "rub" and "wear" has a typo "smeau" (should be smear?)
/ 5. The command handler tries to process "search" / "examine" twice - see 0x0317 and 0x0344
/    Only the first will ever get invoked. TODO second should be what?
/ 6. The command handler tries to process "apply", "wear" / "rub" / "smeau" twice - see 0x033a and 0x0367
/    Only the first will ever get invoked. It looks like in a previous version of the A-code, the 
/    "rub", "smeau", "apply" had a separate dictionary id to "wear" but it was changed at some point 
/    to make them all just synonyms. Combined during testing when no doubt  someone typed 
/    "wear cold cream" rather than "apply" or "rub"?
/ 7. In the dictionary "score" is actualy defined as "score/"
/ 8. Unsure why "draw" is a synonym to "press", "push", "rotate", "stop" and "turn"
/ 9. A synonym for the mithril collar is "throne" (!) - player can "wear throne" to put on the collar
/ 10.There is a hidden object "glass key" (0x99) in location "You are inside a large wooden box.
/    A small door leads deeper into the box." (0xd7) early in the game.
/    The object has no description for when it's in a location (0x1da), it only has a description when in
/    the player's inventory "a glass key enscribed "This game is copyright (C) Level 9 Computing 
/    1982 and was created by Peter R J Austin" (0x180) - at the start of the game 
/    do the following "in", "take key" and "inv" and it will be shown. Nice!
/ 11.Taking the red-gold ring without the gauntlet kills the player "The ring grabs your finger 
/    and grows rapidly.. You shrink rapidly.."
/ 12.The red-gold ring has a typo in its location description "A gold rings rolls on the ground" (0x1d7)
/    Should "A red-gold ring rolls on the ground"
/ 13.The password at the gatehouse can either be "Password!" or "Agaliarept" (or most truncations of
/    of this e.g. say pass)
/ 14.The password at the gatehouse can be said multiple times
/ 15. There are four mysterious locations that cannot be accessed in the game each with numbers as decriptions:
/     0xc4 : 696
/     0xc5 : 697
/     0xc6 : 698
/     0xc7 : 699
/     ...
/     0xd9 : 717
/     0xda : 718
/     0xdb : 719
/     Changing var[0x43] to one of those will take you there and you can reach the starting location (0x32) by
/     going "leave"
/ 16. There are two special locations with no exits or other locations connecting to them (never set):
/     0xdc : in Valhalla
/     0xdd : in Hades
/ 17. If the player is an an outside location or location that can see the outdoors (location id is less than 0x36)
/     then the sun will slowly set based on the number of turns the player has had (value of var[0x57])
/     0x00 - 0x45 - No sun message, assumed to be daylight for the first 69 turns
/     0x46 - 0x59 - "The sun hangs low in the sky" for turns 70 to 89 
/     0x5a - 0x63 - "The sun is setting!" for turns 90 to 99
/     0x64 - 0x64 - "The sun sets!" for the 100th turn
/     0x65 - .... - No more sun messages but it's dark outside unless the player has a light
/ 18. BUG - if the player is in the same location as the "gilt miner's helmet with a lamp" they will be able to see
/     if the helmet has not captured the wisp yet - if they pick it up they won't be able to see. (0x043c)
/ 19. Player has a ~5% chance of a boulder rolling at them on the winding / straight stairs
/ 20. Eating the mushroom on the wide ledge beween a sturdy bridge and a fissure in the rock, makes the player invisible for 9 turns
/ 21. After progressing past "below a ramp up the outside of the black tower" (0x08) there is a ~15% chance 
/     of "A skeletal hand reaches from the earth but crumbles to dust" happeneing per turn
/ 22. After progressing past "below a ramp up the outside of the black tower" (0x08) there is a ~159 chance
/     of being carried off by the roc (only happens once)
/ 23. If the sleep spell hits the player and they do not have the mirror in "on an east-west road through the forest" (0x16)
/     then any items they are wearing or in the inventory are removed from the game. Harsh!
/ 24. The small salt pig contains a pearl that is revealed with it is dissolved in shallow water
/ 25. A synonym for the "bird" is "busby" for those old enough to remember the BT mascot...
/ 26. Weirdly a synonym for "ball" and "sphere" is "blach"
/ 27. "Wight" is in the directionary as "wightd" - should be "wights"
/ 28. There is a special unnavigable location "in Limbo" (0xe0) for undiscovered objects
/ 29. Maximum score is 600 calculated as:
/     15 points for each of the 37 treasures in the long store room or inventory or worn by the player (total 555)
/     15 points for killing the vampire 
/     15 points for slaying the dragon
/     15 points for smashing the living green gem
/ 30. Bizarrely, the score return will reset the score to zero if it's > 9,998 (can't even get close)
/ 31. Unused code between 0x15fd and 0x1608
/ 32. BUG? When the player is ""on a wide ledge outside a tunnel entrance." (0xa0)
/     they can eat mushrooms endlessly and each "It tastes ok" but no mushrooms are mentioned and it
/     makes no difference to the game.
/ 33. BUG? When the player is "at the end of an aqueduct designed to drip water evenly into the depths 
/     of a deep pit below." (0x39) they can eat mushrooms endlessly and each "It tastes ok" but no mushrooms
/     are mentioned and it makes no difference to the game.
/ 34. var[0x0d] increments by 50 every time the player eats the tasty mushrooms in the troll's squalid store room
/     maybe an original part of the score and how you could reach 9,998?
/ 35. Player can only be resurrected if they have been scanned by the machine in the large storeroom
/ 36. Function of the buttons on the throne on the ornate throne room the buttons do the following:
/     1 - A pit opens in the floor (if closed - var[0x58] set to 0x00) otherwise "Nothing happens"
/     2 - The pit closes (if closed - var[0x58] set to 0x01)) otherwise "Nothing happens"
/     3 - The room fills briefly with light 
/     4 - The entire throne rises through a trapdoor in the ceiling. It comes to rest in an odd little room (nothing happens on second press)
/     5 - Nothing happens
/     6 - Alarms sound
/     7 - Fire jets cross the floor!
/     8 - "Master: I beg to report that all internal eyes are dead and enemies are in the caves. Also, thousands of enemy orcs are advancing upon us."
/     9 - You are somewhere else! (moves the player to "Fire jets cross the floor!" (0x69) without the throne)
/ 37. On the throne in the ornate throne room, if you press button 4, the throne moves from 
/ 38. Pressing button 1 on the "ornate" throne when it's in the "odd little room" still says "a pit opens in the floor!"
/     even though it's NOT opened in the "odd little room"
/ 39. The only ways out of the "odd little room" are:
/     a. Pressing button 9 to be taking to "the pit: a large pentagonal room" (0x6f) 
/     b. Via the packing case - the player has to bring it with them
/ 40. If the player performs a "looK" in "the Salt Cellar, surrounded by pillars of salt"
/     then "Your body becomes a pillar of salt!" and the player is killed
/ 41. Player accolade is based on the following:
/      < 50  : You didn't get very far!
/      < 100 : OK for a beginner
/      < 200 : You had some success
/      < 300 : A worthy efort!
/      < 400 : You have earned the rank of Adventurer
/      < 500 : You're clearly an experienced Adventurer!
/      < 600 : Congratulations, Master Adventurer! You'll soon be a Grandmaster
/        600 : All hail to thee, Grandmaster Adventurer!!
/ 42. Resurrection is NOT guaranteed and will only happen under the following circumstances:
/      Before any resurrection is allowed, this has to have happened just once:
/     (- Player has scanned themselves in the large store room 
/      After this any one of the following circumstances can be met:
/      - Player has played dice and won with the Rakshasa (always takes precedence over below)
/      - Player IS "on the ceiling of a fine room" (0xc8)
/      - Player IS "on the carpetted floor of comfortable homely room..." (0xc9)
/      - Player IS "in a large store room" (0xca)
/      - Player IS "in a large wooden box" (0xd7)
/      - Player HAS the packing case in their inventory
/      - Player HAS the packing case in their current location
/      The resurrection is only allowed if the player has been resurrected less than 3 times
/ 43. The player teleports by saying a colour - which will take them to that cylinder of light
/     from another cylinder of light. Player has to be wearing a collar colour 
/     that has a greater or equal colour value than the cylinder of coloured light that
/     they want to teleport to e.g. to teleport to the orange cylinder of light,
/     the player must be wearing at least the yellow collar - they will be denied
/     with "NOT AUTHORISED TO GO THERE!" if they are wearing the orange or red collar
/ 44. There's a room called the  "cylinder of impenetrable darkness" (0x5b). It's not possible to teleport here however
/     it's still possible to navigate to this room from "in a dead-end dark room, below a black pedestal" (0xac)
/     by going up 
/ 45. BUG: Cannot examine an item if it's being worn. See 0x0e85
/ 46. BUG? There are two corpses in the game. One "at the east end of a long room." (0x74)
/     and the other  "in a dead end, below a gallows tree" (0xb1). Each corpse yields different
/     objects under normal game circumstances... the one in the "long room" will yield 
/     a "short bow" and the "orange collar" and the one in "a dead end" will yield 
/     the "blindfold" and the "gauntlet". However... if the player finds the "dead end" body
/     first there is a flag that is set var[0x12] on just being in that location that 
/     prevents the "bow" and "collar" being found on the other body. Why? See 0x0e56. 
/     If the player just visits 0xb1 and doesn't search the corpse there, but then goes to 
/     0x74, they will find the "blindfold" and "gauntlet" on the other corpse. I haven't 
/     analysed the game enough to determine if it's impossible to get to the second corpse 
/     without searching the first corpse. But it should be location based checking? You can 
/     test this yourself with #setvar 0x43 0xb1 or #setvar 0x43 0x74 to move between locations
/ 47. In the "skinner room" (0xbb) the nine buttons do the following:
/     1 - "The room heats up" and kills the player
/     2 - "The room heats up" and kills the player
/     3 - "The room heats up" and kills the player
/     4 - "The room heats up" and kills the player
/     5 - "The room heats up" and kills the player
/     6 - "The room heats up" and kills the player
/     7 - "The room heats up" and kills the player
/     9 - Teleports to the reward room (0xbc) with the following options
/         1 - "Great wealth"  - Imps clothe you in gold armour and drop you into the sea (player killed)
/         1 - "Eternal life"  - Searing flames leap up: "You can live for ever by remaining in the fire!" (player killed)
/         1 - "World peace"   - "While humans are divided there will be war, so I will unite them. Your body will serve as a zombi in My army!" (player killed)
/         1 - "Mystery Prize" - You win a little present (a sapphire)
/         1 - "Nothing"       - "You'll get nothing all right! No body, no life..." (player killed)
/ 48. Clearly the original intent was to allow the player to extinguish the driftwood to preserve it 
/     (maybe intentionally removed?).  There are a number of issues:
/     a. 0x0c8e - should be comparing against "driftwood" (0x4c) not 0x44
/     b. 0x0c77 - no definition of message 0x63 - just says "99 "
/ 
/ TODO what happens to collars when you wear a new one

**************************************************************************
* A-code entry point
**************************************************************************

/ Call the initialisation routine
0x0000 (0x0740): (0x00) Goto 0x0006

**************************************************************************
* NEVER USED
**************************************************************************

/ NOTE This is never executed

/ Seems to be an A code entry point to skip initialisation but it's never called
/ Probably some test harness thing back with their original tools that allowed
/ state to be loaded first and jump into the game processing
0x0003 (0x0743): (0x00) Goto 0x0144

**************************************************************************
* New game initialisation (including after a player dies)
**************************************************************************

/ Reset all the variables to 0x00 - engine underneath on the BBC Micro
/ assumes a maximum of $6E / 110 variables
0x0006 (0x0746): (0x06) Function - Clear Workspace (0x05)

/ Initialise to the constant 0x01
0x0008 (0x0748): (0x08) Set var[0x01] = (constant) 0x01

/ Initialise to the constant 0x02
0x000b (0x074b): (0x08) Set var[0x02] = (constant) 0x02

/ Initialise to the constant 0x03
0x000e (0x074e): (0x08) Set var[0x03] = (constant) 0x03

/ Initialise to the constant 0x04
0x0011 (0x0751): (0x08) Set var[0x04] = (constant) 0x04

/ Initialise to the constant 0x05
0x0014 (0x0754): (0x08) Set var[0x05] = (constant) 0x05

/ Initialise to the constant 0x06
0x0017 (0x0757): (0x08) Set var[0x06] = (constant) 0x06

/ Set the constant that represents an item being in the 
/ player's inventory (0xfe)
0x001a (0x075a): (0x08) Set var[0x07] = (constant) 0xfe

/ Set the constant that represents an item being worn by 
/ the player (0xff)
0x001d (0x075d): (0x08) Set var[0x08] = (constant) 0xff

/ Set the constant that represents an item removed from 
/ the game (0xe1)
0x0020 (0x0760): (0x08) Set var[0x09] = (constant) 0xe1
0x0023 (0x0763): (0x09) Set var[0x0a] = var[0x0b]
0x0026 (0x0766): (0x09) Set var[0x0c] = var[0x0b]
0x0029 (0x0769): (0x09) Set var[0x0d] = var[0x0b]
0x002c (0x076c): (0x09) Set var[0x0e] = var[0x0b]
0x002f (0x076f): (0x09) Set var[0x0f] = var[0x0b]
0x0032 (0x0772): (0x09) Set var[0x10] = var[0x0b]

/ Initialise the status of the grotesque bloated yellow bird
/ to be on it's nest (0x00)
/ var[0x0b] is the constant 0x00
0x0035 (0x0775): (0x09) Set var[0x11] = var[0x0b]

/ Initialise the status indicator that the player has NOT visited the 
/ "dead end, below a gallows tree" (0x00)
/ var[0x0b] is the constant 0x00
0x0038 (0x0778): (0x09) Set var[0x12] = var[0x0b]

/ Initiase the status of the boulder to NOT rolling down the hill (0x00)
/ var[0x0b] is the constant 0x00
0x003b (0x077b): (0x09) Set var[0x13] = var[0x0b]

/ Initialise the starting location of one of the black sphere's 
/ to "in a dead-end dark room." (0xab)
0x003e (0x077e): (0x08) Set var[0x14] = (constant) 0xab

/ Initialise the starting location of one of the black sphere's 
/ to "in a dead-end dark room, below a black pedestal" (0xac)
0x0041 (0x0781): (0x08) Set var[0x15] = (constant) 0xac


0x0044 (0x0784): (0x09) Set var[0x16] = var[0x0b]
0x0047 (0x0787): (0x09) Set var[0x17] = var[0x0b]
0x004a (0x078a): (0x09) Set var[0x18] = var[0x0b]
0x004d (0x078d): (0x09) Set var[0x19] = var[0x0b]

/ Initialise the status of the dwarf to not following the player (0x00)
/ var[0x0b] is the constant 0x00
0x0050 (0x0790): (0x09) Set var[0x1a] = var[0x0b]
0x0053 (0x0793): (0x09) Set var[0x1b] = var[0x0b]
0x0056 (0x0796): (0x09) Set var[0x1c] = var[0x0b]
0x0059 (0x0799): (0x09) Set var[0x1d] = var[0x0b]
0x005c (0x079c): (0x09) Set var[0x1e] = var[0x0b]
0x005f (0x079f): (0x09) Set var[0x1f] = var[0x0b]
0x0062 (0x07a2): (0x09) Set var[0x20] = var[0x0b]
0x0065 (0x07a5): (0x09) Set var[0x21] = var[0x0b]

/ Initialise the status of having met and won the dice game with
/ the Rakshasa to "not met and won" (0x00)
/ var[0x0b] is the constant 0x00
0x0068 (0x07a8): (0x09) Set var[0x22] = var[0x0b]
0x006b (0x07ab): (0x09) Set var[0x23] = var[0x0b]
0x006e (0x07ae): (0x09) Set var[0x24] = var[0x0b]

/ Reset the status of the cold cream to "not smeared on the player" (0x00)
/ var[0x0b] is the constant 0x00
0x0071 (0x07b1): (0x09) Set var[0x25] = var[0x0b]
0x0074 (0x07b4): (0x09) Set var[0x26] = var[0x0b]
0x0077 (0x07b7): (0x09) Set var[0x27] = var[0x0b]
0x007a (0x07ba): (0x09) Set var[0x28] = var[0x0b]
0x007d (0x07bd): (0x09) Set var[0x29] = var[0x0b]
0x0080 (0x07c0): (0x09) Set var[0x2a] = var[0x0b]
0x0083 (0x07c3): (0x09) Set var[0x2b] = var[0x0b]
0x0086 (0x07c6): (0x09) Set var[0x2c] = var[0x0b]
0x0089 (0x07c9): (0x09) Set var[0x2d] = var[0x0b]
0x008c (0x07cc): (0x09) Set var[0x2e] = var[0x0b]
0x008f (0x07cf): (0x09) Set var[0x2f] = var[0x0b]
0x0092 (0x07d2): (0x09) Set var[0x30] = var[0x0b]
0x0095 (0x07d5): (0x09) Set var[0x31] = var[0x0b]
0x0098 (0x07d8): (0x09) Set var[0x32] = var[0x0b]
0x009b (0x07db): (0x09) Set var[0x33] = var[0x0b]
0x009e (0x07de): (0x09) Set var[0x34] = var[0x0b]
0x00a1 (0x07e1): (0x09) Set var[0x35] = var[0x0b]
0x00a4 (0x07e4): (0x09) Set var[0x36] = var[0x0b]

/ Reset the status whether the player can see to cannot (0x00)
/ var[0x0b] is the constant 0x00
0x00a7 (0x07e7): (0x09) Set var[0x37] = var[0x0b]
0x00aa (0x07ea): (0x09) Set var[0x38] = var[0x0b]
0x00ad (0x07ed): (0x09) Set var[0x39] = var[0x0b]
0x00b0 (0x07f0): (0x09) Set var[0x3a] = var[0x0b]
0x00b3 (0x07f3): (0x09) Set var[0x3b] = var[0x0b]
0x00b6 (0x07f6): (0x09) Set var[0x3c] = var[0x0b]
0x00b9 (0x07f9): (0x09) Set var[0x3d] = var[0x0b]
0x00bc (0x07fc): (0x09) Set var[0x3e] = var[0x0b]
0x00bf (0x07ff): (0x09) Set var[0x3f] = var[0x0b]
0x00c2 (0x0802): (0x09) Set var[0x40] = var[0x0b]
0x00c5 (0x0805): (0x09) Set var[0x41] = var[0x0b]
0x00c8 (0x0808): (0x09) Set var[0x42] = var[0x0b]

/ Reset the starting location here to nowhere (0x00)
/ this will be changed shortly 
/ var[0x0b] is the constant 0x00
0x00cb (0x080b): (0x09) Set var[0x43] = var[0x0b]
0x00ce (0x080e): (0x09) Set var[0x44] = var[0x0b]
0x00d1 (0x0811): (0x09) Set var[0x45] = var[0x0b]
0x00d4 (0x0814): (0x09) Set var[0x46] = var[0x0b]
0x00d7 (0x0817): (0x09) Set var[0x47] = var[0x0b]
0x00da (0x081a): (0x09) Set var[0x48] = var[0x0b]
0x00dd (0x081d): (0x09) Set var[0x49] = var[0x0b]
0x00e0 (0x0820): (0x09) Set var[0x4a] = var[0x0b]
0x00e3 (0x0823): (0x09) Set var[0x4b] = var[0x0b]
0x00e6 (0x0826): (0x09) Set var[0x4c] = var[0x0b]
0x00e9 (0x0829): (0x09) Set var[0x4d] = var[0x0b]
0x00ec (0x082c): (0x09) Set var[0x4e] = var[0x0b]

/ Reset the number of items a player can carry to 0x00
/ var[0x0b] is the constant 0x00
0x00ef (0x082f): (0x09) Set var[0x4f] = var[0x0b]
0x00f2 (0x0832): (0x09) Set var[0x50] = var[0x0b]
0x00f5 (0x0835): (0x09) Set var[0x51] = var[0x0b]
0x00f8 (0x0838): (0x09) Set var[0x52] = var[0x0b]
0x00fb (0x083b): (0x09) Set var[0x53] = var[0x0b]
0x00fe (0x083e): (0x09) Set var[0x54] = var[0x0b]
0x0101 (0x0841): (0x09) Set var[0x55] = var[0x0b]
0x0104 (0x0844): (0x09) Set var[0x56] = var[0x0b]
0x0107 (0x0847): (0x09) Set var[0x57] = var[0x0b]
0x010a (0x084a): (0x09) Set var[0x58] = var[0x0b]
0x010d (0x084d): (0x09) Set var[0x59] = var[0x0b]
0x0110 (0x0850): (0x09) Set var[0x5a] = var[0x0b]
0x0113 (0x0853): (0x09) Set var[0x5b] = var[0x0b]
0x0116 (0x0856): (0x09) Set var[0x5c] = var[0x0b]
0x0119 (0x0859): (0x09) Set var[0x5d] = var[0x0b]

/ Reset the number of crosses / crucifixes carried to 0x00
/ var[0x0b] is the constant 0x00
0x011c (0x085c): (0x09) Set var[0x5e] = var[0x0b]
0x011f (0x085f): (0x09) Set var[0x5f] = var[0x0b]
0x0122 (0x0862): (0x09) Set var[0x60] = var[0x0b]

/ REDUNDANT - already initialised above
0x0125 (0x0865): (0x09) Set var[0x5e] = var[0x0b]
0x0128 (0x0868): (0x09) Set var[0x5f] = var[0x0b]
0x012b (0x086b): (0x09) Set var[0x60] = var[0x0b]

/ Intialise the index to the first object id (0x46)
0x012e (0x086e): (0x08) Set var[0x1e] = (constant) 0x46

/ Get the starting location of the object
0x0131 (0x0871): (0xa1) Set var[0x1f] = list#1[var[0x1e]] (list address 0x066a)

/ Set the current location of the object to starting location
0x0134 (0x0874): (0xe2) Set list#2[var[0x1e]] = var[0x1f] (list address 0x0740)

/ Move to the next object id
0x0137 (0x0877): (0x0a) Set var[0x1e] += var[0x01]

/ Loop around until all 54 objects are initialised 
0x013a (0x087a): (0x1a) If var[0x1e] < (constant) 0x9a then Goto 0x0131

/ Set the player's initial location to "on a mud-bank, nort of a wide river" (0x32)
0x013e (0x087e): (0x08) Set var[0x43] = (constant) 0x32

/ Set the maximum number of items a player can carry to 0x04 (4)
/ var[0x04] is the constant 0x04
0x0141 (0x0881): (0x09) Set var[0x4f] = var[0x04]

/ Print the introductory message "Welcome to Dungeon Adventure from Level 9. 
/ Enter English phrases (no punctuation) to play, collect treasure and return 
/ to civilisation along the forest road to win." (0x01)
/ var[0x01] is the constant 0x01
0x0144 (0x0884): (0x04) Print message var[0x01]

/ Perform location specific checks 
0x0146 (0x0886): (0x01) Gosub 0x03a3

/ Set the player's target location to be the same as the current location
0x0149 (0x0889): (0x09) Set var[0x44] = var[0x43]

/ Perform location specific checks (again as some statuses would have changed the first
/ time around - has the consequence of adding 2 to various counters when the location
/ description is printed e.g. turns spent looking at the myriad of images draining the 
/ players sanity)
0x014c (0x088c): (0x01) Gosub 0x03a3

/ Branch if the player can see and print the location description -
/ eyes open and there is light (0x01)
/var[0x01] is the constant 0x01
0x014f (0x088f): (0x10) If var[0x37] == var[0x01] then Goto 0x015a

/ Unused variable set to 0x00 to indicate player cannot see
/ var[0x0b] is the constant 0x00
0x0153 (0x0893): (0x09) Set var[0x61] = var[0x0b]

/ Print message  "\nYou cannot see\n "
0x0156 (0x0896): (0x05) Print message (constant) 0x18

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0158 (0x0898): (0x00) Goto 0x0190

**************************************************************************

/ Set the variable to the description offset - all location descriptions 
/ will be 0x1f4 + <location id>
0x015a (0x089a): (0x08) Set var[0x5d] = (constant) 0x1f4

/ Add on the location id to the description offset
0x015e (0x089e): (0x0a) Set var[0x5d] += var[0x43]

/ Print message  "\nYou are "
0x0161 (0x08a1): (0x05) Print message (constant) 0x1e

/ Print the location description
0x0163 (0x08a3): (0x04) Print message var[0x5d]

/ Print message  ".\n "
0x0165 (0x08a5): (0x05) Print message (constant) 0x1f

/ Unused variable set to 0x01 to indicate player cannot see location
/ var[0x01] is the constant 0x01
0x0167 (0x08a7): (0x09) Set var[0x61] = var[0x01]

/ Branch ahead if the slippery slime is NOT in the player's current 
/ location
0x016a (0x08aa): (0x11) If var[0x40] != var[0x43] then Goto 0x0170

/ Print message  "The ground is very slippery\n "
0x016e (0x08ae): (0x05) Print message (constant) 0xa2

/ Branch if the location's first supplementary message is not set (0x00)
/ var[0x0b] is the constant 0x00
0x0170 (0x08b0): (0x10) If var[0x4e] == var[0x0b] then Goto 0x0178

/ Print the location's first supplementary message
0x0174 (0x08b4): (0x04) Print message var[0x4e]

/ Print message  "\n "
0x0176 (0x08b6): (0x05) Print message (constant) 0x28

/ Branch if the location's second supplementary message is not set (0x00)
/ var[0x0b] is the constant 0x00
0x0178 (0x08b8): (0x10) If var[0x4d] == var[0x0b] then Goto 0x0180

/ Print the location's second supplementary message
0x017c (0x08bc): (0x04) Print message var[0x4d]

/ Print message  "\n "
0x017e (0x08be): (0x05) Print message (constant) 0x28

/ Branch if the dwarf is NOT following the player (0x00)
/ var[0x0b] is the constant 0x00
0x0180 (0x08c0): (0x10) If var[0x1a] == var[0x0b] then Goto 0x0186

/ Dwarf IS following the player (0x01)

/ Print message  "A dwarf is following you\n "
0x0184 (0x08c4): (0x05) Print message (constant) 0x92

/ Set the base message id for objects that will be described 
/ when in a location (as opposed to the inventory).  The object 
/ id gets added to this offset to print the object's description 
/ for when in a location 
0x0186 (0x08c6): (0x08) Set var[0x38] = (constant) 0x141

/ Set the player's target location to be the same as the 
/ player's current location
0x018a (0x08ca): (0x09) Set var[0x44] = var[0x43]

/ TODO 
0x018d (0x08cd): (0x01) Gosub 0x156e


/ Set the player's target location to be the same as the 
/ player's current location
0x0190 (0x08d0): (0x09) Set var[0x44] = var[0x43]

/ Perform location specific checks 
0x0193 (0x08d3): (0x01) Gosvub 0x03a3
0x0196 (0x08d6): (0x10) If var[0x46] == var[0x0b] then Goto 0x01a6
0x019a (0x08da): (0x0a) Set var[0x46] += var[0x01]
0x019d (0x08dd): (0x19) If var[0x43] != (constant) 0x17 then Goto 0x01a6

/ Branch if this is the first turn that the Rakshasa have appeared
/ (coundown starts at 3)
/ var[0x03] is the constant 0x03
0x01a1 (0x08e1): (0x10) If var[0x46] == var[0x03] then Goto 0x11a5

**************************************************************************
* Decrement the number of turns for which the player will be deaf
**************************************************************************

/ Branch if the player is not currently deaf (0x00)
/ var[0x0b] is the constant 0x00
0x01a6 (0x08e6): (0x10) If var[0x17] == var[0x0b] then Goto 0x01ad

/ Player is deaf (0x01)

/ Decrement the number of remaining turns that they are deaf
0x01aa (0x08ea): (0x0b) Set var[0x17] -= var[0x01]

**************************************************************************
* Decrement the number of turns until the torch burns out
**************************************************************************

/ Branch if the "driftwood" / "torch" is not burning (0x00)
/ var[0x0b] is the constant 0x00
0x01ad (0x08ed): (0x10) If var[0x36] == var[0x0b] then Goto 0x01cc

/ Torch is burning

/ Decrement the remaining turns until the torch burns out
0x01b1 (0x08f1): (0x0b) Set var[0x36] -= var[0x01]

/ Set the temporary variable to the object id for the "drfitwood " / "torch" (0x4c)
0x01b4 (0x08f4): (0x08) Set var[0x1e] = (constant) 0x4c

/ Get the current location of the "driftwood" / "torch"
0x01b7 (0x08f7): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "driftwood" / "torch" is NOT in the player's inventory
/ var[0x07] is the constant 0xfe
0x01ba (0x08fa): (0x12) If var[0x1f] < var[0x07] then Goto 0x01cc

/ "driftwood" / "torch" IS in the player's inventory

/ Branch if the remaining number of turns before it burns out is 9 
/ and print "The wood flickers"
0x01be (0x08fe): (0x18) If var[0x36] == (constant) 0x09 then Goto 0x01ca

/ It's not 9 turns before the wood burns out

/ Branch if the number of turns before it burns out is not 0
/ var[0x0b] is the constant 0x00
0x01c2 (0x0902): (0x11) If var[0x36] != var[0x0b] then Goto 0x01cc

/ Torch just went from 0x01 to 0x00 turns left so print a message

/ Print message  "\nThe burning branch is going out! "
0x01c6 (0x0906): (0x05) Print message (constant) 0xaa

/ Move to the next check
0x01c8 (0x0908): (0x00) Goto 0x01cc

/ Print message  "\nThe wood flickers "
0x01ca (0x090a): (0x05) Print message (constant) 0xa9

**************************************************************************
* Decrement the number of turns until the boulder stops rolling
**************************************************************************

/ Branch if the boulder is not currently rolling down at the player (0x00)
/ var[0x0b] is the constant 0x00
0x01cc (0x090c): (0x10) If var[0x13] == var[0x0b] then Goto 0x01dd

/ Boulder IS rolling down at the player

/ Decrement the number of turns until the boulder stops rolling
0x01d0 (0x0910): (0x0b) Set var[0x13] -= var[0x01]

/ Branch if the player has dodged the boulder and it's now below them
0x01d3 (0x0913): (0x12) If var[0x13] < var[0x04] then Goto 0x01db

/ Boulder is still above the player

/ Print message  "\nYou can hear a boulder rolling down from above\n "
0x01d7 (0x0917): (0x05) Print message (constant) 0xb4

/ Skip the next message
0x01d9 (0x0919): (0x00) Goto 0x01dd

/ Print message  "\nSounds of a bounding boulder echo up from below\n "
0x01db (0x091b): (0x05) Print message (constant) 0xb5

**************************************************************************
* Decrement the number of turns until the gem sucks the player's sanity into it
**************************************************************************

/ Branch if the gem is sucking the player's sanity
/ var[0x0b] is the constant 0x00
0x01dd (0x091d): (0x10) If var[0x2b] == var[0x0b] then Goto 0x01f5

/ Gem IS sucking the player's sanity (0x01)

/ Print message  "\nThe gem is attacking your mind\n "
0x01e1 (0x0921): (0x05) Print message (constant) 0xc7

/ Decrement the number of turns until the gem sucks the player's sanity
0x01e3 (0x0923): (0x0b) Set var[0x2b] -= var[0x01]

/ Branch if the remaining turns are greater than 0
/ var[0x0b] is the constant 0x00
0x01e6 (0x0926): (0x13) If var[0x2b] > var[0x0b] then Goto 0x01f5

/ Remaining turns just set to zero

/ Print message  "\nYour mind is sucked into the gem\n "
0x01ea (0x092a): (0x05) Print message (constant) 0xe8

/ Set the temporary variable to the object id for the gem (0x98)
0x01ec (0x092c): (0x08) Set var[0x1e] = (constant) 0x98

/ Branch if gem's location is destroyed / out of game (0xe1)
/ var[0xe1] is the constant 0xe1
0x01ef (0x092f): (0xe2) Set list#2[var[0x1e]] = var[0x09] (list address 0x0740)

/ Gem is NOT destroyed

/ Kill the player
0x01f2 (0x0932): (0x00) Goto 0x12e7

**************************************************************************
* Increment the number of turns the player has been in the dark
* (gets reset later to 0x00 if the player is not in the dark)
**************************************************************************

/ Increment the number of turns that the player has been in the dark
0x01f5 (0x0935): (0x0a) Set var[0x1d] += var[0x01]

/ Branch if the player has been in the dark for less than 4 turns
/ var[0x04] is the constant 0x04
0x01f8 (0x0938): (0x12) If var[0x1d] < var[0x04] then Goto 0x0202

/ Print message  "\nA ghoul emerges from the dark and eats you! "
0x01fc (0x093c): (0x05) Print message (constant) 0x100

/ Kill the player
0x01ff (0x093f): (0x00) Goto 0x12e7

**************************************************************************
* Decrement the number of turns that the player will be invisible
**************************************************************************

/ Branch if the player is NOT invisible (0x00)
/ var[0x0b] is the constant 0x00
0x0202 (0x0942): (0x10) If var[0x34] == var[0x0b] then Goto 0x0210

/ Decrement the remaining turns that the player will be invisible
0x0206 (0x0946): (0x0b) Set var[0x34] -= var[0x01]

/ Branch if the remaining turns are greater than zero (still invisible)
/ var[0x0b] is the constant 0x00
0x0209 (0x0949): (0x13) If var[0x34] > var[0x0b] then Goto 0x0210

/ Player just became visible again

/ Print message  "\nYou are visible again!\n "
0x020d (0x094d): (0x05) Print message (constant) 0x106

**************************************************************************
* Process the status of the black spheres
*************************************************************************

/ Branch if the first black sphere is destroyed (0xe1) or not following the player (0xab)
0x0210 (0x0950): (0x1b) If var[0x14] > (constant) 0x09 then Goto 0x0230

/ First black sphere IS following the player (0x00 - 0x08)

/ Branch if the second sphere is NOT in the player's current location
0x0214 (0x0954): (0x11) If var[0x15] != var[0x43] then Goto 0x0223

/ First sphere will destory the second sphere before it starts following the player

/ Print message  "\nThe black spheres destroy each other "
0x0218 (0x0958): (0x05) Print message (constant) 0x12b

/ Set the status of the first sphere to destroyed (0xe1)
/ var[0x09] is the constant 0xe1
0x021b (0x095b): (0x09) Set var[0x14] = var[0x09]

/ Set the status of the second sphere to destroyed (0xe1)
/ var[0x09] is the constant 0xe1
0x021e (0x095e): (0x09) Set var[0x15] = var[0x09]

/ Skip the remaining black sphere checks
0x0221 (0x0961): (0x00) Goto 0x0242

**************************************************************************

/ Decrement the number of turns until the first black sphere swallows the player
0x0223 (0x0963): (0x0b) Set var[0x14] -= var[0x01]

/ Branch if the first black sphere has no remaining turns until it 
/ swallows the player and print "The sphere swallows you" and kill 
/ the player
0x0226 (0x0966): (0x10) If var[0x14] == var[0x0b] then Goto 0x1623

/ Still some remaining turns left until the black sphere swallows the player

/ Print message  "\nA black sphere follows you "
0x022b (0x096b): (0x05) Print message (constant) 0x12a

/ Skip the remaining black sphere checks
0x022e (0x096e): (0x00) Goto 0x0242

**************************************************************************

/ Branch if the second black sphere is destroyed (0xe1) or not following the player (0xab)
0x0230 (0x0970): (0x1b) If var[0x15] > (constant) 0x09 then Goto 0x0242

/ Second black sphere IS following the player (0x00 - 0x08)
0x0234 (0x0974): (0x10) If var[0x14] == var[0x43] then Goto 0x0218

/ Decrement the number of turns until the second black sphere swallows the player
0x0238 (0x0978): (0x0b) Set var[0x15] -= var[0x01]

/ Branch if the second black sphere has no remaining turns until it 
/ swallows the player and print "The sphere swallows you" and kill 
/ the player
0x023b (0x097b): (0x10) If var[0x15] == var[0x0b] then Goto 0x1623

/ Print "A black sphere follows you" and skip to the next check
0x0240 (0x0980): (0x00) Goto 0x022b

**************************************************************************
* Process the status of the walls in the east crusher room
*************************************************************************

/ Branch if the walls aren't about to crush the player (0x00) in 
/ the "east crusher room" (0xaf)
0x0242 (0x0982): (0x10) If var[0x35] == var[0x0b] then Goto 0x027c

/ Branch if the walls have been wedged and the bars have lifted (0x05)
0x0246 (0x0986): (0x13) If var[0x35] > var[0x04] then Goto 0x027c

/ Increment the number of turns that the player has been stuck in the 
/ "east crusher room" (it's actually number of turns + 1)
/ var[0x01] is the constant 0x01
0x024a (0x098a): (0x0a) Set var[0x35] += var[0x01]

/ Branch if the it's NOT the first turn trapped here
/ var[0x02] is the constant 0x02
0x024d (0x098d): (0x11) If var[0x35] != var[0x02] then Goto 0x0254

/ First turn trapped in the east crusher room

/ Print message  "Iron bars slam down to block your escape "
0x0251 (0x0991): (0x05) Print message (constant) 0x126

/ Branch if it's NOT the second turn that the player has been stuck in the 
/ "east crusher room" (it's actually number of turns + 1)
/ var[0x03] is the constant 0x03
0x0254 (0x0994): (0x11) If var[0x35] != var[0x03] then Goto 0x025b

/ Second turn trapped in the east crusher room

/ Print message  "The walls at the far end clash together "
0x0258 (0x0998): (0x05) Print message (constant) 0x122

/ Branch if it's the fourth turn and the walls are wedged (can'T
/ get to being value 5 if they walls are not wedged before the 
/ player is killed)
0x025b (0x099b): (0x11) If var[0x35] != var[0x05] then Goto 0x0262

/ Fourth turn but walls are wedged

/ Print message  "The bars lift "
0x025f (0x099f): (0x05) Print message (constant) 0x127

/ Branch if it's NOT the third turn turn 
/ var[0x04] is the constant 0x04
0x0262 (0x09a2): (0x11) If var[0x35] != var[0x04] then Goto 0x027c

/ Number of turns in the east crusher room as reached 4 so check if 
/ the player has wedge the room 

/ Print message  "The walls near you grind together "
0x0266 (0x09a6): (0x05) Print message (constant) 0x123

/ Set the temporary variable to to the object id for the "wedge" (0x56)
0x0269 (0x09a9): (0x08) Set var[0x1e] = (constant) 0x56

/ Get the current location of the "wedge"
0x026c (0x09ac): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the wedge IS in the player's current lcoation
0x026f (0x09af): (0x10) If var[0x1f] == var[0x43] then Goto 0x0279

/ Wedge is NOT in the player's current location

/ Set the status of the walls to crush the player (0x00)
/ var[0x0b] is the constant 0x00
0x0273 (0x09b3): (0x09) Set var[0x35] = var[0x0b]

/ Kill the player
0x0276 (0x09b6): (0x00) Goto 0x12e7

**************************************************************************

/ Wedge IS in the same location as the player and stopping the walls
/ crushing the player (player lives)

/ Print message  "but they're wedged! "
0x0279 (0x09b9): (0x05) Print message (constant) 0x124

**************************************************************************
* Check the status of the camped orcs
**************************************************************************

/ Branch if the orcs are NOT camped around the player (0x00)
/ and get the next command
/ var[0x0b] is the constant 0x00
0x027c (0x09bc): (0x10) If var[0x0f] == var[0x0b] then Goto 0x028f

/ Orcs ARE camped around the player

/ Increment the number of turns that the orcs have been camped around the player 
/ (it's actually number of turns + 1)
0x0280 (0x09c0): (0x0a) Set var[0x0f] += var[0x01]

/ Branch if the orcs have not been camped around the player for four turns
/ and get the next command
/ var[0x05] is the constant 0x05
0x0283 (0x09c3): (0x11) If var[0x0f] != var[0x05] then Goto 0x028f

/ Orcs have been camped for 4 turns

/ Print message  "The orcs run towards you and kill you "
0x0287 (0x09c7): (0x05) Print message (constant) 0xde

/ Reset the orcs to NOT camped around the player (0x00)
/ var[0x0b] is the constant 0x00
0x0289 (0x09c9): (0x09) Set var[0x0f] = var[0x0b]

/ Kill the player
0x028c (0x09cc): (0x00) Goto 0x12e7

**************************************************************************

/ Print message  "\nWhat next?\n "
0x028f (0x09cf): (0x05) Print message (constant) 0x02

0x0291 (0x09d1): (0x09) Set var[0x3c] = var[0x01]
0x0294 (0x09d4): (0x09) Set var[0x44] = var[0x43]

/ Clear the gosub stack as this turn is over - for instances where
/ there has been a gosub and there was no return because e.g. there was 
/ a goto back to another part of the game
0x0297 (0x09d7): (0x06) Function - Clear Stack (0x06)

/ Get user input and store results after parsing against dictionary
0x0299 (0x09d9): (0x07) Input - results in word1 var[0x30], word2 var[0x31], word3 var[0x32], count var[0x33]

/ Increment the number of turns/commands entered by the player
/ var[0x01] is the constant 0x01
0x029e (0x09de): (0x0a) Set var[0x57] += var[0x01]

0x02a1 (0x09e1): (0x19) If var[0x31] != (constant) 0x0d then Goto 0x02a8
0x02a5 (0x09e5): (0x08) Set var[0x31] = (constant) 0x7a

/ Branch if nothing was entered (word count is zero) and wait for input again
/ var[0x0b] is the constant 0x00
0x02a8 (0x09e8): (0x10) If var[0x33] == var[0x0b] then Goto 0x0297

/ At least one word was entered (not necessarily matched against the dictionary)

/ Branch if the first word (well no words) were matched and 
/ print "I don't understand"
/ var[0x0b] is the constant 0x00
0x02ac (0x09ec): (0x10) If var[0x30] == var[0x0b] then Goto 0x02cc

/ At least one word was entered and matched

/ Branch if the first word entered IS a verb or object
0x02b0 (0x09f0): (0x1a) If var[0x30] < (constant) 0x8c then Goto 0x02b9

/ Branch if the first word entered IS a colour (e.g. red.... silver)
0x02b4 (0x09f4): (0x1a) If var[0x30] < (constant) 0x94 then Goto 0x13c0

/ Branch if the first word entered IS "password!" or "agaliarept" (0xc3)
/ which are both valid passwords.  Call the password processing routine
0x02b9 (0x09f9): (0x18) If var[0x30] == (constant) 0xc3 then Goto 0x13b3

/ Branch if the first word entered IS "hammer" or "mallet" (0x4e)
/ and treat it as though it's a "close" or "lock" or "shut"
0x02be (0x09fe): (0x18) If var[0x30] == (constant) 0x4e then Goto 0x0cef

/ Branch if the first word entered IS "bag" or "nails" or "nail" (0x50)
/ and treat it as though it's a "close" or "lock" or "shut"
0x02c3 (0x0a03): (0x18) If var[0x30] == (constant) 0x50 then Goto 0x0cef

/ Branch if the first word entered is a verb and process it
0x02c8 (0x0a08): (0x1a) If var[0x30] < (constant) 0x46 then Goto 0x02d1

/ First word entered is NOT a verb

/ Print message  "I don't understand "
0x02cc (0x0a0c): (0x05) Print message (constant) 0x03

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x02ce (0x0a0e): (0x00) Goto 0x0149

**************************************************************************
* First word is a verb
**************************************************************************

/ Branch if the first word is a verb that can exist without an object
/ (0x01 to 0x27) e.g. North or listen or inventory
0x02d1 (0x0a11): (0x1a) If var[0x30] < (constant) 0x28 then Goto 0x02e2

/ Branch if there are less than two words as anything above "0x28"
/ needs an object e.g. take <object> or drop <object>
0x02d5 (0x0a15): (0x12) If var[0x33] < var[0x02] then Goto 0x02dd

/ Branch if the second word is not another verb but some kinda of object
0x02d9 (0x0a19): (0x1b) If var[0x31] > (constant) 0x45 then Goto 0x02e2

/ Second word IS a verb

/ Print message  "Please be more specific "
0x02dd (0x0a1d): (0x05) Print message (constant) 0x04

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x02df (0x0a1f): (0x00) Goto 0x0149

**************************************************************************

0x02e2 (0x0a22): (0x12) If var[0x30] < var[0x02] then Goto 0x02fe
0x02e6 (0x0a26): (0x1a) If var[0x31] < (constant) 0x9b then Goto 0x02fe
0x02ea (0x0a2a): (0x1b) If var[0x31] > (constant) 0xc8 then Goto 0x02fe
0x02ee (0x0a2e): (0xa1) Set var[0x1f] = list#1[var[0x31]] (list address 0x066a)
0x02f1 (0x0a31): (0x10) If var[0x1f] == var[0x43] then Goto 0x02fe
0x02f5 (0x0a35): (0x13) If var[0x1f] > var[0x07] then Goto 0x02fe
/ Print message  "You're not close enough "
0x02f9 (0x0a39): (0x05) Print message (constant) 0x37

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x02fb (0x0a3b): (0x00) Goto 0x0190

**************************************************************************
* Command handler: Process the command in the first word
**************************************************************************

/ Branch if the first word is a direction e.g N, NE... or "upwards", "climb",
/ "downwards", "fall", "jump", "inside", "into", "outside" or "cross"
0x02fe (0x0a3e): (0x1a) If var[0x30] < (constant) 0x0e then Goto 0x0656

/ Branch if the first word is "take", "pick" or "steal" (0x28)
0x0303 (0x0a43): (0x18) If var[0x30] == (constant) 0x28 then Goto 0x0a0d

/ Branch if the first word is "drop" (0x29)
0x0308 (0x0a48): (0x18) If var[0x30] == (constant) 0x29 then Goto 0x0a95

/ Branch if the first word is "inventory" (0x15)
0x030d (0x0a4d): (0x18) If var[0x30] == (constant) 0x15 then Goto 0x0ae5

/ Branch if the first word is "look" (0x17)
0x0312 (0x0a52): (0x18) If var[0x30] == (constant) 0x17 then Goto 0x0b06

/ Branch if the first word is "search" or "examine" (0x23)
0x0317 (0x0a57): (0x18) If var[0x30] == (constant) 0x23 then Goto 0x0e11

/ Branch if the first word is "hurl" or "throw" (0x2b)
0x031c (0x0a5c): (0x18) If var[0x30] == (constant) 0x2b then Goto 0x0b25

/ Branch if the first word is "quit" (0x19)
0x0321 (0x0a61): (0x18) If var[0x30] == (constant) 0x19 then Goto 0x0bfb

/ Branch if the first word is "light", "ignite" or "burn" (0x33)
0x0326 (0x0a66): (0x18) If var[0x30] == (constant) 0x33 then Goto 0x0c10

/ Branch if the first word is "extinguish" (0x34)
0x032b (0x0a6b): (0x18) If var[0x30] == (constant) 0x34 then Goto 0x0c70

/ Branch if the first word is "tie" or "fasten" (0x36)
0x0330 (0x0a70): (0x18) If var[0x30] == (constant) 0x36 then Goto 0x0c94

/ Branch if the first word is "open", "slide" or "unlock" (0x2f)
0x0335 (0x0a75): (0x18) If var[0x30] == (constant) 0x2f then Goto 0x0cb3

/ Branch if the first word is "apply", "rub", "wear" or "smeau" (!) (0x2a)
0x033a (0x0a7a): (0x18) If var[0x30] == (constant) 0x2a then Goto 0x0b81

/ Branch if the first word is "bite", "eat", "nibble", "swallow" or "taste" (0x31)
0x033f (0x0a7f): (0x18) If var[0x30] == (constant) 0x31 then Goto 0x0d24

/ BUG: This can never be invoked as this code is processed at 0x0317
/ Branch if the first word is "search" or "examine" (0x23)
0x0344 (0x0a84): (0x18) If var[0x30] == (constant) 0x23 then Goto 0x0dc1

/ Branch if the first word is "blow" or "play" (0x38)
0x0349 (0x0a89): (0x18) If var[0x30] == (constant) 0x38 then Goto 0x0dcc

/ Branch if the first word is "give" (0x2c)
0x034e (0x0a8e): (0x18) If var[0x30] == (constant) 0x2c then Goto 0x0e00

/ Branch if the first word is "attack", "kick", "flight", "kill", "chop", "hit" or "smash" (0x14)
0x0353 (0x0a93): (0x18) If var[0x30] == (constant) 0x14 then Goto 0x1085

/ Branch if the first word is "drink" (0x32)
0x0358 (0x0a98): (0x18) If var[0x30] == (constant) 0x32 then Goto 0x0ec0

/ Branch if the first word is "fill" (0x2d)
0x035d (0x0a9d): (0x18) If var[0x30] == (constant) 0x2d then Goto 0x0ec5

/ Branch if the first word is "empty" or "pour" (0x2e)
0x0362 (0x0aa2): (0x18) If var[0x30] == (constant) 0x2e then Goto 0x0ef0

/ BUG: This can never be invoked as this code is processed at 0x033a. Actually
/ at some point in development "wear" had a separate dictionary id from the other
/ words and they were combined to be synonyms during testing when no doubt 
/ someone typed "wear cold cream" rather than "apply" or "rub"
/ Branch if the first word is "apply", "rub", "wear" or "smeau" (!) (0x2a)
0x0367 (0x0aa7): (0x18) If var[0x30] == (constant) 0x2a then Goto 0x0f07

/ Branch if the first word is "draw", "press", "push", "rotate", "stop" or "turn" (0x35)
0x036c (0x0aac): (0x18) If var[0x30] == (constant) 0x35 then Goto 0x0f12

/ Branch if the first word is "shake" or "wave" (0x37)
0x0371 (0x0ab1): (0x18) If var[0x30] == (constant) 0x37 then Goto 0x104e

/ Branch if the first word is "score/" (0x1c)
0x0376 (0x0ab6): (0x18) If var[0x30] == (constant) 0x1c then Goto 0x11f1

/ Branch if the first word is "save" (0x1b)
0x037b (0x0abb): (0x18) If var[0x30] == (constant) 0x1b then Goto 0x11f6

/ Branch if the first word is "restore" (0x1a)
0x0380 (0x0ac0): (0x18) If var[0x30] == (constant) 0x1a then Goto 0x11fb

/ Branch if the first word is "plugh", "plover" or "sesame" or "xyzzy" (0x18)
0x0385 (0x0ac5): (0x18) If var[0x30] == (constant) 0x18 then Goto 0x1049

/ Branch if the first word is "hear" or "listen" (0x16)
0x038a (0x0aca): (0x18) If var[0x30] == (constant) 0x16 then Goto 0x125e

/ Branch if the first word is "squash", "squeeze" or "hug" (0x3a)
0x038f (0x0acf): (0x18) If var[0x30] == (constant) 0x3a then Goto 0x1402

/ Branch if the first word is "close", "lock" or "shut" (0x30)
0x0394 (0x0ad4): (0x18) If var[0x30] == (constant) 0x30 then Goto 0x0cdb

/ Branch if the first word is "bury" or "plant" (0x39)
0x0399 (0x0ad9): (0x18) If var[0x30] == (constant) 0x39 then Goto 0x1422

/ Unknown command 

/ Print "Please be more specific" (0x03)
/ var[0x03] is the constant 0x03
0x039e (0x0ade): (0x04) Print message var[0x03]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x03a0 (0x0ae0): (0x00) Goto 0x0190

**************************************************************************
* Perform location specific checks 
**************************************************************************
0x03a3 (0x0ae3): (0x09) Set var[0x5e] = var[0x0b]

/ Set the temporary variable to the dictionary id for the "a veneered cross" (0x7a)
0x03a6 (0x0ae6): (0x08) Set var[0x1e] = (constant) 0x7a

/ Get the current location of the "veneered cross"
0x03a9 (0x0ae9): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "veneered cross" is NOT in the player's inventory (0xfe) or being worn (0xff)
/ var[0x07] is the constant 0xfe
0x03ac (0x0aec): (0x12) If var[0x1f] < var[0x07] then Goto 0x03b3

/ The "veneered cross" is in the player's inventory (0xfe)

/ Add one to the number of crosses / crucifixes carried
/ Player needs just one to stop the vampire biting them or two to keep the wights back
/ var[0x01] is the constant 0x01
0x03b0 (0x0af0): (0x0a) Set var[0x5e] += var[0x01]

/ Set the temporary variable to the dictionary id for the "a jewel-encrusted crucifix" (0x7b)
0x03b3 (0x0af3): (0x08) Set var[0x1e] = (constant) 0x7b

/ Get the current location of the "jewel-encrusted crucifix"
0x03b6 (0x0af6): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "veneered cross" is NOT in the player's inventory (0xfe) or being worn (0xff)
/ var[0x07] is the constant 0xfe
0x03b9 (0x0af9): (0x12) If var[0x1f] < var[0x07] then Goto 0x03c3

/ Add one to the number of crosses / crucifixes carried
/ Player needs just one to stop the vampire biting them or two to keep the wights back
/ var[0x01] is the constant 0x01
0x03bd (0x0afd): (0x0a) Set var[0x5e] += var[0x01]

/ REDUNDANT - basically a NOP!
0x03c0 (0x0b00): (0x09) Set var[0x65] = var[0x65]

/ Reset the location's first supplementary message / description to nothing (0x00)
/ var[0x0b] is the constant 0x00
0x03c3 (0x0b03): (0x09) Set var[0x4c] = var[0x0b]

/ Reset the location's second supplementary message / description to nothing (0x00)
/ var[0x0b] is the constant 0x00
0x03c6 (0x0b06): (0x09) Set var[0x4d] = var[0x0b]

/ Reset the status that the player cannot see (0x00)
/ (will be worked out later)
/ var[0x0b] is the constant 0x00
0x03c9 (0x0b09): (0x09) Set var[0x37] = var[0x0b]

/ Branch if the player's current location is "on stepping stones leading 
/ north to an island" (0x37)
0x03cc (0x0b0c): (0x18) If var[0x43] == (constant) 0x37 then Goto 0x040a

/ Branch if the player's current location is " on the floor of a cavern, 
/ beside a clump of evil green toadstools. Liquid slime oozes from the 
/ north and paths lead south and up" (0x38)
0x03d0 (0x0b10): (0x18) If var[0x43] == (constant) 0x38 then Goto 0x040a

/ Branch if the player is in a location before "on a sturdy bridge across a cave" (0xa1)
0x03d4 (0x0b14): (0x1a) If var[0x43] < (constant) 0xa1 then Goto 0x03dc

/ Branch if the player is in a location before "below a sign "Your fate is sealed!" (0xa9)
/ Basically branch if the player is in any of the following locations:
/ 0xa1 :  on a wide ledge outside a tunnel entrance. A wooden bridge leads north across a 
/         deep cavern and steps lead up and down
/ 0xa2 : on a sturdy bridge across a cave
/ 0xa3 : on a wide ledge between a sturdy bridge and a fissure in the rock. You keep bumping into objects that you can't see
/ 0xa4 : in a small fissure that narrows as it winds north
/ 0xa5 : crawling through tiny cracks which lead west and south
/ 0xa6 : in the strong room. An iron door leads west and a narrow crack splits the east wall
/ 0xa7 : on cliff steps, broken by rock-falls
/ 0xa8 : south a vast cavern floor, beside some small grey mushrooms. Tiny footprints lead north

0x03d8 (0x0b18): (0x1a) If var[0x43] < (constant) 0xa9 then Goto 0x040a

/ Branch if the player is outside or in a location e.g. with windows and work 
/ out what's happening with the sun
0x03dc (0x0b1c): (0x1a) If var[0x43] < (constant) 0x36 then Goto 0x03f1

/ Branch if the player's current location is one of the following:
/ 0xa9 : in a viewing gallery over a deep pit. A chute leads down
/ 0xaa : below a sign "Your fate is sealed! Your only hope is to descend into the Central Dungeon and collect 9 gems. Succeed and you will be free!"
/ 0xab : in a dead-end dark room
/ 0xac : in a dead-end dark room, below a black pedastal
/ 0xad : in a treasure chamber
/ 0xae : in the west crusher room beside a door into a treasure chamber
/ 0xaf : in the east crusher room beside an opening back to the ramp
/ 0xb0 : in a circular room of red-gold metal. Gold rings cover the floor
/ 0xb1 : in a dead end, below a gallows tree from which a bloodless corpse hangs by one foot
/ 0xb2 : on the brink of a deep, dark pit
/ 0xb3 : in a deep, eerie-dark pit
/ 0xb4 : in a small soft room between five large round fleshy pillars
/ 0xb5 : in a dusty room, entered from the west and with a long shelf along the east wall
/ 0xb6 : in a short east-west corridor
/ 0xb7 : in a room surfaced with black glass
/ 0xb8 : in the box room
/ 0xb9 : in the condemned cell. The only way out is to go west
/ 0xba : in the guard room. An exit leads north
/ 0xbb : in the "Skinner box": a blank room with no way out - just nine buttons in a vertical line up one wall. The buttons are numbered 1 to 9 and a discrete notice reads "choose the best"
/ 0xbc : in the reward room. This is empty too and has only 5 numbered buttons, labelled as follows...
/ 0xbd : in the statue room. An incomprehensible abstract sculpture of hoops, spirals and loops sprawls around on a small circular platform in the middle of the floor. The entrance is to the west
/ 0xbe : in an ornate, dead-end room
/ 0xbf : in the "Exit" chamber. You seem to have survived the Central Dungeon! There is only one way out...
/ 0xc0 : in an empty room
/ 0xc1 : in an empty room
/ 0xc2 : in a treasure vault. A low crawl leads west
/ 0xc3 : in the Salt Cellar, surrounded by pillars of salt
/ 0xc4 : 696
/ 0xc5 : 697
/ 0xc6 : 698
/ 0xc7 : 699
0x03e0 (0x0b20): (0x1a) If var[0x43] < (constant) 0xc8 then Goto 0x040f

/ Branch if the location is one of the following:
/ 0xc8 : on the ceiling of a fine room. A chandelier lies beside you and 
/        the floor of the room is far above
/ 0xc9 : on the carpetted floor of a comfortable homely room, beside a door 
/        to the east.
/ 0xca : in a large store room. You realise that this is_the ideal place to 
/        any treasures that you_find, so as to get full points for them. 
/ 0xcb : in a smooth, round north-south passage. A flickering light is visible to the north
/ 0xcc : at a junction in the round, north-south passage, illuminated by a 
/        jet of flame from the floor.%To the is a treasure vault, completely filled with valuables of every kind
/ 0xcc : at a junction in the round, north-south passage, illuminated by a jet of flame from the floor. To the east is a treasure 
/        vault, completely filled with valuables of every kind
/ 0xcd : in a north-south passage. A dry red stain spreads from beneath a fallen stone
0x03e4 (0x0b24): (0x1a) If var[0x43] < (constant) 0xce then Goto 0x040a

/ Branch if the player is in one of the special locations e.g. 
/ 0xd9 : 717
/ 0xda : 718
/ 0xdb : 719
/ 0xdc : in Valhalla
/ 0xdd : in Hades
0x03e8 (0x0b28): (0x1b) If var[0x43] > (constant) 0xd8 then Goto 0x040a

/ Location id is between 0xce and 0xde - in all these locations "A faint light shines in"
/ 0xce : in a hot alcove, lit by the flames of a fire elemental
/ 0xcf : in a huge cave of glistering rock. New passages lead north and south
/ 0xd0 : in a corridor bending south and east
/ 0xd1 : at the bottom of a deep chasm where the earth has been split assunder by a massive explosion. Narrow cracks lead west and down
/ 0xd2 : in the right eye-socket of the stone face
/ 0xd3 : in the left eye-socket of the stone face
/ 0xd4 : in a wide, smelly passage opening to the outside, high above the river
/ 0xd5 : in a winding, sticky east-west passage to the outside
/ 0xd6 : in a winding, sticky east-west passage to the outside
/ 0xd7 : inside a large wooden box. A small door leads deeper into the box
/ 0xd8 : in a gloomy cavern, between rows of jagged, pointed stalagmites. A fetid odour drifts from a wide round passage to the north

/ Set the second supplementary message to "A faint light shines in" (0x19)
0x03ec (0x0b2c): (0x08) Set var[0x4d] = (constant) 0x19

/ TODO 
0x03ef (0x0b2f): (0x00) Goto 0x0406

**************************************************************************
* Player is outside, work out the status of the sun based on number of turns
**************************************************************************

/ Branch if the player has had less than 70 turns (0x46) - no sun status
0x03f1 (0x0b31): (0x1a) If var[0x57] < (constant) 0x46 then Goto 0x0406

/ Player has had 70 or more turns

/ Set the second supplementary message to "The sun hangs low in the sky" (0x1a)
0x03f5 (0x0b35): (0x08) Set var[0x4d] = (constant) 0x1a

/ Branch if the player has had less than 90 turns (0x5a) and go with "The sun hangs low in the sky"
0x03f8 (0x0b38): (0x1a) If var[0x57] < (constant) 0x5a then Goto 0x0406

/ Player has had 90 or more turns

/ Set the second supplementary message to "The sun is setting!"
0x03fc (0x0b3c): (0x08) Set var[0x4d] = (constant) 0x1b

/ Branch if the player has had less than 100 turns (0x64) and go with "The sun is setting!"
0x03ff (0x0b3f): (0x1a) If var[0x57] < (constant) 0x64 then Goto 0x0406

/ Player has had 100 or more turns

/ Set the second supplementary message to "The sun sets!"
0x0403 (0x0b43): (0x08) Set var[0x4d] = (constant) 0x75

/ Branch if the player has had more than 100 turns (0x64) and
/ and reset the second supplementary message to nothing
0x0406 (0x0b46): (0x1b) If var[0x57] > (constant) 0x64 then Goto 0x040f

/ Set the status that the player can see as the sun hasn't set yet (0x01)
/ var[0x01] is the constant 0x01
0x040a (0x0b4a): (0x09) Set var[0x37] = var[0x01]

/ Skip the second supplementary message reset
0x040d (0x0b4d): (0x00) Goto 0x0412

/ After the 100th turn, reset the second supplementary message to Nothing
/ var[0x0b] is the constant 0x00
0x040f (0x0b4f): (0x09) Set var[0x4d] = var[0x0b]

**************************************************************************
* Check if the player has a lit torch (driftwood)
**************************************************************************

/ Set the temporary variable to the object id for the torch / driftwood (0x4c)
0x0412 (0x0b52): (0x08) Set var[0x1e] = (constant) 0x4c

/ Get the current location of the torch / driftwood
0x0415 (0x0b55): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the torch / driftwood is in the player's current location 
0x0418 (0x0b58): (0x10) If var[0x1f] == var[0x44] then Goto 0x0420

/ Torch / driftwood is NOT in the player's current location

/ Branch if the torch / driftwood is in any other location other than the inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x041c (0x0b5c): (0x12) If var[0x1f] < var[0x07] then Goto 0x0427

/ Torch / driftwood IS in the player's inventory

/ Branch if the torch / driftwood is NOT lit (0x00)
/ var[0x0b] is the constant 0x00
0x0420 (0x0b60): (0x10) If var[0x36] == var[0x0b] then Goto 0x0427

/ Torch is lit (0x01)

/ Set the status that the player can see (0x01)
/ var[0x01] is the constant 0x01
0x0424 (0x0b64): (0x09) Set var[0x37] = var[0x01]

**************************************************************************
* Check if the player has the gilt miner's helmet with a lamp 
**************************************************************************

/ Set the temporary variable to the object id for the "gilt miner's helmet with a lamp" (0x76)
0x0427 (0x0b67): (0x08) Set var[0x1e] = (constant) 0x76

/ Get the current location of the "gilt miner's helmet with a lamp"
0x042a (0x0b6a): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the" "gilt miner's helmet with a lamp" is in the player's current location 
0x042d (0x0b6d): (0x10) If var[0x1f] == var[0x44] then Goto 0x0435

/ Branch if the "gilt miner's helmet with a lamp" is in any other location other than the inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x0431 (0x0b71): (0x12) If var[0x1f] < var[0x07] then Goto 0x043c

/ Branch if the "gilt miner's helmet with a lamp" doesn't have the captured wisp (0x00)
/ var[0x0b] is the constant 0x00
0x0435 (0x0b75): (0x10) If var[0x5c] == var[0x0b] then Goto 0x043c

/ Player has the helmet in their inventory and it has the captured wisp

/ Set the status that the player can see (0x01)
/ var[0x01] is the constant 0x01
0x0439 (0x0b79): (0x09) Set var[0x37] = var[0x01]

/ BUG - code above jumps to here without doing the wisp check... so the player can see if the helmet
/ is on the floor in their current location
/ Branch if the helmet is in the player's current location and set the status that they can see
0x043c (0x0b7c): (0x10) If var[0x1f] == var[0x43] then Goto 0x0442

/ Helmet is NOT in the player's current location - skip setting the status that they can see
0x0440 (0x0b80): (0x00) Goto 0x0445

/ Set the status that the player can see (0x01)
/ var[0x01] is the constant 0x01
0x0442 (0x0b82): (0x09) Set var[0x37] = var[0x01]

**************************************************************************
* Check if the player is in one of the dead end rooms - can only see if 
* the octopus is in the inventory or in the same location (many hands make light work!)
**************************************************************************

/ Branch if the player is NOT in either of the following:
/ 0x71 : dead-end room, painted matt black. You'll have to return the way you came
/ 0x72 : in a second dead-end black room
0x0445 (0x0b85): (0x1a) If var[0x43] < (constant) 0x71 then Goto 0x045e
0x0449 (0x0b89): (0x1b) If var[0x43] > (constant) 0x72 then Goto 0x045e

/ Player IS in one of the dead end rooms 

/ Set the temporary variable to the object id for the "cuddley octopus figurine" (0x7f)
0x044d (0x0b8d): (0x08) Set var[0x1e] = (constant) 0x7f

/ Get the current location of the "cuddley octopus figurine"
0x0450 (0x0b90): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "cuddley octopus figurine" IS in the player's current location 
0x0453 (0x0b93): (0x10) If var[0x1f] == var[0x43] then Goto 0x045e

/ Branch if the "cuddley octopus figurine" IS in the player's inventory
0x0457 (0x0b97): (0x10) If var[0x1f] == var[0x07] then Goto 0x045e

/ Player does NOT have the octopus and it's NOT in their current location

/ Set the status that the player cannot see (0x00)
/ var[0x0b] is the constant 0x00
0x045b (0x0b9b): (0x09) Set var[0x37] = var[0x0b]

**************************************************************************
* Check if the troll is still blocking the magnificant golden pathway
**************************************************************************

/ Branch if the player's current location is NOT "on a magnificent golden pathway 
/ running north-south through the air" (0x9d)
0x045e (0x0b9e): (0x19) If var[0x43] != (constant) 0x9d then Goto 0x046a

/ Player's current location IS "on a magnificent golden pathway 
/ running north-south through the air" (0x9d)

/ Branch if the player HAS given the troll the medallion (0x01)
/ var[0x0b] is the constant 0x00
0x0462 (0x0ba2): (0x13) If var[0x42] > var[0x0b] then Goto 0x046a

/ Player has NOT given the troll the medallion (0x00)

/ Set the first location supplementary message to "A troll blocks the bridge, 
/ palm outstretched for payment" (0x107)
0x0466 (0x0ba6): (0x08) Set var[0x4c] = (constant) 0x107

**************************************************************************
* Check if player's current location is in the wight house
**************************************************************************

/ Branch if the player's current location is NOT in the "wight house"
0x046a (0x0baa): (0x1a) If var[0x43] < (constant) 0x5e then Goto 0x0476
0x046e (0x0bae): (0x1b) If var[0x43] > (constant) 0x66 then Goto 0x0476

/ Player IS in the "wight house"

/ Set the first supplementary message to "Several wights are trying to get at you" (0x119)
0x0472 (0x0bb2): (0x08) Set var[0x4c] = (constant) 0x119

**************************************************************************
* Check if the player is near the evil giants
**************************************************************************

/ Branch if the evil giants have not fought each other and rushed off (0x01)
/ var[0x0b] is the constant 0x00
0x0476 (0x0bb6): (0x11) If var[0x27] != var[0x0b] then Goto 0x0488

/ Giants have NOT fought each other (0x00)

/ Branch if the player's current location is NOT "at the edge of the forest, 
/ beneath a particularly large tree. You can just glimpse a large clearing to the north." (0x12)
0x047a (0x0bba): (0x19) If var[0x43] != (constant) 0x12 then Goto 0x0481

/ Player IS "at the edge of the forest, beneath a particularly large tree..." (0x12)

/ Set the first supplementary message to "Two evil giants are asleep in the clearing" (0x44)
0x047e (0x0bbe): (0x08) Set var[0x4c] = (constant) 0x44

/ Branch if the player's current location is NOT "on a sturdy branch over the clearing" (0x10)
0x0481 (0x0bc1): (0x19) If var[0x43] != (constant) 0x10 then Goto 0x0488

/ Player IS "on a sturdy branch over the clearing" (0x10)

/ Set the first supplementary message to "Two fierce giants are asleep below"(0x45)
0x0485 (0x0bc5): (0x08) Set var[0x4c] = (constant) 0x45

**************************************************************************
* Check if the player's current location is "within a circle of distorted 
* monoliths" if so, set the turn counter running for when the Rakshasa appear
**************************************************************************

/ Branch if player's current location is NOT " within a circle of distorted monoliths, etched 
/ into grotesque figures by the acid rain." (0x17)
0x0488 (0x0bc8): (0x19) If var[0x43] != (constant) 0x17 then Goto 0x0493

/ Branch if the Rakshasa counter is already running (will appear when this 3)
0x048c (0x0bcc): (0x11) If var[0x46] != var[0x0b] then Goto 0x0493

/ Set the counter running for the Rakshasa to appear
0x0490 (0x0bd0): (0x09) Set var[0x46] = var[0x01]

**************************************************************************
* Check if the siren is in the player's location
**************************************************************************
/ Branch if the siren has already fled in panic after the player made themself
/ deaf with the exploding pods and moved past her
0x0493 (0x0bd3): (0x11) If var[0x52] != var[0x0b] then Goto 0x04a2

/ Branch if player's current location IS "on an east-west road beside the river and north 
/ of a flat grassy plain." (0x31) and set the supplementary message to the young girl being there
0x0497 (0x0bd7): (0x18) If var[0x43] == (constant) 0x31 then Goto 0x049f

/ Player is NOT "on an east-west road beside the river and north of a flat grassy plain." (0x31)

/ Branch if player's current location is NOT "on stepping stones leading north to an island" (0x35)
0x049b (0x0bdb): (0x19) If var[0x43] != (constant) 0x35 then Goto 0x04a2

/ Player IS "on stepping stones leading north to an island" OR 
/ "on an east-west road beside the river...."
/ Siren is in the location...

/ Set the first supplementary message to "A young girl, with flowing locks, 
/ sits on the island" (0x47)
0x049f (0x0bdf): (0x08) Set var[0x4c] = (constant) 0x47

/ Branch if the dragon has been slain (0x01)
/ var[0x0b] is the constant 0x00
0x04a2 (0x0be2): (0x11) If var[0x18] != var[0x0b] then Goto 0x04ad

/ Branch if the player's current location is NOT "in the upper chamber, warmed by 
/ a current of rising air." (0x7d)
0x04a6 (0x0be6): (0x19) If var[0x43] != (constant) 0x7d then Goto 0x04ad

/ Player IS in the "upper chamber" and dragon IS still alive

/ Set the first supplementary message to "An enormous dragon lies on a golden bed" (0x77)
0x04aa (0x0bea): (0x08) Set var[0x4c] = (constant) 0x77

**************************************************************************
* Check to see if the grotesque bloated yellow bird is on the nest
**************************************************************************

/ Branch if the grotesque bloated yellow bird is NOT on the nest (0x01)
/ var[0x0b] is the constant 0x00
0x04ad (0x0bed): (0x11) If var[0x11] != var[0x0b] then Goto 0x04b8

/ Grotesque bloated yellow bird IS on the nest (0x00)

/ Branch if the player is NOT "below a small mound which is completely dwarfed 
/ by a huge untidy nest" (0x1a)
0x04b1 (0x0bf1): (0x19) If var[0x43] != (constant) 0x1a then Goto 0x04b8

/ Player IS "below a small mound which is completely dwarfed by a huge untidy nest"

/ Set the supplementary message to " A grotesque bloated yellow bird with big ears 
/ squats on the nest" (0x78)
0x04b5 (0x0bf5): (0x08) Set var[0x4c] = (constant) 0x78

**************************************************************************
* Check to see if the dryad has sprung from the tree
**************************************************************************

/ Branch if the player has not attempted to chop down the tree 
/ and the dryad has not sprung from it
/ var[0x01] is the constant 0x01
0x04b8 (0x0bf8): (0x11) If var[0x19] != var[0x01] then Goto 0x04c3

/ Branch if the player's location is NOT "under the killer-willow tree" (0x33)
0x04bc (0x0bfc): (0x19) If var[0x43] != (constant) 0x33 then Goto 0x04c3

/ Set the first supplementary message to "A gentle dryad stands beside the tree" (0x76)
0x04c0 (0x0c00): (0x08) Set var[0x4c] = (constant) 0x76

**************************************************************************
* Process the player visiting the gallows tree
**************************************************************************

/ Branch if the player's current location is NOT "in a dead end, below a gallows tree 
/ from which a bloodless corpse hangs by one foot" (0xb1)
0x04c3 (0x0c03): (0x19) If var[0x43] != (constant) 0xb1 then Goto 0x04ca

/ Player IS "...below a gallows tree..."

/ Set the status indicator that the player HAS visited "a dead end, below a gallows tree" (0x01)
/ This changes what can be found on either corpse to the "blindfold" and "gauntlet"
/ var[0x01] is the constant 0x01
0x04c7 (0x0c07): (0x09) Set var[0x12] = var[0x01]

**************************************************************************
* Check to see if the player is blocked by a slab of rock
**************************************************************************

/ Branch if the player's current location is NOT "at a junction in a steeply 
/ sloping u-shaped passage which leads northeast and northwest. Three round
/ rocks protrude beside an opening to the east" (0x77)
0x04ca (0x0c0a): (0x19) If var[0x43] != (constant) 0x77 then Goto 0x04d5

/ Branch if the player has pushed 3 rocks (and removed the slab)
/ var[0x02] is the constant 0x02
0x04ce (0x0c0e): (0x13) If var[0x53] > var[0x02] then Goto 0x04d5

/ Player IS "at a junction in a steeply sloping u-shaped passage which leads 
/ northeast and northwest. Three round rocks protrude beside an opening to the east" (0x78)

/ Set the first supplementary message to "It's blocked by a slab of rock" (0x7d)
0x04d2 (0x0c12): (0x08) Set var[0x4c] = (constant) 0x7d

**************************************************************************
* Check to see if the player is in the damp hemispherical cave
**************************************************************************

/ Branch if the player's current location is NOT "in a damp hemispherical cave 
/ with an opening to the east" (0x78)
0x04d5 (0x0c15): (0x19) If var[0x43] != (constant) 0x78 then Goto 0x04e3

/ Player IS "in a damp hemispherical cave with an opening to the east" (0x78)

/ Set the first supplementary message to "A boulder rolls on a carpet of moss" (0x7f)
0x04d9 (0x0c19): (0x08) Set var[0x4c] = (constant) 0x7f


**************************************************************************
* Check to see if the player has pushed the boulder in the damp hemispherical cave
**************************************************************************

/ Branch if the player has NOT already pushed the boulder (0x00) in the damp hemispherical
/ cave to move the moss into a mossy lump in one corner and open the entrance
/ var[0x0b] is the constant 0x01
0x04dc (0x0c1c): (0x10) If var[0x54] == var[0x0b] then Goto 0x04e3

/ Player HAS pushed the boulder

/ Set the first supplementary message to "A mossy lump sits in one corner" (0x80)
0x04e0 (0x0c20): (0x08) Set var[0x4c] = (constant) 0x80

**************************************************************************
* Check to see if the player has opened the door in the strong room
**************************************************************************

/ Branch if the player's current location is NOT "in the strong room. 
/ An iron door leads west and a narrow crack splits the east wall" (0xa6)
0x04e3 (0x0c23): (0x19) If var[0x43] != (constant) 0xa6 then Goto 0x04ee

/ Branch if the iron door bolt is NOT slid back and the door opened (0x00)
/ var[0x0b] is the constant 0x00
0x04e7 (0x0c27): (0x10) If var[0x0c] == var[0x01] then Goto 0x04ee

/ Door still closed 

/ Set the first supplementary message to "The door is bolted" 0x86
0x04eb (0x0c2b): (0x08) Set var[0x4c] = (constant) 0x86

**************************************************************************
* Check to see if the player has turned the statue in the statue room
**************************************************************************

/ Branch if the player's current location is NOT "in the statue room...." (0xbd)
0x04ee (0x0c2e): (0x19) If var[0x43] != (constant) 0xbd then Goto 0x04f9

/ Branch if the player has NOT yet turned the statue (0x00)
/ var[0x0b] is the constant 0x00
0x04f2 (0x0c32): (0x10) If var[0x55] == var[0x0b] then Goto 0x04f9

/ Player HAS turned the statue (0x01)

/ Set the first supplementary message to "An opening leads east" (0x8a)
0x04f6 (0x0c36): (0x08) Set var[0x4c] = (constant) 0x8a

**************************************************************************
* TODO throne room
**************************************************************************

/ Branch if the player's current location is NOT "n a long throne room lined with skin..." (0x68)
0x04f9 (0x0c39): (0x19) If var[0x43] != (constant) 0x68 then Goto 0x0504

/ TODO 
/ var[0x0b] is the constant 0x00
0x04fd (0x0c3d): (0x10) If var[0x58] == var[0x0b] then Goto 0x0504

/ Set the first supplementary message to "There is a square pit in the floor" (0x8d)
0x0501 (0x0c41): (0x08) Set var[0x4c] = (constant) 0x8d

**************************************************************************
* Check to see if the skeletons are still guarding the dwarf
**************************************************************************

/ Branch if the player's current location is NOT "in the lower chamber. There are 6 exits" (0x7c)
0x0504 (0x0c44): (0x19) If var[0x43] != (constant) 0x7c then Goto 0x050f

/ Branch if the player HAS waved the staff and the skeletons have clanked off leaving the dwarf
/ var[0x0b] is the constant 0x00
0x0508 (0x0c48): (0x11) If var[0x28] != var[0x0b] then Goto 0x050f

/ Player has NOT waved the staff (0x00)

/ Set the first supplementary message to "A host of skeletons are guarding a bearded dwarf" (0x8f)
0x050c (0x0c4c): (0x08) Set var[0x4c] = (constant) 0x8f

**************************************************************************
* Check to see if the vampire is still alive
**************************************************************************

/ Branch if the player's current location is NOT "at a tight junction above a narrow pit" (0x7f)
0x050f (0x0c4f): (0x19) If var[0x43] != (constant) 0x7f then Goto 0x051a

/ Branch if the player HAS killed the vampire (0x01)
/ var[0x0b] is the constant 0x00
0x0513 (0x0c53): (0x11) If var[0x5b] != var[0x0b] then Goto 0x051a

/ Player has NOT killed the vampire (0x00)

/ Set the first supplementary message to "A vampire cowers back" (0x98)
0x0517 (0x0c57): (0x08) Set var[0x4c] = (constant) 0x98

**************************************************************************
* Check to see if fierce goat is still on guard
**************************************************************************

/ Branch if the player's current location is NOT "on a smooth rock dome, below a narrow path" (0x23)
0x051a (0x0c5a): (0x19) If var[0x43] != (constant) 0x23 then Goto 0x0525

/ Player IS "on a smooth rock dome, below a narrow path"

/ Branch if the goat has slipped off the cliff (0x01)
/ var[0x0b] is the constant 0x00
0x051e (0x0c5e): (0x11) If var[0x29] != var[0x0b] then Goto 0x0525

/ Goat is stil guarding (0x00)

/ Set the first supplementary message to "A fierce goat is on guard" (0xa3)
0x0522 (0x0c62): (0x08) Set var[0x4c] = (constant) 0xa3

**************************************************************************
* Check to see if the boulder is rolling down from above
**************************************************************************

/ If the boulder is rolling down, they are only in a safe location if:
/ 1. There are in location "in a gully above the "winding stairs" (0x0c)
/ 2. On the ramps, they can go in to "on the brink of a deep, dark pit" (0xb2)
/ 3. Location id is after ramps (after 0x54)

/ Branch if the boulder is NOT rolling down towards the player (0x00)
/ var[0x0b] is the constant 0x00
0x0525 (0x0c65): (0x10) If var[0x13] == var[0x0b] then Goto 0x054d

/ Branch if the boulder is NOT on top of the player (0x04)
/ var[0x04] is the constant 0x04
0x0529 (0x0c69): (0x11) If var[0x13] != var[0x04] then Goto 0x0567

/ Branch if the player's current location is AFTER "on a massive spiral ramp 
/ which twists down into dark waters and up into the gloom above" (0x54) as
/ the player will be safe from the boulder
0x052d (0x0c6d): (0x1b) If var[0x43] > (constant) 0x54 then Goto 0x0546

/ Branch if the player's current location IS in one of the ramp 
/ locations (0x3f to 0x54) - player will be killed 
0x0531 (0x0c71): (0x1b) If var[0x43] > (constant) 0x3e then Goto 0x0541

/ Branch if the player is NOT on the windings / straight stairs (they 
/ will be safe)
0x0535 (0x0c75): (0x1b) If var[0x43] > (constant) 0x0e then Goto 0x0546
0x0539 (0x0c79): (0x1a) If var[0x43] < (constant) 0x09 then Goto 0x0546

/ Branch if the player IS " in a gully above the "winding stairs"" (0x0c)
/ (they will be safe)
0x053d (0x0c7d): (0x18) If var[0x43] == (constant) 0x0c then Goto 0x0546

/ Player was in one of the following locations so will be killed by the boulder:
/ 0x09 : at the top of the "straight stairs", a short distance below a gate-house
/ 0x0a : half-way up the "straight stairs"
/ 0x0b : below the "straight stairs"
/ 0x0d : on the "winding stairs", carved into exposed rock
/ 0x0e : on the "winding stairs", leading across a vertical slab of exposed rock
/ 0x3f : on a wide spiral ramp which descends clockwise round an immense pit.....
/ 0x40 : on the ramp....
/ to   : on the ramp....
/ 0x4e : on the ramp....
/ 0x4f : You are on deadly slime, slipping towards the edge of the ramp
/ 0x50 : on the ramp....
/ to   : on the ramp....
/ 0x53 : on the ramp....
/ 0x54 : on a massive spiral ramp...

/ Print message  "\nThe boulder gets you! "
0x0541 (0x0c81): (0x05) Print message (constant) 0xb6

/ Kill the player
0x0543 (0x0c83): (0x00) Goto 0x12e7

/ Print message  "\nYou're safe when the boulder passes\n "
0x0546 (0x0c86): (0x05) Print message (constant) 0xb7

/ Set the boulder status to having passed the player safely (0x03)
/ var[0x03] is the constant 0x03
0x0548 (0x0c88): (0x09) Set var[0x13] = var[0x03]

/ Move to the next location check
0x054b (0x0c8b): (0x00) Goto 0x0567

**************************************************************************
* Check to see if a boulder will start rolling down towards the player
**************************************************************************

/ Bouder will roll towards a player if:
/ 1. They are "on a loose section of the ramp" (0x43) 
/ 2. They are "on a wobbly section of the ramp" (0x45)
/ 3. They are on the straight / winding stairs (0x09 to 0x0f) and the random number is less than < 0x15
/    (a 5% chance)

/ Branch if the player is "on a loose section of the ramp" (0x43) and set 
/ a boulder rolling at them 
0x054d (0x0c8d): (0x18) If var[0x43] == (constant) 0x43 then Goto 0x0564

/ Branch if the player is "on a wobbly section of the ramp" (0x45) and set 
/ a boulder rolling at them 
0x0551 (0x0c91): (0x18) If var[0x43] == (constant) 0x45 then Goto 0x0564

/ Branch if the player is NOT on the straight / winding stairs (0x09 to 0x0f)
/ 0x09 : at the top of the "straight stairs", a short distance below a gate-house
/ 0x0a : half-way up the "straight stairs"
/ 0x0b : below the "straight stairs"
/ 0x0c : in a gully above the "winding stairs"
/ 0x0d : on the "winding stairs", carved into exposed rock
/ 0x0e : on the "winding stairs", leading across a vertical slab of exposed rock
/ 0x0f : in a sheltered gully below a winding staircase
0x0555 (0x0c95): (0x1a) If var[0x43] < (constant) 0x09 then Goto 0x0567
0x0559 (0x0c99): (0x1b) If var[0x43] > (constant) 0x0f then Goto 0x0567

/ Player IS in one of the following:
/ 0x09 : at the top of the "straight stairs", a short distance below a gate-house
/ 0x0a : half-way up the "straight stairs"
/ 0x0b : below the "straight stairs"
/ 0x0c : in a gully above the "winding stairs"
/ 0x0d : on the "winding stairs", carved into exposed rock
/ 0x0e : on the "winding stairs", leading across a vertical slab of exposed rock
/ 0x0f : in a sheltered gully below a winding staircase

/ Calculate a random number for the boulder rolling down
0x055d (0x0c9d): (0x06) Function - Random - Set var[0x5d]=<random number>

/ Branch if the random number is greater than 20 (0x14) 
/ ~ 5% chance of the boulder coming at the player
0x0560 (0x0ca0): (0x1b) If var[0x5d] > (constant) 0x14 then Goto 0x0567

/ Set the boulder as rolling towards the player
0x0564 (0x0ca4): (0x09) Set var[0x13] = var[0x06]

**************************************************************************
* Check if the main door north on the bridge is shut
**************************************************************************

/ Branch if the player's current location is NOT "on a narrow north-south bridge" (0x2a)
0x0567 (0x0ca7): (0x19) If var[0x43] != (constant) 0x2a then Goto 0x0572

/ Player IS "on a narrow north-south bridge" (0x2a

/ Branch if the main door north on the bridge is open (0x01)
/ var[0x0b] is the constant 0x00
0x056b (0x0cab): (0x11) If var[0x1c] != var[0x0b] then Goto 0x0572

/ Door is shut

/ Set the first supplementary message to "The main door north of the bridge is shut" (0xba)
0x056f (0x0caf): (0x08) Set var[0x4c] = (constant) 0xba

**************************************************************************
* Check if ghostly orcs are guarding the north-south or east-west corridor
**************************************************************************

/ Branch if the player HAS broken the gem (0x01) - ghostly orcs will no longer
/ guard the junction
/ var[0x0b] is the constant 0x00
0x0572 (0x0cb2): (0x11) If var[0x2a] != var[0x0b] then Goto 0x0581

/ Player has NOT broken the gem (0x00)

/ Branch if the player's current location IS "in a north-south corridor which ends at a t-junction" (0x6d)
0x0576 (0x0cb6): (0x18) If var[0x43] == (constant) 0x6d then Goto 0x057e

/ Branch if the player's current location is NOT "in an east-west corridor beside an opening to the north" (0x6b)
0x057a (0x0cba): (0x19) If var[0x43] != (constant) 0x6b then Goto 0x0581

/ Player is either "in a north-south corridor which ends at a t-junction" (0x6d) or "in an east-west
/ corridor beside an opening to the north" (0x6b)

/ Set the first supplementary message to "Ghostly orcs guard the junction" (0xbb)
0x057e (0x0cbe): (0x08) Set var[0x4c] = (constant) 0xbb

**************************************************************************
* Check to see if the player has tied the rope to the roc's nest
**************************************************************************

/ Branch if the player's current location is NOT "in the roc's nest, 
/ where it brings "food" for storage" (0x2e)
0x0581 (0x0cc1): (0x19) If var[0x43] != (constant) 0x2e then Goto 0x058c

/ Player IS "in the roc's nest, where it brings "food" for storage" (0x2e)

/ Branch if the player has NOT tied the rope to the roc's nest (0x00)
/ var[0x0b] is the constant 0x00
0x0585 (0x0cc5): (0x10) If var[0x4b] == var[0x0b] then Goto 0x058c

/ Set the first supplementary message to "A rope hangs down" (0xc4)
0x0589 (0x0cc9): (0x08) Set var[0x4c] = (constant) 0xc4

**************************************************************************
* Check the status of the rotting coffin in the crypt
**************************************************************************

/ Branch if the player's current location is NOT "in the crypt, beside a rotting coffin" (0x67)
0x058c (0x0ccc): (0x19) If var[0x43] != (constant) 0x67 then Goto 0x059c

/ Player IS "in the crypt, beside a rotting coffin" (0x67)

/ Set the first supplementary message to "It is slightly ajar"
0x0590 (0x0cd0): (0x08) Set var[0x4c] = (constant) 0x11e

/ Branch if the coffin has NOT been nailed shut (0x00)
/ var[0x0b] is the constant 0x00
0x0594 (0x0cd4): (0x10) If var[0x60] == var[0x0b] then Goto 0x059c

/ Set the first supplementary message to "It is nailed shut" (0x11f)
0x0598 (0x0cd8): (0x08) Set var[0x4c] = (constant) 0x11f

**************************************************************************
* Check the status of the canivorous jelly
**************************************************************************

/ Branch if the player's current location is NOT "in a tall cavern with a 
/ large central fireplace" (0x80)
0x059c (0x0cdc): (0x19) If var[0x43] != (constant) 0x80 then Goto 0x05aa

/ Player IS "in a tall cavern with a large central fireplace" (0x80)

/ Set the first supplementary message to " Globs of carnivorous jelly are 
/ circling round" (0xeb)
0x05a0 (0x0ce0): (0x08) Set var[0x4c] = (constant) 0xeb

/ Branch if the player has NOT thrown the corpse for the jelly to converge upon (0x00)
/ var[0x0b] is the constant 0x00
0x05a3 (0x0ce3): (0x10) If var[0x24] == var[0x0b] then Goto 0x05aa

/ Player HAS thrown the corpse

/ Set the first supplementary message to "A mound of jelly wobbles 
/ on the floor" (0xec)
0x05a7 (0x0ce7): (0x08) Set var[0x4c] = (constant) 0xec

**************************************************************************
* Check to see if the giant rat is guarding the corridor
**************************************************************************

/ Branch if the player's current location is NOT "at a junction between 
/ north-south and east-west passages" (0x91)
0x05aa (0x0cea): (0x19) If var[0x43] != (constant) 0x91 then Goto 0x05b5

/ Player IS "at a junction between north-south and east-west passages" (0x91)

/ Branch if the rat has fled from the "sliver of a rancid fried potato" (0x01)
/ var[0x0b] is the constant 0x00
0x05ae (0x0cee): (0x13) If var[0x26] > var[0x0b] then Goto 0x05b5

/ Rat has NOT fled

/ Set the first supplementary message to "A giant rat guards the corridor" (0xed)
0x05b2 (0x0cf2): (0x08) Set var[0x4c] = (constant) 0xed

**************************************************************************
* Check to see if the player is tiny and can still see enormous ants
**************************************************************************

/ Branch if the player's current location is NOT "in the middle of the floor 
/ of a giant cove, in a giant ants' nest" (0x37)
0x05b5 (0x0cf5): (0x19) If var[0x43] != (constant) 0x37 then Goto 0x05c0

/ Player IS "in the middle of the floor of a giant cove, in a giant ants' nest" (0x37)

/ Branch if the player has eaten the huge grey mushroom twice and accidentally trodden on 
/ the little ants (klling them)
/ var[0x0b] is the constant 0x00
0x05b9 (0x0cf9): (0x11) If var[0x0e] != var[0x0b] then Goto 0x05c0

/ Player has NOT trodden on the little ants

/ Set the first supplementary message to "Enormous ants tower overhead as they 
/ walk past, completely ignoring you"
0x05bd (0x0cfd): (0x08) Set var[0x4c] = (constant) 0xfe

**************************************************************************
* Check to see if the player sees the rotting bridge or fine goldn pathway
**************************************************************************

/ Branch if the player's current location is NOT "on a wide ledge half-way 
/ up the south side of a tall cave." (0x9b)
0x05c0 (0x0d00): (0x19) If var[0x43] != (constant) 0x9b then Goto 0x05cf

/ Player IS "on a wide ledge half-way up the south side of a tall cave." (0x9b)

/ Set the first supplementary message to "A rotting bridge leads north" (0x102)
0x05c4 (0x0d04): (0x08) Set var[0x4c] = (constant) 0x102

/ Branch if the player has NOT eaten the psychedlic mushroom (0x00)
/ var[0x0b] is the constant 0x00
0x05c8 (0x0d08): (0x10) If var[0x2d] == var[0x0b] then Goto 0x05cf

/ Set the first supplementary message to "A fine golden pathway leads north" (0x103)
0x05cc (0x0d0c): (0x0a) Set var[0x4c] += var[0x01]

**************************************************************************
* Check to see if the troll can see the player
**************************************************************************

/ Branch if the player's current location is NOT "in the troll's 
/ squalid store room...." (0xa0)
0x05cf (0x0d0f): (0x19) If var[0x43] != (constant) 0xa0 then Goto 0x05e0

/ Player IS "in the troll's squalid store room..."

/ Branch if the player IS invisible (0x01)
/ var[0x0b] is the constant 0x00
0x05d3 (0x0d13): (0x11) If var[0x34] != var[0x0b] then Goto 0x05e0

/ Player can be seen by the troll

/ Print message  "The troll sees you and throws you out! "
0x05d7 (0x0d17): (0x05) Print message (constant) 0x104

/ Move the player back outside the storeroom to "in a narrow north-south
/ passage through the rock. A peculiar sweet smell emerges from
/ an opening to the west. (0x9f)
0x05da (0x0d1a): (0x08) Set var[0x43] = (constant) 0x9f

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x05dd (0x0d1d): (0x00) Goto 0x0190

**************************************************************************
* Check to see if the executioner attacks the player
**************************************************************************

/ Branch if the player's current location is NOT "in the condemned cell." (0xb9)
0x05e0 (0x0d20): (0x19) If var[0x43] != (constant) 0xb9 then Goto 0x05f9

/ Player IS "in the condemned cell." (0xb9)

/ Branch if the executioner is dead and out of the game (0xe1)
0x05e4 (0x0d24): (0x13) If var[0x2c] > var[0x06] then Goto 0x05f9

/ Increment the number of turns the executioner has been waiting
/ (actually gets incremented twice as this gets called twice if the room description
/ is displayed, all other actions only once)
0x05e8 (0x0d28): (0x0a) Set var[0x2c] += var[0x01]

/ Branch if it's been less than 3 turns (when this will be 0x06)
/ var[0x06] is the constant 0x06
0x05eb (0x0d2b): (0x12) If var[0x2c] < var[0x06] then Goto 0x05f5

/ It's been 3 turns

/ Print message  "The executioner attacks "
0x05ef (0x0d2f): (0x05) Print message (constant) 0x114

/ Kill the player
0x05f2 (0x0d32): (0x00) Goto 0x12e7

/ Player isn't killed yet

/ Set the first supplementary message to "A hooded executioner blocks the only exit" (0x113)
0x05f5 (0x0d35): (0x08) Set var[0x4c] = (constant) 0x113

**************************************************************************
* Check to see if the player has their sanity drained away
**************************************************************************

/ Branch if the player's current location is NOT "on a wide spiral ramp which 
/ descends clockwise round an immense pit..." (0x3f)
0x05f9 (0x0d39): (0x19) If var[0x43] != (constant) 0x3f then Goto 0x060a

/ Player IS "on a wide spiral ramp which descends clockwise round an immense pit..." (0x3f)

/ Increment the number of turns the player has had their sanity draining away with their
/ gaze locked on the myriad of moving images
/ (actually gets incremented twice as this gets called twice if the room description
/ is displayed, all other actions only once)
/ var[0x01] is the constant 0x01
0x05fd (0x0d3d): (0x0a) Set var[0x39] += var[0x01]

/ Branch if player has reached 10 or more turns (half that for descriptions)
0x0600 (0x0d40): (0x1a) If var[0x39] < (constant) 0x0a then Goto 0x060a

/ Print message  "You try to fly off the ramp "
0x0604 (0x0d44): (0x05) Print message (constant) 0x117

/ Kill the player
0x0607 (0x0d47): (0x00) Goto 0x12e7

/ Branch if the player's eyes are "closed" (0x01)
/ var[0x01] is the constant 0x01
0x060a (0x0d4a): (0x10) If var[0x20] == var[0x01] then Goto 0x0612

/ Player's eyes are open (0x00)

/ Branch if the player is NOT wearing the blindfold (0x00)
0x060e (0x0d4e): (0x10) If var[0x21] == var[0x0b] then Goto 0x0615

/ Player either has their eyes closed OR is wearing the blindfold so 
/ reset their sanity being drained away

/ Reset so that the player is NOT having their sanity drained away (0x00)
/ var[0x0b] is the constant 0x00
0x0612 (0x0d52): (0x09) Set var[0x39] = var[0x0b]

**************************************************************************
* Check to see if the skeletal hand appears or if the roc takes the player
* to its nest
**************************************************************************

/ Branch if the player's current location is after "below a ramp up
/ the outside of the black tower." (0x08)
0x0615 (0x0d55): (0x1b) If var[0x43] > (constant) 0x08 then Goto 0x0635

/ Get a random number
0x0619 (0x0d59): (0x06) Function - Random - Set var[0x5d]=<random number>

/ Branch if the random number is less than 40 (0x28) and print the skeletal hand message
0x061c (0x0d5c): (0x1a) If var[0x5d] < (constant) 0x28 then Goto 0x0633

/ Branch if the roc has previously carried the player off to its nest and print 
/ the skeletal hand message
0x0620 (0x0d60): (0x11) If var[0x3a] != var[0x0b] then Goto 0x0635

/ Player has NOT been previously carried off by the roc

/ Branch if the random number is greater than 90 (0x5a)
0x0624 (0x0d64): (0x1b) If var[0x5d] > (constant) 0x5a then Goto 0x0635

/ Random number was between 40 and 90

/ Print message  "\nA great roc carries you off! "
0x0628 (0x0d68): (0x05) Print message (constant) 0xc1

/ Set the status of the roc to "has previously carried the player off to its nest" (0x01)
0x062a (0x0d6a): (0x09) Set var[0x3a] = var[0x01]

/ Set the player's current location to "in the roc's nest, where it brings "food" for storage" (0x2e)
0x062d (0x0d6d): (0x08) Set var[0x43] = (constant) 0x2e

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0630 (0x0d70): (0x00) Goto 0x0149

/ Print message  "\nA skeletal hand reaches from the earth but crumbles to dust "
0x0633 (0x0d73): (0x05) Print message (constant) 0xc2

/ Branch if the orcs are NOT camped around (0x00)
/ var[0x0b] is the constant 0x00
0x0635 (0x0d75): (0x10) If var[0x0f] == var[0x0b] then Goto 0x0640

/ Branch if the orcs have fled after the horn has been blown (0x06)
/ var[0x05] is the constant 0x05
0x0639 (0x0d79): (0x13) If var[0x0f] > var[0x05] then Goto 0x0640

/ Orcs are camped all around

/ Set the first location supplementary message to "An army of orcs is 
/ camped all around" (0xdc)
0x063d (0x0d7d): (0x08) Set var[0x4c] = (constant) 0xdc

/ Branch if the player cannot see (0x00)
/ var[0x0b] is the constant 0x00
0x0640 (0x0d80): (0x10) If var[0x37] == var[0x0b] then Goto 0x0647

/ Reset the number of turns in the dark to 0x00
/ used to determine when a ghoul emerges and kills the player at 0x04
/ var[0x0b] is the constant 0x00
0x0644 (0x0d84): (0x09) Set var[0x1d] = var[0x0b]

/ Branch if the player's eyes are closed (0x01) and set the cannot see
/ variable 
/ var[0x0b] is the constant 0x00
0x0647 (0x0d87): (0x13) If var[0x20] > var[0x0b] then Goto 0x064f

/ Branch if the player is NOT wearing the blindfold (0x00)
/ var[0x0b] is the constant 0x00
0x064b (0x0d8b): (0x10) If var[0x21] == var[0x0b] then Goto 0x0652

/ Player has eyes closed or is wearing the blindfold

/ Set the status that the player cannot see (0x00)
/ var[0x0b] is the constant 0x00
0x064f (0x0d8f): (0x09) Set var[0x37] = var[0x0b]

/ TODO - seems to be cache of the first supplementary message
/ as this is called twice when printing a location description
0x0652 (0x0d92): (0x09) Set var[0x4e] = var[0x4c]

/ All done
0x0655 (0x0d95): (0x02) Return

**************************************************************************
* Command: any movement including "north", "east", "neast", "northeast".
*          "south", "southeast", "seast", "west", "southwest", "swest",
*          "northwest", "nwest", "upwards", "climb", "downwards", "fall", 
*          "jump", "inside", "into", "outside" or "cross"
**************************************************************************

/ Set the target destination to nowhere (0x00)
/ var[0x0b] is the constant 0x00
0x0656 (0x0d96): (0x09) Set var[0x44] = var[0x0b]

/ Set the exit flags to none (0x00)
/ var[0x0b] is the constant 0x00
0x0659 (0x0d99): (0x09) Set var[0x50] = var[0x0b]


**************************************************************************
* Process the player going "in" to the packing cases
**************************************************************************

/ Set the temporary variable to the object id for the packing case (0x88)
0x065c (0x0d9c): (0x08) Set var[0x1e] = (constant) 0x88

/ Get the current location of the packing case
0x065f (0x0d9f): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the first word was MOT matched with "in", "inside" or "into" (0x0b)
0x0662 (0x0da2): (0x19) If var[0x30] != (constant) 0x0b then Goto 0x0670

/ First word WAS matched with "in", "inside" or "into" (0x0b)

/ Branch if the packing case is NOT in the player's current location 
0x0666 (0x0da6): (0x11) If var[0x1f] != var[0x43] then Goto 0x067d

/ Packing case IS in the player's current location

/ Set the target destination to "inside a large wooden box. A small door leads deeper into the box"
0x066a (0x0daa): (0x08) Set var[0x44] = (constant) 0xd7

/ TODO 
0x066d (0x0dad): (0x00) Goto 0x09e6

**************************************************************************
* Process going "out" of the large store room to wherever the packing case is
**************************************************************************

/ Branch if the first word was MOT matched with "out" or "outside" (0x0c)
0x0670 (0x0db0): (0x19) If var[0x30] != (constant) 0x0c then Goto 0x067d

/ First word WAS matched with "out" or "outside" (0x0c)

/ Branch if the player's current location is NOT "in a large store room. 
/ You realise that this is the ideal place to leave any treasures that you 
/ find...." (0xca)
0x0674 (0x0db4): (0x19) If var[0x43] != (constant) 0xca then Goto 0x067d

/ Player's current location IS "in a large store room. 
/ You realise that this is the ideal place to leave any treasures that you 
/ find...." (0xca)

/ Set the target destination to the location of the packing case
0x0678 (0x0db8): (0x09) Set var[0x44] = var[0x1f]

/ Perform exit checks and valid location checks
0x067b (0x0dbb): (0x00) Goto 0x068b

**************************************************************************
* Check to see if the player can move in the required direction from the 
* current location and give back the target location id and exit flags
**************************************************************************

/ Check to see if the player can move in the required direction from this location
0x067d (0x0dbd): (0x0f) Exits - check location var[0x43] can move var[0x30] - exit flags in var[0x50] and target location (or 0x00) in var[0x44]

/ REMINDER
/ var[0x50] contains the exit flags for the direction that player is trying to move
/ var[0x44] contains the target location that it would take it to if the a-code allows it
/ or 0x00 if not allowed

/ Branch if a valid target location was found (player can move there)
/ var[0x0b] is the constant 0x00
0x0682 (0x0dc2): (0x13) If var[0x44] > var[0x0b] then Goto 0x068b

/ Player is NOT allowed to move in that direction from the current location

/ Print message  "You can't move in that direction\n "
0x0686 (0x0dc6): (0x05) Print message (constant) 0x20

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0688 (0x0dc8): (0x00) Goto 0x0190

**************************************************************************
* Check to see if the player can move into the forest clearing
**************************************************************************

/ Branch if the target destination is NOT "in a forest clearing" (0x11)
0x068b (0x0dcb): (0x19) If var[0x44] != (constant) 0x11 then Goto 0x0694

/ Target destination IS "in a forest clearing" (0x11)

/ Branch if the status of the two sleeping giants is "alive and still in the clearing asleep" (0x00)
/ and print "You must be joking!"
/ var[0x0b] is the constant 0x00
0x068f (0x0dcf): (0x10) If var[0x27] == var[0x0b] then Goto 0x1611

/ Branch if the target destination is NOT (the second) "on an east-west road through the forest" (0x16)
0x0694 (0x0dd4): (0x19) If var[0x44] != (constant) 0x16 then Goto 0x06b8

/ Branch if the player has already reflected the sleep spell (0x01)
/ var[0x0b] is the constant 0x00
0x0698 (0x0dd8): (0x11) If var[0x47] != var[0x0b] then Goto 0x06b8

/ Print message  "A sleep spell hits you! "
0x069c (0x0ddc): (0x05) Print message (constant) 0x51

/ Set the temporary variable to the object id for the "mirror" (0x7e)
0x069e (0x0dde): (0x08) Set var[0x1e] = (constant) 0x7e

/ Get the current location of the "mirror"
0x06a1 (0x0de1): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "mirror" is in the player's inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x06a4 (0x0de4): (0x10) If var[0x1f] == var[0x07] then Goto 0x06b3

/ Player does NOT have the "mirror"

/ Remove all carried and worn items from the game by setting their location
/ to the out of game location id (0xe1)
0x06a8 (0x0de8): (0x01) Gosub 0x145d

/ Print message  "You wake on the mud-bank "
0x06ab (0x0deb): (0x05) Print message (constant) 0x52

/ Set the player's current location to the start location "on a mud-bank...." (0x32)
0x06ad (0x0ded): (0x08) Set var[0x43] = (constant) 0x32

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x06b0 (0x0df0): (0x00) Goto 0x0149

**************************************************************************
* Process player being hit with a sleep spell but having the mirror in their inventory
**************************************************************************

/ Print message  "But your mirror reflects it! You hear snoring from the south "
0x06b3 (0x0df3): (0x05) Print message (constant) 0x53

/ Set the status of the mirror to "has reflected the spell" (0x01)
/ var[0x01] is the constant 0x01
0x06b5 (0x0df5): (0x09) Set var[0x47] = var[0x01]

/ Branch if the player's current location is NOT "in a clump of bushes 
/ on the edge of the forest" (0x1c)
0x06b8 (0x0df8): (0x19) If var[0x44] != (constant) 0x1c then Goto 0x06c5

/ Branch if the mirror has NOT reflected the sleep spell (0x00)
/ var[0x01] is the constant 0x00
0x06bc (0x0dfc): (0x11) If var[0x47] != var[0x01] then Goto 0x06c5

/ Mirror HAS reflected the sleep spell (0x01)

/ Print message  "Your foot breaks a twig: SNAP! A masked man leaps up and flees "
0x06c0 (0x0e00): (0x05) Print message (constant) 0x54

/ Set the status of the mirror to the masked man has leapt up and fled
0x06c2 (0x0e02): (0x09) Set var[0x47] = var[0x02]

**************************************************************************
* Process player being with the siren
**************************************************************************

/ Branch if the player's current location " on the southern end of a small 
/ island, reached by stepping stones from the south." (0x34)
0x06c5 (0x0e05): (0x19) If var[0x44] != (constant) 0x34 then Goto 0x06db

/ Branch if the siren has fled in panic (0x01)
/ var[0x0b] is the constant 0x01
0x06c9 (0x0e09): (0x11) If var[0x52] != var[0x0b] then Goto 0x06db

/ Siren is still present

/ Branch if the player is currently deaf
/ var[0x0b] is the constant 0x00
0x06cd (0x0e0d): (0x13) If var[0x17] > var[0x0b] then Goto 0x06d6

/ Print message  "The girl sings: she is a siren! You flounder into treacherous waters "
0x06d1 (0x0e11): (0x05) Print message (constant) 0x48

/ Kill the player
0x06d3 (0x0e13): (0x00) Goto 0x12e7

**************************************************************************

/ Print message  "You're deaf to the siren's song! She flees in panic "
0x06d6 (0x0e16): (0x05) Print message (constant) 0x49

/ Set the status of the siren to fled in panic (0x01)
/ var[0x01] is the constant 0x01
0x06d8 (0x0e18): (0x09) Set var[0x52] = var[0x01]

**************************************************************************
* Process player moving to where the killer-willow is
**************************************************************************

/ Branch if the player's target location is NOT "under the killer-willow tree" (0x33)
0x06db (0x0e1b): (0x19) If var[0x44] != (constant) 0x33 then Goto 0x06e8

/ Player's target location IS "under the killer-willow tree" (0x33)

/ Branch if the tree is holding 6 items or no longer bothers the player
0x06df (0x0e1f): (0x13) If var[0x10] > var[0x05] then Goto 0x06e8

/ Tree has at least one spare arm free

/ Print message  "The tree grabs you "
0x06e3 (0x0e23): (0x05) Print message (constant) 0x4a

/ Kill the player
0x06e5 (0x0e25): (0x00) Goto 0x12e7

**************************************************************************
* Process the player trying to move to the huge nest
**************************************************************************

/ Branch if the player's target location is NOT "in a huge nest" (0x1f)
0x06e8 (0x0e28): (0x19) If var[0x44] != (constant) 0x1f then Goto 0x06f1

/ Player IS trying to move to "a huge nest"

/ Branch if the bird is still on the next (0x00) and print "You must be joking!"
/ var[0x0b] is the constant 0x00
0x06ec (0x0e2c): (0x10) If var[0x11] == var[0x0b] then Goto 0x1611

**************************************************************************
* Check if the player has the octopus figurine if moving to the black rooms
**************************************************************************

/ Branch if the player's target destination is NOT one of these two rooms:
/ 0x71 : dead-end room, painted matt black. You'll have to return the way you came
/ 0x72 : in a second dead-end black room
0x06f1 (0x0e31): (0x1a) If var[0x44] < (constant) 0x71 then Goto 0x0705
0x06f5 (0x0e35): (0x1b) If var[0x44] > (constant) 0x72 then Goto 0x0705

/ Player's target room is either 0x71 or 0x72

/ Set the temporary variable to the object id for the octopus figurine (0x7f)
0x06f9 (0x0e39): (0x08) Set var[0x1e] = (constant) 0x7f

/ Get the current location of the octopus figurine
0x06fc (0x0e3c): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the octopus figurine is NOT in the player's inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x06ff (0x0e3f): (0x11) If var[0x1f] != var[0x07] then Goto 0x0705

/ Print message  "The octopus waves its arms and you can see. 
/ Thus "many hands make light work"!\n "
0x0703 (0x0e43): (0x05) Print message (constant) 0x7b

**************************************************************************
* Check if the player has pressed the 3 protruding rocks before moving to 
* the damp hemispherical cave
**************************************************************************

/ Branch if the player's target destination is NOT "in a damp hemispherical
/ cave with an opening to the east" and skip to the next check
0x0705 (0x0e45): (0x19) If var[0x44] != (constant) 0x78 then Goto 0x070e

/ Player's target destination IS " in a damp hemispherical cave with an 
/ opening to the east" (0x78)

/ Branch if the player has pressed less than 3 of the protruding rocks 
/ and print "You can't move in that direction"
/ var[0x03] is the constant 0x03
0x0709 (0x0e49): (0x12) If var[0x53] < var[0x03] then Goto 0x0686

**************************************************************************
* Check if the player has pushed the rock to get to the "room
* carved out of rock"
**************************************************************************

/ Branch if the player's target destination IS " a room carved out of 
/ rugged rock with a large outcrop of stone in the middle of the floor." (0x79)
/ to the next check
0x070e (0x0e4e): (0x19) If var[0x44] != (constant) 0x79 then Goto 0x0717

/ Player's target destination IS " a room carved out of 
/ rugged rock with a large outcrop of stone in the middle of the floor." (0x79)

/ Branch if the boulder has not been pushed (with the exit open) 
/ and print "You can't move in that direction"
0x0712 (0x0e52): (0x10) If var[0x54] == var[0x0b] then Goto 0x0686

/ Branch if the player's target destination is "in an ornate, dead-end room" (0xb3)
0x0717 (0x0e57): (0x19) If var[0x44] != (constant) 0xbe then Goto 0x0720

**************************************************************************
* Check if the player has turned the statue to open access to the 
* "ornate, dead-end room"
**************************************************************************

/ Player's target destination IS "in an ornate, dead-end room" (0xbe)

/ Branch if the player has NOT turned the statue (0x01)
/ and print "You can't move in that direction"
/ var[0x0b] is the constant 0x00
0x071b (0x0e5b): (0x10) If var[0x55] == var[0x0b] then Goto 0x0686

**************************************************************************
* Check if the player can move from "in a long throne room" (0x63) to 
* "below a sign" (0xaa) if the pit is open 
**************************************************************************

/ Branch if the player's target destination is NOT "below a sign "Your fate is
/ sealed! Your only hope is to descend into the Central Dungeon and collect 9 gems. 
/ Succeed and you will be free!" (0xaa) 
0x0720 (0x0e60): (0x19) If var[0x44] != (constant) 0xaa then Goto 0x072d

/ Player's target destination IS "below a sign"

/ Branch if the player's current location is NOT "in a long throne room
/ lined with skin." (0x68)
0x0724 (0x0e64): (0x19) If var[0x43] != (constant) 0x68 then Goto 0x072d

/ Player IS "in a long throne room lined with skin" 

/ Branch if the pit IS "closed" (0x00) and print "You can't move 
/ in that direction" 
/ var[0x0b] is the constant 0x00 
0x0728 (0x0e68): (0x10) If var[0x58] == var[0x0b] then Goto 0x0686

**************************************************************************
* Check if the player can move from "sitting on an ornate throne" to 
* "in a long throne room" (0x63) - if the player has pressed button 4
* on the throne and risen through the ceiling then they will instead 
* go down to the "odd little room"
**************************************************************************

/ Branch if the player's target destination is "in a long throne 
/ room lined with skin." (0x63)
0x072d (0x0e6d): (0x19) If var[0x44] != (constant) 0x68 then Goto 0x073c

/ Branch if the player's current location is NOT "sitting on an ornate throne. 
/ There are nine numbered buttons along the left arm-rest" (0x5d)
0x0731 (0x0e71): (0x19) If var[0x43] != (constant) 0x5d then Goto 0x073c

/ Branch if the throne has NOT risen through the ceiling (0x00)
/ var[0x0b] is the constant 0x00
0x0735 (0x0e75): (0x10) If var[0x59] == var[0x0b] then Goto 0x073c

/ Throne HAS risen through the ceiling (player pressed button 4 on throne)

/ Set the player's target destination is "You are in an odd little room, 
/ below a granite throne." (0x69)
0x0739 (0x0e79): (0x08) Set var[0x44] = (constant) 0x69

**************************************************************************
* Check if the player is moving from either from, "in the strong 
* room..." (0xa6) to"in a paved tunnel..." (0x3d) or from  ""in a paved 
* tunnel" (x3d) to "in the strong room." (0xa6) An iron door is present
* and it must be unbolted and open
**************************************************************************

/ Branch if the player's current location IS "in the strong room. An 
/ iron door leads west and a narrow crack splits the east wall" (0xa6)
0x073c (0x0e7c): (0x18) If var[0x43] == (constant) 0xa6 then Goto 0x0744

/ Branch if the player's current location is NOT "in a paved tunnel 
/ below a silver pedestal." (0x3d) and move to the next check
0x0740 (0x0e80): (0x19) If var[0x43] != (constant) 0x3d then Goto 0x0751

/ Player IS moving from either "in the strong room "(0xa6) or 
/ "in a paved tunnel below a silver pedestal" (0x3d)

/ This will only apply if the player is "in a paved tunnel..."
/ Branch if the player's target destination IS "in the strong room. 
/ An iron door leads west and a narrow crack splits the east wall"
/ and check if the door is closed - is so print "The door is locked"
0x0744 (0x0e84): (0x18) If var[0x44] == (constant) 0xa6 then Goto 0x074c

/ Branch if the player's target destination is NOT "in a paved tunnel 
/ below a silver pedestal and move to the next check
0x0748 (0x0e88): (0x19) If var[0x44] != (constant) 0x3d then Goto 0x0751

/ Player's target destination IS "in a paved tunnel 
/ below a silver pedestal" and will be moving from "a strong room"
/ will also get here from above moving the other way

/ Branch if the iron door in the strong room is closed and bolted (0x00)
/ and print "The door is locked"
/ var[0x0b] is the constant 0x00
0x074c (0x0e8c): (0x10) If var[0x0c] == var[0x0b] then Goto 0x161e

**************************************************************************
* Check the reaction of the skeletons when the player arrives 
**************************************************************************

/ Branch if the skeletons are NOT guarding the dwarf (0x01)
/ var[0x0b] is the constant 0x00
0x0751 (0x0e91): (0x11) If var[0x28] != var[0x0b] then Goto 0x0777

/ Skeletons ARE guarding the dwarf (0x00)

/ Branch if the player's target destination is NOT "in the lower 
/ chamber. There are 6 exits" (0x7c)
0x0755 (0x0e95): (0x19) If var[0x44] != (constant) 0x7c then Goto 0x076a

/ Player's target destination IS "in the lower 
/ chamber. There are 6 exits" (0x7c)

/ Set the temporary variable to the "staff of polished bone "(0x80)
0x0759 (0x0e99): (0x08) Set var[0x1e] = (constant) 0x80

/ Get the current location of the "staff of polished bone"
0x075c (0x0e9c): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "staff of polished bone" IS in the player's inventory (0xfe)
/ and let the skeletons stand to attention
/ var[0x07] it the constant 0xfe
0x075f (0x0e9f): (0x10) If var[0x1f] == var[0x07] then Goto 0x0768

/ Player does NOT have the staff of polished bone

/ Print message  "Armed skeletons leap on you "
0x0763 (0x0ea3): (0x05) Print message (constant) 0x93

/ Kill the player
0x0765 (0x0ea5): (0x00) Goto 0x12e7

**************************************************************************

/ Player DOES have the staff of polished bone

/ Print message  "A party of skeletons stand to attention as you enter. 
/ (Greetings Master), they signal in semaphore, (We have captured an intruder
/  dwarf and await your signals)! "
0x0768 (0x0ea8): (0x05) Print message (constant) 0x94

/ Branch if the player's current location is NOT the "You are in the lower
/ chamber. There are 6 exits." (0x7c)
0x076a (0x0eaa): (0x19) If var[0x43] != (constant) 0x7c then Goto 0x0777

/ Player IS "in the lower chamber. There are 6 exits."

/ Branch if the player's target destination IS ""a steep earthy passage." (0x7b)
0x076e (0x0eae): (0x18) If var[0x44] == (constant) 0x7b then Goto 0x0777

/ Player IS "in the lower chamber. There are 6 exits." AND 
/ the target destination is NOT "a steep earthy passage." (0x7b)

/ Print message  "The skeletons are in the way "
0x0772 (0x0eb2): (0x05) Print message (constant) 0x90

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0774 (0x0eb4): (0x00) Goto 0x0149

**************************************************************************
* Check the behaviour of the dwarf
**************************************************************************

/ Branch if the dwarf is NOT following the player (0x00)
/ var[0x0b] is the constant 0x00
0x0777 (0x0eb7): (0x10) If var[0x1a] == var[0x0b] then Goto 0x07b8

/ Dwarf IS following the player (0x01)

/ Branch if the player's target destination IS "at a junction in the round, 
/ north-south passage, illuminated by a jet of flame from the floor. To the
/ east is a treasure vault, completely filled with valuables of every kind" (0xcb)
/ and print "That's not the way to the ore..."
0x077b (0x0ebb): (0x18) If var[0x44] == (constant) 0xcb then Goto 0x079d

/ Branch if the player's target destination IS "in a north-south passage. 
/ A dry red stain spreads from beneath a fallen stone" (0xcc) 
/ and print "That's not the way to the ore..."
0x077f (0x0ebf): (0x18) If var[0x44] == (constant) 0xcc then Goto 0x079d

/ Branch if the player's target destination IS "standing on a small round 
/ platform surrounded by a cylinder of orange light" (0x56)
/ and print "That's not the way to the ore..."
0x0783 (0x0ec3): (0x18) If var[0x44] == (constant) 0x56 then Goto 0x079d

/ Branch if the player's target destination IS "in a steep earthy passage" (0x7f)
/ and print "That's not the way to the ore..."
0x0787 (0x0ec7): (0x18) If var[0x44] == (constant) 0x7b then Goto 0x079d

/ Branch if the player's target destination IS "just inside the entrance 
/ to the wight house,... " (0x5e)
/ and print "That's not the way to the ore..."
0x078b (0x0ecb): (0x18) If var[0x44] == (constant) 0x5e then Goto 0x079d

/ Branch if the player's target destination is NOT "in a gully above 
/ the "winding stairs"" 
0x078f (0x0ecf): (0x19) If var[0x44] != (constant) 0x0c then Goto 0x07b8

/ Player IS "in a gully above the "winding stairs"" (0x0c)

/ Print message  "The dwarf dives into a hidden opening. You hear
/  frantic hammering and cries of "Follow me!" "
0x0793 (0x0ed3): (0x05) Print message (constant) 0x96

/ Set the status of the dwarf to "not following the player (0x00)
/ var[0x0b] is the constant 0x00
0x0795 (0x0ed5): (0x09) Set var[0x1a] = var[0x0b]

/ Set the dwarf's treasure diving status to "has dived" (0x01)
/ var[0x01] is the constant 0x01
0x0798 (0x0ed8): (0x09) Set var[0x1b] = var[0x01]

/ Move to the next check
0x079b (0x0edb): (0x00) Goto 0x07b8

/ Print message  ""That's not the way to the ore!", cries the dwarf, 
/ "I'm not going that way!". Do you turn back?\n "
0x079d (0x0edd): (0x05) Print message (constant) 0x95

/ Get the player's yes or no answer
0x079f (0x0edf): (0x07) Input - results in word1 var[0x30], word2 var[0x31], word3 var[0x32], count var[0x33]

/ Branch if nothing was entered (word count is zero) and wait for input again
/ var[0x0b] is the constant 0x00
0x07a4 (0x0ee4): (0x10) If var[0x33] == var[0x0b] then Goto 0x079f

/ Branch if the first word entered is "yes" (0x1d) and perform additional
/ location specific checks, print the location description
/ and ask "What next?" 
0x07a8 (0x0ee8): (0x18) If var[0x30] == (constant) 0x1d then Goto 0x0149

/ Branch if the first word entered is "no" (0x01)
/ ("no" actually matches against "north" in the dictionary)
0x07ad (0x0eed): (0x18) If var[0x30] == (constant) 0x01 then Goto 0x07b5

/ Player did not enter "yes" or "no"

/ Print message  "Please answer YES or NO\n "
0x07b1 (0x0ef1): (0x05) Print message (constant) 0x09

/ Loop back to print the message again and get a yes / no answer
0x07b3 (0x0ef3): (0x00) Goto 0x079d

/ Set the status of the dwarf to NOT following the player (0x00)
/ var[0x0b] is the constant 0x00
0x07b5 (0x0ef5): (0x09) Set var[0x1a] = var[0x0b]

**************************************************************************
* Process if the player can enter the "huge cave of glistening rock" (0xcf)
* from "You are in a gully above the "winding stairs"." (0x0c).  Can only
* do this if the dwarf has dived into the a hidden opening.
**************************************************************************

/ Branch if the target destination is NOT "in a huge cave of glistering rock. 
/ New passages lead north and south" (0xcf) and move to the next check
0x07b8 (0x0ef8): (0x19) If var[0x44] != (constant) 0xcf then Goto 0x07c1

/ Player IS "in a huge cave of glistering rock. New passages 
/ lead north and south"

/ Branch if the dwarf has NOT "dived into a hidden opening" (0x00)
/ and print "you can't move in that direction"
/ var[0x0b] is the constant 0x00
0x07bc (0x0efc): (0x10) If var[0x1b] == var[0x0b] then Goto 0x0686

/ Dwarf HAS "dived into a hidden opening" (0x01) so it's been allowed 

**************************************************************************
* Process the player meeting the vampire 
**************************************************************************

/ Branch if the target destination is NOT "at a tight junction above 
/ a narrow pit" (0x7f)
0x07c1 (0x0f01): (0x19) If var[0x44] != (constant) 0x7f then Goto 0x07d2

/ Target destination IS "at a tight junction above a narrow pit" (0x7f)

/ Branch if the vampire is NOT alive (0x01)
/ var[0x0b] is the constant 0x00
0x07c5 (0x0f05): (0x11) If var[0x5b] != var[0x0b] then Goto 0x07d2

/ Branch if the player has at least one cross / crucifix (they will be safe
/ from the vampire)
/ var[0x0b] is the constant 0x00
0x07c9 (0x0f09): (0x13) If var[0x5e] > var[0x0b] then Goto 0x07d2

/ Player has zero crosses / crucifixes so will be killed by the vampire

/ Print message  "A vampire bites you "
0x07cd (0x0f0d): (0x05) Print message (constant) 0x97

/ Kill the player
0x07cf (0x0f0f): (0x00) Goto 0x12e7

**************************************************************************

/ Branch if the destination is any of the rooms in the wight house (0x5e to 0x66)
0x07d2 (0x0f12): (0x1a) If var[0x44] < (constant) 0x5e then Goto 0x07f9
0x07d6 (0x0f16): (0x1b) If var[0x44] > (constant) 0x66 then Goto 0x07f9

/ Branch if the player has at least one cross / crucifox 
/ var[0x0b] is the constant 0x00
0x07da (0x0f1a): (0x13) If var[0x5e] > var[0x0b] then Goto 0x07e4

/ Player does not have any cross or crucifix

/ Print message  "\nA horde of wights attack! "
0x07de (0x0f1e): (0x05) Print message (constant) 0x11c

/ Kill the player
0x07e1 (0x0f21): (0x00) Goto 0x12e7

**************************************************************************

/ Branch if the target destination in the wight house is "in the middle 
/ of the south wall of the wight house. A musty alcove opens behind you" (0x65)
0x07e4 (0x0f24): (0x18) If var[0x44] == (constant) 0x65 then Goto 0x07ec

/ Branch if the target destination is NOT "in the middle of the wight house, 
/ below a blue pedestal" (0x62)
0x07e8 (0x0f28): (0x19) If var[0x44] != (constant) 0x62 then Goto 0x07f9

/ Player's destination IS "in the middle of the wight house, 
/ below a blue pedestal" (0x62)

/ Print message  "You force the wights back "
0x07ec (0x0f2c): (0x05) Print message (constant) 0x11a

/ Branch if the number of crosses / crucifixes that the player has 
/ is greater than 1 
/ var[0x01] is the constant 0x01
0x07ef (0x0f2f): (0x13) If var[0x5e] > var[0x01] then Goto 0x07f9

/ Player has only 1 cross or crucifix

/ Print message  "but they come from all sides.. "
0x07f3 (0x0f33): (0x05) Print message (constant) 0x11b

/ Kill the player
0x07f6 (0x0f36): (0x00) Goto 0x12e7

**************************************************************************
* Player is heading home - ask if they want to leave the game
**************************************************************************

/ Branch if the player IS moving from "on an east-west road through the forest" (0x16)
/ East to location id "0xe2" (not a real location, end of game if you die or complete)
0x07f9 (0x0f39): (0x19) If var[0x44] != (constant) 0xe2 then Goto 0x0817

/ Print message  "A hollow voice intones: "This is your referee speaking. 
/ If you continue on this road you will return safe to civilisation and 
/ the game will end. Are you sure that you want to?"\n "
0x07fd (0x0f3d): (0x05) Print message (constant) 0x2d6

/ Get the player's yes or no answer
0x0800 (0x0f40): (0x07) Input - results in word1 var[0x30], word2 var[0x31], word3 var[0x32], count var[0x33]

/ Branch if nothing was entered (word count is zero) and wait for input again
/ var[0x0b] is the constant 0x00
0x0805 (0x0f45): (0x10) If var[0x33] == var[0x0b] then Goto 0x0800

/ Branch if the first word entered is "no" (0x01)
/ ("no" actually matches against "north" in the dictionary) and 
/ perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0809 (0x0f49): (0x10) If var[0x30] == var[0x01] then Goto 0x0149

/ Branch if the first word entered is "yes" (0x1d)
0x080e (0x0f4e): (0x18) If var[0x30] == (constant) 0x1d then Goto 0x135c

/ Player did not enter "yes" or "no"

/ Print message  "Please answer YES or NO\n "
0x0813 (0x0f53): (0x05) Print message (constant) 0x09

/ Loop back to get a yes / no answer
0x0815 (0x0f55): (0x00) Goto 0x0800

**************************************************************************
0x0817 (0x0f57): (0x19) If var[0x43] != (constant) 0x70 then Goto 0x083b
0x081b (0x0f5b): (0x19) If var[0x44] != (constant) 0x77 then Goto 0x0828
0x081f (0x0f5f): (0x13) If var[0x0a] > var[0x02] then Goto 0x083b
/ Print message  ""NOT AUTHORISED TO GO THERE!" "
0x0823 (0x0f63): (0x05) Print message (constant) 0x7c

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0825 (0x0f65): (0x00) Goto 0x0190
**************************************************************************
0x0828 (0x0f68): (0x19) If var[0x44] != (constant) 0x7a then Goto 0x083b
0x082c (0x0f6c): (0x08) Set var[0x1e] = (constant) 0x4a
0x082f (0x0f6f): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)
0x0832 (0x0f72): (0x10) If var[0x1f] == var[0x07] then Goto 0x083b
/ Print message  ""ONLY ARCHERS ALLOWED" "
0x0836 (0x0f76): (0x05) Print message (constant) 0x9a

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0838 (0x0f78): (0x00) Goto 0x0190
**************************************************************************
0x083b (0x0f7b): (0x19) If var[0x44] != (constant) 0xd4 then Goto 0x0848
0x083f (0x0f7f): (0x11) If var[0x3f] != var[0x0b] then Goto 0x0848
/ Print message  "A hurled flint splinters in front of your face, driving you back "
0x0843 (0x0f83): (0x05) Print message (constant) 0x9c

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0845 (0x0f85): (0x00) Goto 0x0190
**************************************************************************
0x0848 (0x0f88): (0x19) If var[0x44] != (constant) 0x29 then Goto 0x0859
0x084c (0x0f8c): (0x19) If var[0x43] != (constant) 0x22 then Goto 0x0859
0x0850 (0x0f90): (0x13) If var[0x41] > var[0x0b] then Goto 0x0859
/ Print message  ""OI! YOU CAN ONLY ENTER IF YOU SAY THE PASSWORD!" "
0x0854 (0x0f94): (0x05) Print message (constant) 0xb8

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0856 (0x0f96): (0x00) Goto 0x0190
**************************************************************************
0x0859 (0x0f99): (0x19) If var[0x44] != (constant) 0xd0 then Goto 0x0866
0x085d (0x0f9d): (0x19) If var[0x4c] != (constant) 0xba then Goto 0x0866
/ Print message  "There's a shut door in the way!\n "
0x0861 (0x0fa1): (0x05) Print message (constant) 0x22

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0863 (0x0fa3): (0x00) Goto 0x0149
**************************************************************************
0x0866 (0x0fa6): (0x19) If var[0x4c] != (constant) 0xbb then Goto 0x0877
0x086a (0x0faa): (0x18) If var[0x44] == (constant) 0x6b then Goto 0x0872
0x086e (0x0fae): (0x19) If var[0x44] != (constant) 0x6d then Goto 0x0877
/ Print message  ""You may not pass", intone the ghosts. "We failed the Master and our doom is to remain here whilst He lives." "
0x0872 (0x0fb2): (0x05) Print message (constant) 0xbc

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0874 (0x0fb4): (0x00) Goto 0x0190
**************************************************************************
0x0877 (0x0fb7): (0x19) If var[0x43] != (constant) 0x2e then Goto 0x0880
0x087b (0x0fbb): (0x10) If var[0x4b] == var[0x0b] then Goto 0x0686
0x0880 (0x0fc0): (0x19) If var[0x4c] != (constant) 0xeb then Goto 0x088d
0x0884 (0x0fc4): (0x18) If var[0x44] == (constant) 0x77 then Goto 0x088d
/ Print message  "The jelly rears up hungrily "
0x0888 (0x0fc8): (0x05) Print message (constant) 0xe9
0x088a (0x0fca): (0x00) Goto 0x12e7
**************************************************************************
0x088d (0x0fcd): (0x13) If var[0x26] > var[0x0b] then Goto 0x08b1
0x0891 (0x0fd1): (0x18) If var[0x44] == (constant) 0x91 then Goto 0x08a2
0x0895 (0x0fd5): (0x19) If var[0x43] != (constant) 0x91 then Goto 0x08b1
0x0899 (0x0fd9): (0x18) If var[0x44] == (constant) 0x90 then Goto 0x08b1
/ Print message  "A giant rat guards the corridor "
0x089d (0x0fdd): (0x05) Print message (constant) 0xed

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x089f (0x0fdf): (0x00) Goto 0x0190
**************************************************************************
0x08a2 (0x0fe2): (0x08) Set var[0x1e] = (constant) 0x53
0x08a5 (0x0fe5): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)
0x08a8 (0x0fe8): (0x12) If var[0x1f] < var[0x07] then Goto 0x08b1
/ Print message  "The rat flees from the stinking chip! "
0x08ac (0x0fec): (0x05) Print message (constant) 0xee
0x08ae (0x0fee): (0x09) Set var[0x26] = var[0x01]
0x08b1 (0x0ff1): (0x19) If var[0x44] != (constant) 0xce then Goto 0x08be
0x08b5 (0x0ff5): (0x13) If var[0x25] > var[0x0b] then Goto 0x08be
/ Print message  "A fire elemental leaps on you "
0x08b9 (0x0ff9): (0x05) Print message (constant) 0xef
0x08bb (0x0ffb): (0x00) Goto 0x12e7
**************************************************************************
0x08be (0x0ffe): (0x11) If var[0x2e] != var[0x02] then Goto 0x08cb
0x08c2 (0x1002): (0x19) If var[0x44] != (constant) 0xa1 then Goto 0x08d8
/ Print message  "You're too big to go that way "
0x08c6 (0x1006): (0x05) Print message (constant) 0xfc

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x08c8 (0x1008): (0x00) Goto 0x0190

**************************************************************************
0x08cb (0x100b): (0x19) If var[0x44] != (constant) 0xa5 then Goto 0x08d8
0x08cf (0x100f): (0x10) If var[0x2e] == var[0x01] then Goto 0x08d8
/ Print message  "You're too big to go that way "
0x08d3 (0x1013): (0x05) Print message (constant) 0xfc

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x08d5 (0x1015): (0x00) Goto 0x0190

**************************************************************************
0x08d8 (0x1018): (0x19) If var[0x44] != (constant) 0x37 then Goto 0x08f2
0x08dc (0x101c): (0x13) If var[0x0e] > var[0x0b] then Goto 0x08f2
0x08e0 (0x1020): (0x11) If var[0x2e] != var[0x0b] then Goto 0x08e9
/ Print message  "Giant ants block your path, feeling for you with sensitive antenna "
0x08e4 (0x1024): (0x05) Print message (constant) 0xfd

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x08e6 (0x1026): (0x00) Goto 0x0190

**************************************************************************
0x08e9 (0x1029): (0x10) If var[0x2e] == var[0x01] then Goto 0x08f2
/ Print message  "You accidentally step on some little ants "
0x08ed (0x102d): (0x05) Print message (constant) 0xff
0x08ef (0x102f): (0x09) Set var[0x0e] = var[0x01]
0x08f2 (0x1032): (0x19) If var[0x44] != (constant) 0x3d then Goto 0x0901
0x08f6 (0x1036): (0x19) If var[0x43] != (constant) 0xa6 then Goto 0x0901
0x08fa (0x103a): (0x11) If var[0x2e] != var[0x0b] then Goto 0x0901
/ Print message  ""
0x08fe (0x103e): (0x05) Print message (constant) 0x101
0x0901 (0x1041): (0x19) If var[0x44] != (constant) 0x9d then Goto 0x090a
0x0905 (0x1045): (0x10) If var[0x2d] == var[0x0b] then Goto 0x1611
0x090a (0x104a): (0x19) If var[0x44] != (constant) 0x9e then Goto 0x0918
0x090e (0x104e): (0x13) If var[0x42] > var[0x0b] then Goto 0x0918

/ Print message  "The troll's bad breath drives you back! "
0x0912 (0x1052): (0x05) Print message (constant) 0x10b

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0915 (0x1055): (0x00) Goto 0x0149
**************************************************************************
0x0918 (0x1058): (0x19) If var[0x44] != (constant) 0xb1 then Goto 0x092d
/ Print message  "Spikes shoot from the wall "
0x091c (0x105c): (0x05) Print message (constant) 0x10c
0x091f (0x105f): (0x08) Set var[0x1e] = (constant) 0x55
0x0922 (0x1062): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)
0x0925 (0x1065): (0x12) If var[0x1f] < var[0x07] then Goto 0x12e7
/ Print message  "but bounce off your shield "
0x092a (0x106a): (0x05) Print message (constant) 0x10d
0x092d (0x106d): (0x19) If var[0x44] != (constant) 0xb5 then Goto 0x094a
/ Print message  "Acid sprays at your eyes "
0x0931 (0x1071): (0x05) Print message (constant) 0x10e
0x0934 (0x1074): (0x08) Set var[0x31] = (constant) 0x48
0x0937 (0x1077): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)
0x093a (0x107a): (0x13) If var[0x1f] > var[0x07] then Goto 0x0944
/ Print message  "! You fall backwards "
0x093e (0x107e): (0x05) Print message (constant) 0x110
0x0941 (0x1081): (0x00) Goto 0x12e7
**************************************************************************
/ Print message  "but only destroys the blindfold "
0x0944 (0x1084): (0x05) Print message (constant) 0x10f
0x0947 (0x1087): (0x01) Gosub 0x1488
0x094a (0x108a): (0x19) If var[0x43] != (constant) 0x3f then Goto 0x0958

/ Branch if the player cannot see (0x00)
/ var[0x0b] is the constant 0x00
0x094e (0x108e): (0x10) If var[0x37] == var[0x0b] then Goto 0x0958

/ Player's eyes are open (0x01)

/ Print message  "You can't move! "
0x0952 (0x1092): (0x05) Print message (constant) 0x116

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0955 (0x1095): (0x00) Goto 0x0149
**************************************************************************
0x0958 (0x1098): (0x19) If var[0x44] != (constant) 0xba then Goto 0x0963
0x095c (0x109c): (0x11) If var[0x2c] != var[0x0b] then Goto 0x0963
/ Print message  "A hooded executioner blocks the only exit "
0x0960 (0x10a0): (0x05) Print message (constant) 0x113
0x0963 (0x10a3): (0x19) If var[0x4c] != (constant) 0x113 then Goto 0x096d
0x0968 (0x10a8): (0x04) Print message var[0x4c]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x096a (0x10aa): (0x00) Goto 0x0190

**************************************************************************
0x096d (0x10ad): (0x11) If var[0x14] != var[0x44] then Goto 0x097a
0x0971 (0x10b1): (0x1a) If var[0x15] < (constant) 0x09 then Goto 0x097a
/ Print message  "\nA humming black sphere floats in mid-air! "
0x0975 (0x10b5): (0x05) Print message (constant) 0xd2
0x0977 (0x10b7): (0x08) Set var[0x14] = (constant) 0x08
0x097a (0x10ba): (0x11) If var[0x15] != var[0x44] then Goto 0x0987
0x097e (0x10be): (0x1a) If var[0x14] < (constant) 0x09 then Goto 0x0987
/ Print message  "\nA humming black sphere floats in mid-air! "
0x0982 (0x10c2): (0x05) Print message (constant) 0xd2
0x0984 (0x10c4): (0x08) Set var[0x15] = (constant) 0x08
0x0987 (0x10c7): (0x19) If var[0x44] != (constant) 0xb4 then Goto 0x0995
0x098b (0x10cb): (0x13) If var[0x2f] > var[0x0b] then Goto 0x0995
/ Print message  "A flying hand throttles you "
0x098f (0x10cf): (0x05) Print message (constant) 0x2dc
0x0992 (0x10d2): (0x00) Goto 0x12e7
**************************************************************************
0x0995 (0x10d5): (0x10) If var[0x35] == var[0x0b] then Goto 0x099e
0x0999 (0x10d9): (0x12) If var[0x35] < var[0x05] then Goto 0x0686
0x099e (0x10de): (0x19) If var[0x44] != (constant) 0xaf then Goto 0x09a5
0x09a2 (0x10e2): (0x0a) Set var[0x35] += var[0x01]
0x09a5 (0x10e5): (0x19) If var[0x43] != (constant) 0x51 then Goto 0x09c9
0x09a9 (0x10e9): (0x19) If var[0x44] != (constant) 0xbf then Goto 0x09c9
0x09ad (0x10ed): (0x09) Set var[0x5d] = var[0x0b]
0x09b0 (0x10f0): (0x08) Set var[0x1e] = (constant) 0x69
0x09b3 (0x10f3): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)
0x09b6 (0x10f6): (0x12) If var[0x1f] < var[0x07] then Goto 0x09bd
0x09ba (0x10fa): (0x0a) Set var[0x5d] += var[0x01]
0x09bd (0x10fd): (0x0a) Set var[0x1e] += var[0x01]
0x09c0 (0x1100): (0x1a) If var[0x1e] < (constant) 0x73 then Goto 0x09b3
0x09c4 (0x1104): (0x1a) If var[0x5d] < (constant) 0x09 then Goto 0x12e7
0x09c9 (0x1109): (0x19) If var[0x4c] != (constant) 0xdc then Goto 0x09d2
/ Print message  "The orcs block you\n "
0x09cd (0x110d): (0x05) Print message (constant) 0xdd

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x09cf (0x110f): (0x00) Goto 0x0190

**************************************************************************
0x09d2 (0x1112): (0x1a) If var[0x57] < (constant) 0x1f4 then Goto 0x09e6
0x09d7 (0x1117): (0x13) If var[0x0f] > var[0x0b] then Goto 0x09e6
0x09db (0x111b): (0x18) If var[0x44] == (constant) 0x14 then Goto 0x09e3
0x09df (0x111f): (0x19) If var[0x44] != (constant) 0x1e then Goto 0x09e6
0x09e3 (0x1123): (0x09) Set var[0x0f] = var[0x01]
0x09e6 (0x1126): (0x12) If var[0x50] < var[0x02] then Goto 0x09f3
0x09ea (0x112a): (0x08) Set var[0x5d] = (constant) 0x1f4
0x09ee (0x112e): (0x0a) Set var[0x5d] += var[0x44]
0x09f1 (0x1131): (0x04) Print message var[0x5d]
0x09f3 (0x1133): (0x18) If var[0x44] == (constant) 0xde then Goto 0x12e7
0x09f8 (0x1138): (0x18) If var[0x44] == (constant) 0xe3 then Goto 0x12e7
0x09fd (0x113d): (0x18) If var[0x44] == (constant) 0x4f then Goto 0x12e7

/ TODO Branch 
/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0a02 (0x1142): (0x13) If var[0x50] > var[0x01] then Goto 0x0149
0x0a07 (0x1147): (0x09) Set var[0x43] = var[0x44]

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0a0a (0x114a): (0x00) Goto 0x0149

**************************************************************************
* Command: "take", "pick" or "steal"
**************************************************************************

/ Check to see if the player is wearing the gauntlet before allowing them to 
/ pick up the red-gold ring (will return immediately if the second word is 
/ not the red-gold ring)
0x0a0d (0x114d): (0x01) Gosub 0x129f

/ Branch if the player's current location is NOT "on the celing of a fine
/ room" (0xc8)
0x0a10 (0x1150): (0x19) If var[0x43] != (constant) 0xc8 then Goto 0x0a20

/ Branch if the second word is NOT "chandelier" (0xc2)
0x0a14 (0x1154): (0x19) If var[0x31] != (constant) 0xc2 then Goto 0x0a20

/ Player IS "on the ceiling of a fine room" and the second word IS 
/ the "chandelier"

/ Print message  "The room inverts! "
0x0a18 (0x1158): (0x05) Print message (constant) 0x3f

/ Change the player's current location to "on the carpetted floor of a 
/ comfortable homely room, beside a door to the east." (0xc9)
0x0a1a (0x115a): (0x08) Set var[0x43] = (constant) 0xc9

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0a1d (0x115d): (0x00) Goto 0x0149

**************************************************************************

0x0a20 (0x1160): (0x01) Gosub 0x153b

/ TODO Branch
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0a23 (0x1163): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190
0x0a28 (0x1168): (0x12) If var[0x3b] < var[0x4f] then Goto 0x0a3a
0x0a2c (0x116c): (0x10) If var[0x4f] == var[0x0b] then Goto 0x0a35
/ Print message  "You can't carry any more "
0x0a30 (0x1170): (0x05) Print message (constant) 0x29

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0a32 (0x1172): (0x00) Goto 0x0190
**************************************************************************
/ Print message  "You're too weak! "
0x0a35 (0x1175): (0x05) Print message (constant) 0x2a

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0a37 (0x1177): (0x00) Goto 0x0190

**************************************************************************
0x0a3a (0x117a): (0x19) If var[0x4c] != (constant) 0xa3 then Goto 0x0a50
0x0a3e (0x117e): (0x19) If var[0x31] != (constant) 0x7c then Goto 0x0a50
0x0a42 (0x1182): (0x10) If var[0x40] == var[0x43] then Goto 0x0a4b
/ Print message  "The goat prances daintily about and butts you off the cliff "
0x0a46 (0x1186): (0x05) Print message (constant) 0xa4
0x0a48 (0x1188): (0x00) Goto 0x12e7
**************************************************************************
/ Print message  "The goat dances forward but loses its footing and slips off the cliff "
0x0a4b (0x118b): (0x05) Print message (constant) 0xa5
0x0a4d (0x118d): (0x09) Set var[0x29] = var[0x01]
0x0a50 (0x1190): (0x19) If var[0x31] != (constant) 0x8a then Goto 0x0a6e
0x0a54 (0x1194): (0x08) Set var[0x1e] = (constant) 0x76
0x0a57 (0x1197): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)
0x0a5a (0x119a): (0x12) If var[0x1f] < var[0x07] then Goto 0x0a69
/ Print message  "You catch the will o'wisp in your helmet lamp "
0x0a5e (0x119e): (0x05) Print message (constant) 0xbd
0x0a60 (0x11a0): (0xe2) Set list#2[var[0x31]] = var[0x09] (list address 0x0740)
0x0a63 (0x11a3): (0x09) Set var[0x5c] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0a66 (0x11a6): (0x00) Goto 0x0190

**************************************************************************
/ Print message  "It evades your clutches "
0x0a69 (0x11a9): (0x05) Print message (constant) 0xbe

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0a6b (0x11ab): (0x00) Goto 0x0190

**************************************************************************
0x0a6e (0x11ae): (0x19) If var[0x31] != (constant) 0x98 then Goto 0x0a7b
0x0a72 (0x11b2): (0x13) If var[0x2b] > var[0x0b] then Goto 0x0a7b
/ Print message  "An evil force in the gem launches itself at your mind! "
0x0a76 (0x11b6): (0x05) Print message (constant) 0xc6
0x0a78 (0x11b8): (0x09) Set var[0x2b] = var[0x05]
0x0a7b (0x11bb): (0x19) If var[0x31] != (constant) 0x66 then Goto 0x0a89
0x0a7f (0x11bf): (0x13) If var[0x60] > var[0x0b] then Goto 0x0a89
/ Print message  "A zombi shambles from the coffin and attacks! "
0x0a83 (0x11c3): (0x05) Print message (constant) 0x121
0x0a86 (0x11c6): (0x00) Goto 0x12e7
**************************************************************************
0x0a89 (0x11c9): (0x01) Gosub 0x1488
0x0a8c (0x11cc): (0xe2) Set list#2[var[0x31]] = var[0x07] (list address 0x0740)
0x0a8f (0x11cf): (0x0a) Set var[0x3b] += var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0a92 (0x11d2): (0x00) Goto 0x0190

**************************************************************************
* Command: "drop"
**************************************************************************

0x0a95 (0x11d5): (0x19) If var[0x31] != (constant) 0x8a then Goto 0x0ab0
0x0a99 (0x11d9): (0x10) If var[0x5c] == var[0x0b] then Goto 0x0ab0
0x0a9d (0x11dd): (0x08) Set var[0x31] = (constant) 0x76
0x0aa0 (0x11e0): (0x01) Gosub 0x1559

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0aa3 (0x11e3): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

0x0aa8 (0x11e8): (0x08) Set var[0x31] = (constant) 0x8a
0x0aab (0x11eb): (0x09) Set var[0x5c] = var[0x0b]
0x0aae (0x11ee): (0x00) Goto 0x0ab8
**************************************************************************
0x0ab0 (0x11f0): (0x01) Gosub 0x1559

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0ab3 (0x11f3): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

0x0ab8 (0x11f8): (0x19) If var[0x31] != (constant) 0x81 then Goto 0x0ac1
/ Print message  "The sword protests: "See here guv, you're not gonna ditch me 'til I fight a dragin!" "
0x0abc (0x11fc): (0x05) Print message (constant) 0x3c

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0abe (0x11fe): (0x00) Goto 0x0190
**************************************************************************
0x0ac1 (0x1201): (0x19) If var[0x31] != (constant) 0x7c then Goto 0x0ad7
0x0ac5 (0x1205): (0x19) If var[0x4c] != (constant) 0xa3 then Goto 0x0ad7
0x0ac9 (0x1209): (0x10) If var[0x40] == var[0x43] then Goto 0x0ad2
/ Print message  "The goat prances daintily about and butts you off the cliff "
0x0acd (0x120d): (0x05) Print message (constant) 0xa4
0x0acf (0x120f): (0x00) Goto 0x12e7
**************************************************************************
/ Print message  "The goat dances forward but loses its footing and slips off the cliff "
0x0ad2 (0x1212): (0x05) Print message (constant) 0xa5
0x0ad4 (0x1214): (0x09) Set var[0x27] = var[0x01]
0x0ad7 (0x1217): (0x18) If var[0x31] == (constant) 0x98 then Goto 0x15e0
0x0adc (0x121c): (0x01) Gosub 0x1488
0x0adf (0x121f): (0xe2) Set list#2[var[0x31]] = var[0x44] (list address 0x0740)
0x0ae2 (0x1222): (0x00) Goto 0x126c

**************************************************************************
* Command: "inventory"
**************************************************************************

/ Print message  "\nYou have:\n "
0x0ae5 (0x1225): (0x05) Print message (constant) 0x1c

/ Set the base message id to the offset for inventory item descriptions.
/ Objects have two descriptions, one for when in the inventory and 
/ one for when in a location. The object id is added to this to get the 
/ right descriptive message.
0x0ae7 (0x1227): (0x08) Set var[0x38] = (constant) 0xe7

/ Set the location to check for objects to the inventory (0xfe)
/ var[0x07] is the constant 0x0fe
0x0aea (0x122a): (0x09) Set var[0x44] = var[0x07]

/ Print all the objects in the inventory
0x0aed (0x122d): (0x01) Gosub 0x156e

/ Branch if at least one object was printed
0x0af0 (0x1230): (0x13) If var[0x3c] > var[0x0b] then Goto 0x0af6

/ Zero objects were printed

/ Print message  "Nothing "
0x0af4 (0x1234): (0x05) Print message (constant) 0x1d

/ Branch if the player is NOT wearing any objects and 
/ perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0af6 (0x1236): (0x10) If var[0x3e] == var[0x0b] then Goto 0x0190

/ Player is wearing at least one item

/ Print message  "\nAnd you are wearing:\n "
0x0afb (0x123b): (0x05) Print message (constant) 0x26

/ Set the location to check for objects to the inventory (0xfe)
/ var[0x08] is the constant 0x0ff
0x0afd (0x123d): (0x09) Set var[0x44] = var[0x08]

/ Print all the objects the player is wearing 
0x0b00 (0x1240): (0x01) Gosub 0x156e

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0b03 (0x1243): (0x00) Goto 0x0190

**************************************************************************
* Command: "look"
**************************************************************************

**************************************************************************
* Process the player looking in the swamp / marsh
**************************************************************************

/ Branch if the player's current location is after the swamp / march
/ locations (0x08 onwards)
0x0b06 (0x1246): (0x1b) If var[0x43] > (constant) 0x08 then Goto 0x0b19

/ Branch if the player has already 
0x0b0a (0x124a): (0x13) If var[0x23] > var[0x0b] then Goto 0x0b19

/ Print message  "A face looks back: your gaze is locked! You stumble towards it.. then CRUNCH! You tread on a mechanical mask "
0x0b0e (0x124e): (0x05) Print message (constant) 0xc0

/ Set the status of the "battered silver face" to discovered (0x01)
/ var[0x01] is the constant 0x01
0x0b10 (0x1250): (0x09) Set var[0x23] = var[0x01]

/ Set the temporary variable to the object id for the "battered silver face mask" (0x7d)
0x0b13 (0x1253): (0x08) Set var[0x1e] = (constant) 0x7d

/ Set the current location of the "battered silver face mask" to the player's 
/ current location in the swamp / mask
0x0b16 (0x1256): (0xe2) Set list#2[var[0x1e]] = var[0x43] (list address 0x0740)

**************************************************************************
* Process the player looking in the Salt Cellar
**************************************************************************

/ Branch if the player's current location is NOT "in the Salt Cellar, 
/ surrounded by pillars of salt" (0x2b7)
0x0b19 (0x1259): (0x19) If var[0x43] != (constant) 0xc3 then Goto 0x0b22

/ Print message  "Your body becomes a pillar of salt! "
0x0b1d (0x125d): (0x05) Print message (constant) 0xd9

/ Kill the player
0x0b1f (0x125f): (0x00) Goto 0x12e7

/ Look processing complete
/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0b22 (0x1262): (0x00) Goto 0x0149

**************************************************************************
* Command: "hurl" or "throw"
**************************************************************************

0x0b25 (0x1265): (0x19) If var[0x43] != (constant) 0x34 then Goto 0x0b40
0x0b29 (0x1269): (0x13) If var[0x10] > var[0x05] then Goto 0x0b3e
0x0b2d (0x126d): (0x01) Gosub 0x1488
0x0b30 (0x1270): (0x08) Set var[0x5d] = (constant) 0xe5
0x0b33 (0x1273): (0xe2) Set list#2[var[0x31]] = var[0x5d] (list address 0x0740)
0x0b36 (0x1276): (0x0a) Set var[0x10] += var[0x01]
/ Print message  "The tree grabs it with a branch, raising it high into the air "
0x0b39 (0x1279): (0x05) Print message (constant) 0x4b

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0b3b (0x127b): (0x00) Goto 0x0190

**************************************************************************
/ Print message  "The tree has run out of branches: all 6 are in use! "
0x0b3e (0x127e): (0x05) Print message (constant) 0x74
0x0b40 (0x1280): (0x19) If var[0x4c] != (constant) 0x98 then Goto 0x0b51
0x0b44 (0x1284): (0x18) If var[0x31] == (constant) 0x7a then Goto 0x0b4c
0x0b48 (0x1288): (0x19) If var[0x31] != (constant) 0x56 then Goto 0x0b51
/ Print message  "The sharp wood kills the vampire "
0x0b4c (0x128c): (0x05) Print message (constant) 0x99
0x0b4e (0x128e): (0x09) Set var[0x5b] = var[0x01]
0x0b51 (0x1291): (0x19) If var[0x4c] != (constant) 0x107 then Goto 0x0b6d
0x0b56 (0x1296): (0x1a) If var[0x31] < (constant) 0x5a then Goto 0x0b5e
0x0b5a (0x129a): (0x1a) If var[0x31] < (constant) 0x85 then Goto 0x0b64
/ Print message  ""Not valuable enough! Have it back!" "
0x0b5e (0x129e): (0x05) Print message (constant) 0x10a

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0b61 (0x12a1): (0x00) Goto 0x0190

**************************************************************************
/ Print message  "The troll takes it and leaves, gloating "
0x0b64 (0x12a4): (0x05) Print message (constant) 0x108
0x0b67 (0x12a7): (0x08) Set var[0x44] = (constant) 0xa0
0x0b6a (0x12aa): (0x09) Set var[0x42] = var[0x01]
0x0b6d (0x12ad): (0x19) If var[0x31] != (constant) 0x96 then Goto 0x0b7e
0x0b71 (0x12b1): (0x19) If var[0x43] != (constant) 0x47 then Goto 0x0b7e
/ Print message  "The ring lands in the hand room. You hear a struggle, then silence a "
0x0b75 (0x12b5): (0x05) Print message (constant) 0x2dd
0x0b78 (0x12b8): (0x09) Set var[0x44] = var[0x09]
0x0b7b (0x12bb): (0x09) Set var[0x2f] = var[0x01]
0x0b7e (0x12be): (0x00) Goto 0x0a95

**************************************************************************
* Command: "apply", "rub", "wear" or "smeau" (!)
**************************************************************************

/ Check to see if the player is wearing the gauntlet before allowing them to 
/ wear the red-gold ring (will return immediately if the second word is 
/ not the red-gold ring)
0x0b81 (0x12c1): (0x01) Gosub 0x129f


0x0b84 (0x12c4): (0x01) Gosub 0x15c5

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0b87 (0x12c7): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ TODO
/ Branch if the player is shrunk (max inventory will be 0x00)
/ and print "you're too weak"
/ var[0x0b] is the constant 0x00
0x0b8c (0x12cc): (0x10) If var[0x4f] == var[0x0b] then Goto 0x0a35

/ Branch if the second word is the "blindfold" (0x48)
0x0b91 (0x12d1): (0x18) If var[0x31] == (constant) 0x48 then Goto 0x0bc2

/ Branch if the second word is the "gauntlet" / "glove" (0x4d)
0x0b95 (0x12d5): (0x18) If var[0x31] == (constant) 0x4d then Goto 0x0bc2

/ Branch if the second word is the "shield" (0x55)
0x0b99 (0x12d9): (0x18) If var[0x31] == (constant) 0x55 then Goto 0x0bc2

/ Branch if the second word is the "lamp" (0x76)
0x0b9d (0x12dd): (0x18) If var[0x31] == (constant) 0x76 then Goto 0x0bc2

/ Branch if the second word is the "belt" (0x79)
0x0ba1 (0x12e1): (0x18) If var[0x31] == (constant) 0x79 then Goto 0x0bbd

/ Branch if the second word is the "cold cream" (0x94)
0x0ba5 (0x12e5): (0x18) If var[0x31] == (constant) 0x94 then Goto 0x0f07

/ Branch if the second word is the "hangman's hood" (0x95)
0x0baa (0x12ea): (0x18) If var[0x31] == (constant) 0x95 then Goto 0x0bc2

/ Branch if the second word is the "red-gold ring" (0x96)
0x0bae (0x12ee): (0x18) If var[0x31] == (constant) 0x96 then Goto 0x0bc2

/ Branch if the second word is any other object before the 
/ "red-gold ring" (0x8c) and print "You can't do that" 
0x0bb2 (0x12f2): (0x1a) If var[0x31] < (constant) 0x8c then Goto 0x0bba

/ Branch if the second word is one of the collars:
/ 0x8c : a red collar
/ 0x8d : an orange collar
/ 0x8e : a yellow collar
/ 0x8f : a green collar
/ 0x90 : a blue collar
/ 0x91 : a violet collar
/ 0x92 : a silver collar
/ 0x93 : a mithril collar
0x0bb6 (0x12f6): (0x1a) If var[0x31] < (constant) 0x94 then Goto 0x0bdf

/ Player is trying to wear an object that cannot be worn

/ Print "You can't do that" 
0x0bba (0x12fa): (0x00) Goto 0x15e0
**************************************************************************

/ Player is wearing the good strong belt so increase the maximum inventory
/ items that they can carry to 0x0a (10)
0x0bbd (0x12fd): (0x08) Set var[0x4f] = (constant) 0x0a

/ Print message  "You feel much stronger! "
0x0bc0 (0x1300): (0x05) Print message (constant) 0x60

0x0bc2 (0x1302): (0x01) Gosub 0x1488
0x0bc5 (0x1305): (0xe2) Set list#2[var[0x31]] = var[0x08] (list address 0x0740)
0x0bc8 (0x1308): (0x0a) Set var[0x3e] += var[0x01]
0x0bcb (0x130b): (0x19) If var[0x31] != (constant) 0x48 then Goto 0x0bd2
0x0bcf (0x130f): (0x09) Set var[0x21] = var[0x01]
0x0bd2 (0x1312): (0x19) If var[0x31] != (constant) 0x95 then Goto 0x0bdc
/ Print message  "Now YOU can take the executioner's place! "
0x0bd6 (0x1316): (0x05) Print message (constant) 0x118
0x0bd9 (0x1319): (0x00) Goto 0x135c
**************************************************************************

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0bdc (0x131c): (0x00) Goto 0x0190

**************************************************************************
0x0bdf (0x131f): (0x08) Set var[0x1e] = (constant) 0x8c
0x0be2 (0x1322): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)
0x0be5 (0x1325): (0x12) If var[0x1f] < var[0x07] then Goto 0x0bec
0x0be9 (0x1329): (0xe2) Set list#2[var[0x1e]] = var[0x43] (list address 0x0740)
0x0bec (0x132c): (0x0a) Set var[0x1e] += var[0x01]
0x0bef (0x132f): (0x1a) If var[0x1e] < (constant) 0x94 then Goto 0x0be2
0x0bf3 (0x1333): (0x09) Set var[0x0a] = var[0x31]
0x0bf6 (0x1336): (0x00) Goto 0x0bc2
**************************************************************************

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0bf8 (0x1338): (0x00) Goto 0x0190

**************************************************************************
* Command: quit
**************************************************************************

/ Print message  "\nReally stop?\n "
0x0bfb (0x133b): (0x05) Print message (constant) 0x0d

/ Get the player's yes or no answer
0x0bfd (0x133d): (0x07) Input - results in word1 var[0x30], word2 var[0x31], word3 var[0x32], count var[0x33]

/ Branch if the first word entered is "no" (0x01)
/ ("no" actually matches against "north" in the dictionary)
/ and perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0c02 (0x1342): (0x10) If var[0x30] == var[0x01] then Goto 0x0149

/ Branch if the first word entered is "yes" (0x1d)
0x0c07 (0x1347): (0x18) If var[0x30] == (constant) 0x1d then Goto 0x135c

/ Player did not enter "yes" or "no"

/ Print message  "Please answer YES or NO\n "
0x0c0c (0x134c): (0x05) Print message (constant) 0x09

/ Loop back to get a yes / no answer
0x0c0e (0x134e): (0x00) Goto 0x0bfb

**************************************************************************
* Command: "light", "ignite" or "burn"
**************************************************************************

/ Branch if the player's current location IS "at a junction in the round, 
/ north-south passage, illuminated by a jet of flame from the floor." (0xcc)
0x0c10 (0x1350): (0x18) If var[0x44] == (constant) 0xcc then Goto 0x0c2b

/ Branch if the "driftwood" is unlit (0x00)
/ var[0x0b] is the constant 0x00
0x0c14 (0x1354): (0x10) If var[0x36] == var[0x0b] then Goto 0x0c26

/ Set the temporary variable to the object id for the "driftwood" (0x4c)
0x0c18 (0x1358): (0x08) Set var[0x1e] = (constant) 0x4c

/ Get the current location of the "driftwood" (0x4c)
0x0c1b (0x135b): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the driftwood is in the player's current location
0x0c1e (0x135e): (0x10) If var[0x1f] == var[0x44] then Goto 0x0c2b

/ Branch if the driftwood IS in the player's inventory
0x0c22 (0x1362): (0x10) If var[0x1f] == var[0x07] then Goto 0x0c2b

/ Print message  "You've no fire "
0x0c26 (0x1366): (0x05) Print message (constant) 0x5e

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0c28 (0x1368): (0x00) Goto 0x0190

**************************************************************************

/ Player's current location is "at a junction in the round, 
/ north-south passage, illuminated by a jet of flame from the floor." (0xcc)
/ OR it's the driftwood

/ Check if the 
0x0c2b (0x136b): (0x01) Gosub 0x15c5

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0c2e (0x136e): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ Branch if the second word is the "rope" (0x54) and "It burns to ash"
0x0c33 (0x1373): (0x18) If var[0x31] == (constant) 0x54 then Goto 0x0c5c

/ Branch if the second word is the "wedge" (0x55) and "It burns to ash"
0x0c37 (0x1377): (0x18) If var[0x31] == (constant) 0x55 then Goto 0x0c5c

/ Branch if the second word is the "shield" (0x55) and "It burns to ash"
0x0c3b (0x137b): (0x18) If var[0x31] == (constant) 0x56 then Goto 0x0c5c

/ Branch if the second word is the "carving" (0x5a) and "It burns to ash"
0x0c3f (0x137f): (0x18) If var[0x31] == (constant) 0x5a then Goto 0x0c5c

/ Branch if the second word is the "cross" (0x7a) and "It burns to ash"
0x0c43 (0x1383): (0x18) If var[0x31] == (constant) 0x7a then Goto 0x0c5c

/ Branch if the second word is the "wand" (0x82) and "It burns to ash"
0x0c47 (0x1387): (0x18) If var[0x31] == (constant) 0x82 then Goto 0x0c5c

/ Branch if the second word is the "packing case" (0x88) and "It burns to ash"
0x0c4b (0x138b): (0x18) If var[0x31] == (constant) 0x88 then Goto 0x0c5c

/ Branch if the second word is the "pod" (0x89) and "It burns to ash"
0x0c4f (0x138f): (0x18) If var[0x31] == (constant) 0x89 then Goto 0x0c5c

/ Branch if the second word is the "driftwood" (0x4c) and
0x0c53 (0x1393): (0x18) If var[0x31] == (constant) 0x4c then Goto 0x0c64

/ Print message  "It won't burn "
0x0c57 (0x1397): (0x05) Print message (constant) 0x5c

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0c59 (0x1399): (0x00) Goto 0x0149

**************************************************************************

/ Print message  "It burns to ash "
0x0c5c (0x139c): (0x05) Print message (constant) 0x5d

/ Remove the object from the game
0x0c5e (0x139e): (0x01) Gosub 0x1488

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0c61 (0x13a1): (0x00) Goto 0x0149

**************************************************************************

/ Print message  "The wood burns brightly "
0x0c64 (0x13a4): (0x05) Print message (constant) 0x62

/ Branch if the drifwood is already burning
/ var[0x0b] is the constant 0x00
0x0c66 (0x13a6): (0x13) If var[0x36] > var[0x0b] then Goto 0x0c6d

/ Driftwood NOT burning (0x00)

/ Set the number of turns that the wood is burning to 200 (0xc8) turns
0x0c6a (0x13aa): (0x08) Set var[0x36] = (constant) 0xc8

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0c6d (0x13ad): (0x00) Goto 0x0149

**************************************************************************
* Command: "extinguish"
**************************************************************************

0x0c70 (0x13b0): (0x01) Gosub 0x0c7f

/ BUG? Will never get here as the subroutine will print "You can't do that"
/ or "Don't be silly!"

/ Branch if the player does NOT have the object and
/ perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0c72 (0x13b2): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ Print "99 " (unfinished code / defintions)

/ Print message  "99 "
0x0c77 (0x13b7): (0x05) Print message (constant) 0x63

/ Set the driftwood to extinguished
0x0c79 (0x13b9): (0x09) Set var[0x36] = var[0x0b]

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0c7c (0x13bc): (0x00) Goto 0x0149

**************************************************************************

/ Branch if there is a second word (it can never be 0x01 which is North as
/ this would be sorted to be before extinguish)
0x0c7f (0x13bf): (0x1b) If var[0x31] > (constant) 0x01 then Goto 0x0c86

/ No second word

/ Set the second word to the "driftwood" (0x4c)
0x0c83 (0x13c3): (0x08) Set var[0x31] = (constant) 0x4c

/ Check to see if the player has the object 
0x0c86 (0x13c6): (0x01) Gosub 0x1559

/ Branch if the second word is the "helmet" and print ""You can't do that"
0x0c89 (0x13c9): (0x18) If var[0x31] == (constant) 0x76 then Goto 0x15e0

/ Second word is NOT the helmet

/ BUG? 
/ Branch if the second word is (0x44) - first object starts at 0x46
/ and print ""Don't be silly! " - this SHOULD have been  "driftwood" (0x4c)
0x0c8e (0x13ce): (0x19) If var[0x31] != (constant) 0x44 then Goto 0x1609

/ Second word is (0x44) - can never get here

/ All done
0x0c93 (0x13d3): (0x02) Return

**************************************************************************
* Command: "tie" or "fasten"
**************************************************************************

/ Branch if the second word is the "rope" (0x54)
0x0c94 (0x13d4): (0x19) If var[0x31] != (constant) 0x54 then Goto 0x15e0

/ Second word is NOT the "rope" (0x54)

/ Check that the object is "pickupable" and in the player's inventory or 
/ being worn
0x0c99 (0x13d9): (0x01) Gosub 0x1559

/ Branch if the player doesn't have the object and
/ perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0c9c (0x13dc): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ Branch if the player's current location is "in the roc's nest, where 
/ it brings "food" for storage" (0x2e)
0x0ca1 (0x13e1): (0x18) If var[0x43] == (constant) 0x2e then Goto 0x0caa

/ Print message  "There's nothing to tie it to "
0x0ca5 (0x13e5): (0x05) Print message (constant) 0xc5

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0ca7 (0x13e7): (0x00) Goto 0x0190

**************************************************************************

/ Set the status of the rope to "tied to the roc's nest" (0x01)
/ var[0x01] is the constant 0x01
0x0caa (0x13ea): (0x09) Set var[0x4b] = var[0x01]

/ Remove the rope from the game
0x0cad (0x13ed): (0x01) Gosub 0x1488

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0cb0 (0x13f0): (0x00) Goto 0x0149

**************************************************************************
* Command: "open", "slide" or "unlock"
**************************************************************************

/ Branch if the player is opening the "small ornate box wtih a lid" (0x4b)
0x0cb3 (0x13f3): (0x18) If var[0x31] == (constant) 0x4b then Goto 0x13e7

/ Branch if the player is NOT opening their "eyes" (0xc5) and TODO 
0x0cb8 (0x13f8): (0x19) If var[0x31] != (constant) 0xc5 then Goto 0x0cc2

/ Set the status of the player's eyes to open (0x00)
/ var[0x0b] is the constant 0x00
0x0cbc (0x13fc): (0x09) Set var[0x20] = var[0x0b]

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0cbf (0x13ff): (0x00) Goto 0x0149

**************************************************************************

/ Branch if the player's current location is NOT "in the strong room." (0xa6)
0x0cc2 (0x1402): (0x19) If var[0x44] != (constant) 0xa6 then Goto 0x0ccc

/ Set the second word to "bolt" (0xbb)
0x0cc6 (0x1406): (0x08) Set var[0x31] = (constant) 0xbb

/ Call the "draw bolt" routine
0x0cc9 (0x1409): (0x00) Goto 0x0f12
**************************************************************************
0x0ccc (0x140c): (0x18) If var[0x43] == (constant) 0x2a then Goto 0x15e0
0x0cd1 (0x1411): (0x18) If var[0x43] == (constant) 0x77 then Goto 0x15e0
/ Print message  "There's nothing worth opening "
0x0cd6 (0x1416): (0x05) Print message (constant) 0x64

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0cd8 (0x1418): (0x00) Goto 0x0190

**************************************************************************
* Command: "close", "lock" or "shut"
**************************************************************************

**************************************************************************
* Process the player closing their eyes
**************************************************************************

/ Branch if the second word is NOT "eyes" (0xc5)
0x0cdb (0x141b): (0x19) If var[0x31] != (constant) 0xc5 then Goto 0x0ce5

/ Set the status of the player's eyes to closed (0x01)
/ var[0x01] is the constant 0x01
0x0cdf (0x141f): (0x09) Set var[0x20] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0ce2 (0x1422): (0x00) Goto 0x0190

**************************************************************************
* Process the player closing their eyes
**************************************************************************

/ Branch if the second word is the "coffin" (0xbd)
0x0ce5 (0x1425): (0x18) If var[0x31] == (constant) 0xbd then Goto 0x0cef

/ Print message  "Nothing here's worth closing "
0x0ce9 (0x1429): (0x05) Print message (constant) 0x115

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0cec (0x142c): (0x00) Goto 0x0190

**************************************************************************
* Process the player closing the coffin
**************************************************************************

/ Branch if the player's current location is NOT "in the crypt, beside a 
/ rotting coffin" (0x67)
0x0cef (0x142f): (0x19) If var[0x43] != (constant) 0x67 then Goto 0x0ce9

/ Player IS "in the crypt, beside a rotting coffin"

/ Set the second word to the "hammer" or "mallet" (0x4e)
0x0cf3 (0x1433): (0x08) Set var[0x31] = (constant) 0x4e

/ Get the current location of the "hammer" or "mallet" (0x4e)
0x0cf6 (0x1436): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "hammer" or "mallet" is NOT in the player's inventory
/ var[0x07] is the constant 0xfe
0x0cf9 (0x1439): (0x12) If var[0x1f] < var[0x07] then Goto 0x0d13

/ Set the second word to the "nails" (0x50)
0x0cfd (0x143d): (0x08) Set var[0x31] = (constant) 0x50

/ Get the current location of the "nails" (0x50)
0x0d00 (0x1440): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the "nails" are NOT in the player's inventory
/ var[0x07] is the constant 0xfe
0x0d03 (0x1443): (0x12) If var[0x1f] < var[0x07] then Goto 0x0d13

/ Remove the "nails" from the game
0x0d07 (0x1447): (0x01) Gosub 0x1488

/ Set the status of the coffin to "nailed shut" (0x01)
0x0d0a (0x144a): (0x09) Set var[0x60] = var[0x01]

/ Print message  "You nail the coffin tight shut "
0x0d0d (0x144d): (0x05) Print message (constant) 0x120

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0d10 (0x1450): (0x00) Goto 0x0149

**************************************************************************

/ Print message  "You need a hammer and nails "
0x0d13 (0x1453): (0x05) Print message (constant) 0x11d

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0d16 (0x1456): (0x00) Goto 0x0149

**************************************************************************

/ Check that the object is "pickupable" and in the player's inventory or 
/ being worn
0x0d19 (0x1459): (0x01) Gosub 0x1559

/ Branch if hthe object is not pickupable or the player doesn't have it
/ perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0d1c (0x145c): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ Print "Nothing happens"
0x0d21 (0x1461): (0x00) Goto 0x15f0

**************************************************************************
* Command: "bite", "eat", "nibble", "swallow" or "taste"
**************************************************************************

/ Branch if the second word is the "mushroom" (0xa5) which will 
/ vary on which one by location
0x0d24 (0x1464): (0x18) If var[0x31] == (constant) 0xa5 then Goto 0x0d4d

/ Player is NOT eating a mushroom

/ Check the player has the object and it's not a non-pickupable object
/ Will print "Don't be silly!" if it's not 
0x0d28 (0x1468): (0x01) Gosub 0x1559

/ Branch if an invalid command for the object (0x00) and perform additional 
/ location specific checks skipping the code that prints the location description
/ and ask "What next?" 
/ var[0x0b] is the constant 0x00
0x0d2b (0x146b): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ Valid command (0x01)

/ Branch if the player is trying to eat the "berries" (0x47)
/ and print "If you must.. YOu feel REALLY ILL now"
0x0d30 (0x1470): (0x18) If var[0x31] == (constant) 0x47 then Goto 0x0d45

/ Branch if the player is trying to eat the "rancid potato slices" (0x53)
/ and print "If you must.. YOu feel REALLY ILL now"
0x0d34 (0x1474): (0x18) If var[0x31] == (constant) 0x53 then Goto 0x0d45

/ Branch if the player is trying to eat the "rare spices" (0x74)
/ and print "If you must.. YOu feel REALLY ILL now" 
0x0d38 (0x1478): (0x18) If var[0x31] == (constant) 0x74 then Goto 0x0d45

/ Branch if the player is trying to eat the "cold cream" (0x94)
/ and print "If you must.. YOu feel REALLY ILL now"
0x0d3c (0x147c): (0x18) If var[0x31] == (constant) 0x94 then Goto 0x0d45

/ Player is trying to eat something else

/ Print message  "Yeuch!! "
0x0d40 (0x1480): (0x05) Print message (constant) 0x07

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0d42 (0x1482): (0x00) Goto 0x0190

**************************************************************************

/ Player is eating the "berries", "rancid potato slices", "rare spices" 
/ or "cold cream"

/ Remove the object from the game
0x0d45 (0x1485): (0x01) Gosub 0x1488

/ Print message  "If you must.. You feel REALLY ILL now "
0x0d48 (0x1488): (0x05) Print message (constant) 0xf1

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0d4a (0x148a): (0x00) Goto 0x0190

**************************************************************************

/ Branch if the player IS "on the floor of a cavern, beside a clump of 
/ evil green toadstools" (0x36), these are deadly poison and kill the player
0x0d4d (0x148d): (0x18) If var[0x43] == (constant) 0x36 then Goto 0x0d70

/ Branch if the player IS "on a wide ledge half-way up the south side of a 
/ tall cave. Steps lead up and down. Several small, brightly patterned,
/ psychaedelic mushrooms grow at the back of the ledge" 0x9b
0x0d51 (0x1491): (0x18) If var[0x43] == (constant) 0x9b then Goto 0x0d75

/ BUG? No mushroom is mentioned here and the player can "eat mushroom"
/ even without one in the inventory
/ Branch if the player IS "at the end of an aqueduct designed to drip water 
/ evenly into the depths of a deep pit below." (0x39) and print "It tastes ok"
0x0d55 (0x1495): (0x18) If var[0x43] == (constant) 0x39 then Goto 0x0d7d

/ BUG? No mushroom is mentioned here and the player can "eat mushroom"
/ even without one in the inventory
/ Branch if the player IS "on a wide ledge outside a tunnel entrance." (0xa1)
/ and print "It tastes ok"
0x0d59 (0x1499): (0x18) If var[0x43] == (constant) 0xa1 then Goto 0x0d7d

/ Branch if the player IS "in the troll's squalid store room, amidst junk 
/ of every kind." (0xa0) and print "It tastes fantastic"
0x0d5d (0x149d): (0x18) If var[0x43] == (constant) 0xa0 then Goto 0x0d82

/ Branch if the player IS "south a vast cavern floor, beside some small 
/ grey mushrooms." and shrink the player
0x0d61 (0x14a1): (0x18) If var[0x43] == (constant) 0xa8 then Goto 0x0d8d

/ Branch if the player iS "North of the cave floor, below a huge grey 
/ mushroom" (0x38) and grow the player
0x0d65 (0x14a5): (0x18) If var[0x43] == (constant) 0x38 then Goto 0x0d9f

/ Branch if the player IS "on a wide ledge between a sturdy bridge 
/ and a fissure in the rock." (0xa3) and make the player invisible
0x0d69 (0x14a9): (0x18) If var[0x43] == (constant) 0xa3 then Goto 0x0db8

/ Player is in a different location that does not have mushrooms
/ Print "You can't see it"
0x0d6d (0x14ad): (0x00) Goto 0x1619

**************************************************************************
* Player ate the evil green toadstools
**************************************************************************

/ Print message  "It's deadly poison "
0x0d70 (0x14b0): (0x05) Print message (constant) 0xf2

/ Kill the player
0x0d72 (0x14b2): (0x00) Goto 0x12e7

**************************************************************************
* Player ate the psychedlic mushrooms
**************************************************************************

/ Print message  "Wowee! "
0x0d75 (0x14b5): (0x05) Print message (constant) 0xf7

/ Player will see the "fine golden pathway" instead of the rottig bridge now
0x0d77 (0x14b7): (0x09) Set var[0x2d] = var[0x01]

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0d7a (0x14ba): (0x00) Goto 0x0149

**************************************************************************
* Player ate ordinary mushrooms or the giant grey mushroom when a giant
* or the small grey mushrooms when already shrunk
**************************************************************************

/ Print message  "It tastes OK "
0x0d7d (0x14bd): (0x05) Print message (constant) 0xf3

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0d7f (0x14bf): (0x00) Goto 0x0190

**************************************************************************
* Player ate the tasty mushrooms
**************************************************************************

/ Print message  "It tastes fantastic! "
0x0d82 (0x14c2): (0x05) Print message (constant) 0xf4

/ Set the temporary variable to the constant 50 (0x52)
0x0d84 (0x14c4): (0x08) Set var[0x5d] = (constant) 0x32

/ Unused but incremented by 50 (0x32) when a player eats something that tastes fantastic!
0x0d87 (0x14c7): (0x0a) Set var[0x0d] += var[0x5d]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0d8a (0x14ca): (0x00) Goto 0x0190

**************************************************************************
* Player ate the small grey mushrooms and will shrink if not already shrunk
**************************************************************************

/ Branch if the player is already shrunk (0x01) and print "It tastes OK"
/ var[0x01] is the constant 0x01
0x0d8d (0x14cd): (0x10) If var[0x2e] == var[0x01] then Goto 0x0d7d

/ Print message  "You shrink "
0x0d91 (0x14d1): (0x05) Print message (constant) 0xfa

/ Set the status of the player to shurnk (0x01)
/ var[0x01] is the constant 0x01
0x0d93 (0x14d3): (0x09) Set var[0x2e] = var[0x01]

/ Player ate the small grey mushrooms and shrank so decrease the maximum inventory
/ items that they can carry to 0x00 (0)
/ var[0x0b] is the constant 0x00
0x0d96 (0x14d6): (0x09) Set var[0x4f] = var[0x0b]

/ Put eveything the player is wearing and in their inventory into the player's
/ current location
0x0d99 (0x14d9): (0x01) Gosub 0x1471

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0d9c (0x14dc): (0x00) Goto 0x0149

**************************************************************************
* Process the player eating the large grey mushroom that makes them grow
**************************************************************************

/ Branch if the player has grown to be a giant (0x02) and just print 
/ "It tastes OK" and do nothing else
/ var[0x02] is the constant 0x02
0x0d9f (0x14df): (0x10) If var[0x2e] == var[0x02] then Goto 0x0d7d

/ Print message  "You grow "
0x0da3 (0x14e3): (0x05) Print message (constant) 0xfb

/ Player ate the large grey mushroom and grew so increase the maximum inventory
/ items that they can carry to 0x04 (4)
/ var[0x04] is the constant 0x04
0x0da5 (0x14e5): (0x09) Set var[0x4f] = var[0x04]

/ Branch if the player is currently shrunk (0x01)
/ var[0x01] is the constant 0x01
0x0da8 (0x14e8): (0x10) If var[0x2e] == var[0x01] then Goto 0x0db2

/ Player is normal size (0x00)

/ Make the player a giant (0x02)
/ var[0x02] is the constant 0x02
0x0dac (0x14ec): (0x09) Set var[0x2e] = var[0x02]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0daf (0x14ef): (0x00) Goto 0x0190

/ Make the player a normal size (0x00)
/ var[0x0b] is the constant 0x00
0x0db2 (0x14f2): (0x09) Set var[0x2e] = var[0x0b]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0db5 (0x14f5): (0x00) Goto 0x0190

**************************************************************************
* Player ate the invisible mushrooms
**************************************************************************

/ Print message  "You are invisible! "
0x0db8 (0x14f8): (0x05) Print message (constant) 0x105

/ Set the status of the player to "invisible" (0xa)
/ (number of turns before they are visible again i.e. 10)
0x0dbb (0x14fb): (0x08) Set var[0x34] = (constant) 0x0a

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0dbe (0x14fe): (0x00) Goto 0x0190

**************************************************************************
* BUG - NEVER CALLED, REDUNDANT CODE (already a handler for this)
* Command: "search" or "examine"
**************************************************************************

0x0dc1 (0x1501): (0x01) Gosub 0x1559

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0dc4 (0x1504): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

0x0dc9 (0x1509): (0x00) Goto 0x15e0

**************************************************************************
* Command: "blow" or "play"
**************************************************************************

0x0dcc (0x150c): (0x01) Gosub 0x1559

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0dcf (0x150f): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

0x0dd4 (0x1514): (0x19) If var[0x31] != (constant) 0x75 then Goto 0x0dec
/ Print message  "The stick emits a reedy whistle "
0x0dd8 (0x1518): (0x05) Print message (constant) 0x65

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0dda (0x151a): (0x19) If var[0x43] != (constant) 0x2a then Goto 0x0190

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0ddf (0x151f): (0x11) If var[0x1c] != var[0x0b] then Goto 0x0190

/ Print message  "and the door swings open "
0x0de4 (0x1524): (0x05) Print message (constant) 0x66
0x0de6 (0x1526): (0x09) Set var[0x1c] = var[0x01]

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0de9 (0x1529): (0x00) Goto 0x0149
**************************************************************************
0x0dec (0x152c): (0x19) If var[0x31] != (constant) 0x7c then Goto 0x15e0
/ Print message  "The sound reverberates from the hills "
0x0df1 (0x1531): (0x05) Print message (constant) 0xe4

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0df3 (0x1533): (0x19) If var[0x4c] != (constant) 0xdc then Goto 0x0190

/ Print message  "and the orcs flee! "
0x0df8 (0x1538): (0x05) Print message (constant) 0xe5
0x0dfa (0x153a): (0x09) Set var[0x0f] = var[0x06]

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0dfd (0x153d): (0x00) Goto 0x0149

**************************************************************************
* Command: "give"
**************************************************************************

0x0e00 (0x1540): (0x01) Gosub 0x1559

/ TODO Branch
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e03 (0x1543): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190
0x0e08 (0x1548): (0x18) If var[0x4c] == (constant) 0x107 then Goto 0x0b25
0x0e0e (0x154e): (0x00) Goto 0x15f8

**************************************************************************
* Command: "search" or "examine"
**************************************************************************

/ Branch if the second word is empty (0x00)
/ var[0x0b] is the constant 0x00
0x0e11 (0x1551): (0x10) If var[0x31] == var[0x0b] then Goto 0x0e2b

/ Branch if the second word is the "corpse" (0x49)
0x0e15 (0x1555): (0x18) If var[0x31] == (constant) 0x49 then Goto 0x0e42

/ Branch if the second word is the "seed pod" (0x89)
0x0e19 (0x1559): (0x18) If var[0x31] == (constant) 0x89 then Goto 0x126c

/ Branch if the second word is an NPC or colour
0x0e1e (0x155e): (0x1b) If var[0x31] > (constant) 0x99 then Goto 0x0e26

/ Branch if the second word is NOT empty (a real object or verb)
/ var[0x0b] is the constant 0x00
0x0e22 (0x1562): (0x13) If var[0x31] > var[0x0b] then Goto 0x0e82

/ Print message  "You don't find anything "
0x0e26 (0x1566): (0x05) Print message (constant) 0x6b

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e28 (0x1568): (0x00) Goto 0x0190

**************************************************************************
* Second word is empty for "search" or "examine"
**************************************************************************

/ Branch if the player is NOT "in a rough-hewn store room, filled by a haystack" (0x76)
0x0e2b (0x156b): (0x19) If var[0x43] != (constant) 0x76 then Goto 0x0e26

/ Set the temporary variable to the object id for the "cube of sticky metal" (0x76)
0x0e2f (0x156f): (0x08) Set var[0x1e] = (constant) 0x73

/ Get the current location of the "cube" 
0x0e32 (0x1572): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the location is NOT in the player's inventory (0xfe)
/ and print "You don't find anything"
/ var[0x07] is the constant 0xfe
0x0e35 (0x1575): (0x11) If var[0x1f] != var[0x07] then Goto 0x0e26

/ Set the temporary variable to the object id for the "jewelled needle" (0x60)
0x0e39 (0x1579): (0x08) Set var[0x1e] = (constant) 0x60

/ Check to see if the object is found if so print it
0x0e3c (0x157c): (0x01) Gosub 0x1282

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e3f (0x157f): (0x00) Goto 0x0190

**************************************************************************
* Second word is "corpse" for "search" or "examine"
* There are two corpses, one at "dead end, below a gallows tree..." and
* one at "the east end of a long room".  In the latter the corpse can 
* be picked up 
**************************************************************************

/ Branch if the player's current location IS "in a dead end, below a gallows
/ tree from which a bloodless corpse hangs by one foot" (0xb1)
0x0e42 (0x1582): (0x18) If var[0x43] == (constant) 0xb1 then Goto 0x0e56

/ Player is NOT "in a dead end..." 

/ Get the current location of the "corpse" 
0x0e46 (0x1586): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the "corpse" is in the player's inventory (0xfe) (!)
/ and process searching it
0x0e49 (0x1589): (0x1b) If var[0x1f] > (constant) 0xfd then Goto 0x0e56

/ Branch if the "corpse" is in the player's current location 
/ and process searching it
0x0e4d (0x158d): (0x10) If var[0x1f] == var[0x43] then Goto 0x0e56

/ Pickupable corpse is somewhere else

/ Print message  "You can't see it "
0x0e51 (0x1591): (0x05) Print message (constant) 0x0c

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e53 (0x1593): (0x00) Goto 0x0190

**************************************************************************

/ Branch if the player HAS visited the gallows tree (0x01) 
/ as this changes what can be found on either corpse to the "blindfold" 
/ and "gauntlet"
/ var[0x01] is the constant 0x01
0x0e56 (0x1596): (0x10) If var[0x12] == var[0x01] then Goto 0x0e6e

/ Set the temporary variable to the object id for the "short bow" (0x4a)
0x0e5a (0x159a): (0x08) Set var[0x1e] = (constant) 0x4a

/ Check to see if the object is discoverable and print it if it is
0x0e5d (0x159d): (0x01) Gosub 0x1282

/ Branch if the short bow is not discoverable (and neither is the orange collar)
/ perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e60 (0x15a0): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ Set the temporary variable to the object id for the "orange collar (0x8c)
0x0e65 (0x15a5): (0x08) Set var[0x1e] = (constant) 0x8d

/ Check to see if the object is discoverable and print it if it is
0x0e68 (0x15a8): (0x01) Gosub 0x1291

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e6b (0x15ab): (0x00) Goto 0x0190

**************************************************************************

/ Set the temporary variable to the object id for the "blindfold" (0x48)
0x0e6e (0x15ae): (0x08) Set var[0x1e] = (constant) 0x48

/ Check to see if the object is discoverable and print it if it is
0x0e71 (0x15b1): (0x01) Gosub 0x1282

/ Branch if the blindfold (and therefore gauntlet) has already been discovered 
/ and perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e74 (0x15b4): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ Set the temporary variable to the object id for the "gauntlet" (0x4d)
0x0e79 (0x15b9): (0x08) Set var[0x1e] = (constant) 0x4d

/ Check to see if the object is discoverable and print it if it is
0x0e7c (0x15bc): (0x01) Gosub 0x1291

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e7f (0x15bf): (0x00) Goto 0x0190

**************************************************************************

/ Set the temporary variable to the current location of the object in the 
/ second word
0x0e82 (0x15c2): (0xa2) Set var[0x5d] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the object is in the player's inventory (0xfe)
/ BUG: This should be > var[0x07] to allow worn items to be examined
/ var[0x07] is the constant 0xfe
0x0e85 (0x15c5): (0x10) If var[0x5d] == var[0x07] then Goto 0x0e92

/ Branch if the object is in the player's current location
0x0e89 (0x15c9): (0x10) If var[0x5d] == var[0x44] then Goto 0x0e92

/ Not in the player's inventory or 

/ Print message  "You can't see it "
0x0e8d (0x15cd): (0x05) Print message (constant) 0x0c

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e8f (0x15cf): (0x00) Goto 0x0190

**************************************************************************

0x0e92 (0x15d2): (0x1b) If var[0x31] > (constant) 0x59 then Goto 0x0e9b
/ Print message  "It is nothing special "
0x0e96 (0x15d6): (0x05) Print message (constant) 0x50

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0e98 (0x15d8): (0x00) Goto 0x0190

**************************************************************************

/ Branch if the second word object is NOT a treasure 
0x0e9b (0x15db): (0x1b) If var[0x31] > (constant) 0x84 then Goto 0x0ea1

/ Object IS a treasure 

/ Print message  "It is very valuable!\n "
0x0e9f (0x15df): (0x05) Print message (constant) 0x4e

/ Branch if the second word object is NOT enchanted
0x0ea1 (0x15e1): (0x1a) If var[0x31] < (constant) 0x78 then Goto 0x0ea7

/ Object is enchanted - only objects between 0x78 and 0x84
/ 0x78 : a gilt miner's helmet with a lamp
/ 0x7a : a golden bed
/ 0x7b : a good, strong belt
/ 0x7c : a veneered cross
/ 0x7d : a jewel-encrusted crucifix
/ 0x7e : a great horn, bound by metal hoops
/ 0x7f : a broken mechanical face
/ 0x80 : a magical mirror
/ 0x81 : a cuddley octopus figurine
/ 0x82 : a staff of polished bone
/ 0x83 : a magic sword
/ 0x84 : a magic wand

/ Print message  "It is enchanted!\n "
0x0ea5 (0x15e5): (0x05) Print message (constant) 0x4f

/ Branch if the second word 
0x0ea7 (0x15e7): (0x1a) If var[0x31] < (constant) 0x73 then Goto 0x0190
0x0eac (0x15ec): (0x1b) If var[0x31] > (constant) 0x8b then Goto 0x0190
0x0eb1 (0x15f1): (0x08) Set var[0x5d] = (constant) 0x169
0x0eb5 (0x15f5): (0x0a) Set var[0x5d] += var[0x31]
0x0eb8 (0x15f8): (0x04) Print message var[0x5d]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0eba (0x15fa): (0x00) Goto 0x0190
**************************************************************************

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0ebd (0x15fd): (0x00) Goto 0x0190

**************************************************************************
* Command: "drink"
**************************************************************************

/ Print message  "It's too risky! "
0x0ec0 (0x1600): (0x05) Print message (constant) 0x67

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0ec2 (0x1602): (0x00) Goto 0x0190

**************************************************************************
* Command: "fill"
**************************************************************************

/ Check to see if the player has the object
0x0ec5 (0x1605): (0x01) Gosub 0x1559

/ Branch if the player does not have the pot and perform additional location
/ specific checks skipping the code that prints the location description
/ and ask "What next?" 
0x0ec8 (0x1608): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ Branch if the second word is NOT the "pot" (0x52) and print "you can't do that"
0x0ecd (0x160d): (0x19) If var[0x31] != (constant) 0x52 then Goto 0x15e0

/ Second word is the "pot"

/ Branch if the player's current location IS "on the floor of a cavern, 
/ beside a clump of evil green toadstools. Liquid slime oozes from the
/ north and paths lead south and up" (0x36)
0x0ed2 (0x1612): (0x18) If var[0x43] == (constant) 0x36 then Goto 0x0ee8

/ Branch if the player is NOT in one of the following locations with water:
/ 0x2f : south of the river, on the edge of a vast field 
/        of poppies which stretches west as far as the eye can see.
/        A somnolant perfume hangs heavy on the breeze
/ 0x30 : on an east-west road, south of the river and north of a steep, treeless hill
/ 0x31 : on an east-west road beside the river and north 
/                     of a flat grassy plain. A line of stepping stones leads
/                     to a small island in the water
/ 0x32 : on a mud-bank, north of a wide river. A stone bridge spans the waters, reaching from the granite cliffs above to the flat lands of the far bank, and a path climbs up to it
/ 0x33 : under the killer-willow tree
/ 0x34 : on the southern end of a small island, reached by stepping stones from the south. The far end of the island is occupied by a viscious-looking willow tree with six long rubbery branches
/ 0x35 : on stepping stones leading north to an island
/ 0x36 (already processed )
/ 0x37 : in the middle of the floor of a giant cove, in a giant ants' nest. Small footprints lead north and south
/ 0x38 : North of the cave floor, below a huge grey mushroom
/ 0x39 : at the end of an aqueduct designed to drip water evenly into the depths of a deep pit below. The aqueduct leads north, a narrow fissure leads south, and steps lead down into the pit
/ 0x3a : walking on the bed of an empty aqueduct which crosses a vast dark pit
/ 0x3b : in a damp north-south pipe
/ 0x3c : on an aqueduct
/ 0x3d : in a paved tunnel below a silver pedestal. Water trickles from a silver hoop painted on one wall and seeps south. An armoured door leads east and a crack splits the north wall
/ 0x3e : standing in shallow water at the foot of the ramp. A ladder slopes northwards to a higher part of the ramp
0x0ed6 (0x1616): (0x1a) If var[0x43] < (constant) 0x2f then Goto 0x0ee3
0x0eda (0x161a): (0x1b) If var[0x43] > (constant) 0x3e then Goto 0x0ee3

/ Pot cannot hold water

/ Print message  "The water trickles out. Try a thicker liquid "
0x0ede (0x161e): (0x05) Print message (constant) 0x9d

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0ee0 (0x1620): (0x00) Goto 0x0190

**************************************************************************
* Process no water in the location
**************************************************************************

/ Print message  "There's nothing to fill it with "
0x0ee3 (0x1623): (0x05) Print message (constant) 0x9e

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0ee5 (0x1625): (0x00) Goto 0x0190

**************************************************************************
* Process in the location with the slime 
**************************************************************************

/ Print message  "You scoop up a good pot-full of slime "
0x0ee8 (0x1628): (0x05) Print message (constant) 0x9f

/ Set the location of the slime to in the player's inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x0eea (0x162a): (0x09) Set var[0x40] = var[0x07]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0eed (0x162d): (0x00) Goto 0x0190

**************************************************************************
* Command: "empty" or "pour"
**************************************************************************

0x0ef0 (0x1630): (0x01) Gosub 0x1559

/ TODO Branch
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0ef3 (0x1633): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190
0x0ef8 (0x1638): (0x19) If var[0x31] != (constant) 0x52 then Goto 0x15e0
0x0efd (0x163d): (0x11) If var[0x40] != var[0x07] then Goto 0x1609

/ Print message  "The slime is too sticky! "
0x0f02 (0x1642): (0x05) Print message (constant) 0xa1

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0f04 (0x1644): (0x00) Goto 0x0190

**************************************************************************
* Player is "apply", "wear", "smeau" or "rub" cold cream to themselves
**************************************************************************

/ Print message  "You clumsily smear cold cream all over yourself "
0x0f07 (0x1647): (0x05) Print message (constant) 0xf0
0x0f09 (0x1649): (0x01) Gosub 0x1488
0x0f0c (0x164c): (0x09) Set var[0x25] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0f0f (0x164f): (0x00) Goto 0x0190

**************************************************************************
* Command: "draw", "press", "push", "rotate", "stop" or "turn"
**************************************************************************

/ Branch if the second word is the "rock crystal" (0x63)
0x0f12 (0x1652): (0x18) If var[0x31] == (constant) 0x63 then Goto 0x0f2f

/ Branch if the second word is the "bolt" (0xbb)
0x0f16 (0x1656): (0x18) If var[0x31] == (constant) 0xbb then Goto 0x0f63

/ Branch if the second word is "button" (0xbc)
0x0f1a (0x165a): (0x18) If var[0x31] == (constant) 0xbc then Goto 0x0f7c

/ Branch if the second word is "gate" (0xbe)
0x0f1e (0x165e): (0x18) If var[0x31] == (constant) 0xbe then Goto 0x0cb3

/ Branch if the second word is "statue" (0xbe)
0x0f23 (0x1663): (0x18) If var[0x31] == (constant) 0xc0 then Goto 0x1030

/ Branch if the second word is any object or NPC" (0xbe)
/ and process it as attacking the object or NPC
0x0f28 (0x1668): (0x1a) If var[0x31] < (constant) 0xc9 then Goto 0x1085

/ Process pressing a number e.g. "one" (0xca) to "nine" (0xd1)
0x0f2d (0x166d): (0x00) Goto 0x0f89

**************************************************************************
* Process pushing the rock / crystal "at a junction...."
**************************************************************************

/ Branch if the player's current location is NOT "at a junction in a steeply
/ sloping u-shaped passage which leads northeast and northwest. Three round 
/ rocks protrude beside an opening to the east
0x0f2f (0x166f): (0x19) If var[0x43] != (constant) 0x77 then Goto 0x0f51

/ Player is with the protrucing rocks 

/ Increment the number of rocks the player has pressed
0x0f33 (0x1673): (0x0a) Set var[0x53] += var[0x01]

/ Set the message to print to "You turn one stone and nothing happens" (0x83)
0x0f36 (0x1676): (0x08) Set var[0x5d] = (constant) 0x83

/ Branch and print the above message if 1 rock has been pressed
0x0f39 (0x1679): (0x10) If var[0x53] == var[0x01] then Goto 0x0f4c

/ Set the message to print to "Another stone turned, still nothing" (0x84)
0x0f3d (0x167d): (0x08) Set var[0x5d] = (constant) 0x84

/ Branch and print the above message if 2 rocks has been pressed
0x0f40 (0x1680): (0x10) If var[0x53] == var[0x02] then Goto 0x0f4c

/ Set the message to print to "Now no stone is left unturned the slab 
/ slides from the doorway" (0x85)
0x0f44 (0x1684): (0x08) Set var[0x5d] = (constant) 0x85

/ Branch and print the above message if 3 rocks has been pressed and 
/ perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0f47 (0x1687): (0x11) If var[0x53] != var[0x03] then Goto 0x0190

/ Print the message 
0x0f4c (0x168c): (0x04) Print message var[0x5d]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0f4e (0x168e): (0x00) Goto 0x0190

**************************************************************************
* Process pushing the boulder in the damp hemispherical cave
**************************************************************************

/ Branch if the player's current location is NOT "in a damp hemispherical 
/ cave with an opening to the east" (0x78)
0x0f51 (0x1691): (0x19) If var[0x43] != (constant) 0x78 then Goto 0x15f0

/ Player IS in the damp hemispherical cave

/ Branch if the player has already pushed the boulder
0x0f56 (0x1696): (0x13) If var[0x54] > var[0x0b] then Goto 0x15f0

/ Set the status of the boulder to pushed (0x01)
/ var[0x01] is the constant 0x01
0x0f5b (0x169b): (0x09) Set var[0x54] = var[0x01]

/ Print message  "The moss moves from walls and floor to the stopped stone "
0x0f5e (0x169e): (0x05) Print message (constant) 0x81

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0f60 (0x16a0): (0x00) Goto 0x0149

**************************************************************************

/ Branch if the player's current location is NOT "in the strong room." (0xa6)
0x0f63 (0x16a3): (0x19) If var[0x43] != (constant) 0xa6 then Goto 0x1619

/ Branch if the status of the iron door is "closed and bolted" (0x00)
/ and slide the bolt back
/ var[0x0b] is the constant 0x00
0x0f68 (0x16a8): (0x10) If var[0x0c] == var[0x0b] then Goto 0x0f74

/ Door is "open and unbolted" (0x01)

/ Set the door to "closed and bolted" (0x00)
/ var[0x0b] is the constant 0x00
0x0f6c (0x16ac): (0x09) Set var[0x0c] = var[0x0b]

/ Print message  "The bolt barrs the door "
0x0f6f (0x16af): (0x05) Print message (constant) 0x87

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0f71 (0x16b1): (0x00) Goto 0x0190
**************************************************************************

/ Set the status of the door to "open and unbolted"
/ var[0x01] is the constant 0x01
0x0f74 (0x16b4): (0x09) Set var[0x0c] = var[0x01]

/ Print message  "The bolt slides back "
0x0f77 (0x16b7): (0x05) Print message (constant) 0x82

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0f79 (0x16b9): (0x00) Goto 0x0190
**************************************************************************

/ Branch if the player's current location IS "in a large store room." (0xca)
0x0f7c (0x16bc): (0x18) If var[0x43] == (constant) 0xca then Goto 0x1028

/ Branch if the number of words entered by the player is less than 3
/ and print "Please be more specific"
/ var[0x03] is the constant 0x03
0x0f81 (0x16c1): (0x12) If var[0x33] < var[0x03] then Goto 0x15e8

/ 3 words were entered

/ Set the second word to the third word
0x0f86 (0x16c6): (0x09) Set var[0x31] = var[0x32]

/ Branch if the player has NOT entered a number (0xc9) and 
/ "Don't be silly!" 
0x0f89 (0x16c9): (0x1a) If var[0x31] < (constant) 0xc9 then Goto 0x1609

/ Branch if he player's current location IS "in the "Skinner box"" (0xbb)
0x0f8e (0x16ce): (0x18) If var[0x43] == (constant) 0xbb then Goto 0x0fef

/ Branch if the player's current location IS "in the reward room" (0xbc)
0x0f92 (0x16d2): (0x18) If var[0x43] == (constant) 0xbc then Goto 0x1000

**************************************************************************
* Player is in the "ornate throne room" pressing the buttons
**************************************************************************

/ Branch if he player's current location IS "sitting on an ornate throne.
/ There are nine numbered buttons along the left arm-rest" (0x5d)
0x0f96 (0x16d6): (0x19) If var[0x43] != (constant) 0x5d then Goto 0x1619

/ Player IS "sitting on an ornate throne. There are nine numbered 
/ buttons along the left arm-rest" (0x3d)

/ Branch if the player is NOT pressing button "one" (0xc9)
0x0f9b (0x16db): (0x19) If var[0x31] != (constant) 0xc9 then Goto 0x0fa7

/ Player pressed button 1

/ Branch if the pit in the floor is open (0x01)
/ var[0x01] is the constant 0x01
0x0f9f (0x16df): (0x10) If var[0x58] == var[0x01] then Goto 0x15f0

/ Set the status of the pit to open (0x01)
/ var[0x01] is the constant 0x01
0x0fa4 (0x16e4): (0x09) Set var[0x58] = var[0x01]

/ Branch if the player is pressing button "two" (0xca)
0x0fa7 (0x16e7): (0x19) If var[0x31] != (constant) 0xca then Goto 0x0fb3

/ Player pressed button 2

/ Branch if the pit is already closed (0x00)
/ var[0x0b] is the constant 0x00
0x0fab (0x16eb): (0x10) If var[0x58] == var[0x0b] then Goto 0x15f0

/ Pit is open (0x01)

/ Set the status of the pit to closed (0x00)
/ var[0x0b] is the constant 0x00
0x0fb0 (0x16f0): (0x09) Set var[0x58] = var[0x0b]

/ Branch if the player is NOT pressing button "four" (0xcc)
0x0fb3 (0x16f3): (0x19) If var[0x31] != (constant) 0xcc then Goto 0x0fbf

/ Player pressed button 4

/ Branch if the throne has already risen through the ceiling (0x01)
/ and print "nothing happens"
/ var[0x01] is the constant 0x01
0x0fb7 (0x16f7): (0x10) If var[0x59] == var[0x01] then Goto 0x15f0

/ Throne has not risen through the ceiling 
/ Set the throne to risen through the ceiling (0x01)
/ var[0x01] is the constant 0x01
0x0fbc (0x16fc): (0x09) Set var[0x59] = var[0x01]

/ Branch if the player is NOT pressing button "five" (0xcd)
0x0fbf (0x16ff): (0x19) If var[0x31] != (constant) 0xcd then Goto 0x0fe3

/ Player pressed button 5

/ Branch if the throne has NOT risen through the trap door (0x00)
/ and print "nothing happens"
/ var[0x0b] is the constant 0x00
0x0fc3 (0x1703): (0x10) If var[0x59] == var[0x0b] then Goto 0x15f0

/ Branch if the player is NOT "in an odd little room, below a granite throne" (0x69)

/ Set the target destination to "in an odd little room, below a granite throne" (0x69)
0x0fc8 (0x1708): (0x08) Set var[0x44] = (constant) 0x69

/ TODO
0x0fcb (0x170b): (0x09) Set var[0x38] = var[0x0b]
0x0fce (0x170e): (0x01) Gosub 0x156e
0x0fd1 (0x1711): (0x10) If var[0x3c] == var[0x0b] then Goto 0x15f0
0x0fd6 (0x1716): (0x10) If var[0x3c] == var[0x02] then Goto 0x15f0
0x0fdb (0x171b): (0x10) If var[0x3c] == var[0x04] then Goto 0x15f0
0x0fe0 (0x1720): (0x09) Set var[0x59] = var[0x0b]

/ Branch if the player is pressing "nine" (0xd1)
0x0fe3 (0x1723): (0x19) If var[0x31] != (constant) 0xd1 then Goto 0x0fea

/ 
0x0fe7 (0x1727): (0x08) Set var[0x43] = (constant) 0x6f
0x0fea (0x172a): (0x04) Print message var[0x31]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x0fec (0x172c): (0x00) Goto 0x0190

**************************************************************************
* Player is in the "skinner room" pressing the buttons
**************************************************************************

/ Branch if the player did NOT press the 9 button (0xd1) (correct
/ number was pressed)
0x0fef (0x172f): (0x18) If var[0x31] == (constant) 0xd1 then Goto 0x0ff8

/ Player pressed another button (1 to 8)

/ Print message  "WRONG! The room heats up... "
0x0ff3 (0x1733): (0x05) Print message (constant) 0x8c

/ Kill the player
0x0ff5 (0x1735): (0x00) Goto 0x12e7

**************************************************************************

/ Player pressed the 9 button in the skinner room

/ Print message  "RIGHT! Your vision blurs... "
0x0ff8 (0x1738): (0x05) Print message (constant) 0x8b

/ Change the player's location to "in the reward room"
0x0ffa (0x173a): (0x08) Set var[0x43] = (constant) 0xbc

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x0ffd (0x173d): (0x00) Goto 0x0149

**************************************************************************
* Player is in the "reward room" pressing buttons
**************************************************************************

/ Branch if the second word is greather than "five" (0xcd) and print "Don't be silly!"
0x1000 (0x1740): (0x1b) If var[0x31] > (constant) 0xcd then Goto 0x1609

/ Player is NOT pressing button 1-4

/ Set the temporary variable to the message offset for the action that 
/ happens when the player presses that button as below for 1-5
/ 0xd3 : Imps clothe you in gold armour and drop you into the sea
/ 0xd4 : Searing flames leap up: "You can live for ever by remaining in the fire!" cackles a demon, but you can't of course
/ 0xd5 : "While humans are divided there will be war, so I will unite them. Your body will serve as a zombi in My army!"
/ 0xd6 : You win a little present
/ 0xd7 : "You'll get nothing all right! No body, no life..."
0x1005 (0x1745): (0x08) Set var[0x5d] = (constant) 0x0a

/ Add on the button dictionary id to get to the message id
0x1008 (0x1748): (0x0a) Set var[0x5d] += var[0x31]

/ Print the message
0x100b (0x174b): (0x04) Print message var[0x5d]

/ Branch if the player did not press button 4 and kill the player
0x100d (0x174d): (0x19) If var[0x31] != (constant) 0xcc then Goto 0x12e7

/ Set the temporary variable to the "sapphire" (0x71)
0x1012 (0x1752): (0x08) Set var[0x1e] = (constant) 0x71

/ Set the location of the "sapphine" to be in the player's inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x1015 (0x1755): (0xe2) Set list#2[var[0x1e]] = var[0x07] (list address 0x0740)

/ Change the player's current location to "on the ramp. A sign over a doorway reads..." (0x4e)
0x1018 (0x1758): (0x08) Set var[0x43] = (constant) 0x4e

/ Set the status of the the prize in the reward room to "prize given" (0x01)
/ Player can only have one prize (the sapphire), if they go back 
/ they will be given a bomb and killed the second time
/ var[0x01] is the constant 0x01
0x101b (0x175b): (0x0a) Set var[0x48] += var[0x01]

/ Branch if the player has been only received one prize and 
/ perform additional location specific checks, print the location description
/ and ask "What next?" 
/ var[0x01] is the constant 0x01
0x101e (0x175e): (0x10) If var[0x48] == var[0x01] then Goto 0x0149

/ Player was greedy and asked for a second prize 

/ Print message  ", but it's a bomb! "
0x1023 (0x1763): (0x05) Print message (constant) 0xd8

/ Kill the player
0x1025 (0x1765): (0x00) Goto 0x12e7

**************************************************************************
* Player pressed the button in the large store room
**************************************************************************

/ Print message  "A yellow light scans your body and a copy flickers in the machine "
0x1028 (0x1768): (0x05) Print message (constant) 0x40

/ Set the resurrection status to "can be resurrected" (0x01)
0x102a (0x176a): (0x09) Set var[0x49] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x102d (0x176d): (0x00) Goto 0x0190

**************************************************************************
* Process the player turning the statue in the statue room
**************************************************************************

/ Branch if the player is NOT "in the statue room...." (0xbd)
0x1030 (0x1770): (0x19) If var[0x43] != (constant) 0xbd then Goto 0x1619

/ Branch if the player has already turned the statue (0x01)
/ var[0x01] is the constant 0x01
0x1035 (0x1775): (0x10) If var[0x55] == var[0x01] then Goto 0x1041

/ Statue was NOT already turned

/ Print message  "An opening leads east "
0x1039 (0x1779): (0x05) Print message (constant) 0x8a

/ Set the status of the statue to turned (0x01)
/ var[0x01] is the constant 0x01
0x103b (0x177b): (0x09) Set var[0x55] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x103e (0x177e): (0x00) Goto 0x0190

**************************************************************************

/ Print message  "The exit closes again "
0x1041 (0x1781): (0x05) Print message (constant) 0x89

/ Set the status of the statue to NOT turned (0x00)
/ var[0x0b] is the constant 0x00
0x1043 (0x1783): (0x09) Set var[0x55] = var[0x0b]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x1046 (0x1786): (0x00) Goto 0x0190

**************************************************************************
* Command: "plugh", "plover", "sesame", "xyzzy"
**************************************************************************

/ Print message  "Nice try, but that magic word is used up "
0x1049 (0x1789): (0x05) Print message (constant) 0x25

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x104b (0x178b): (0x00) Goto 0x0190

**************************************************************************
* Command: "shake" or "wave"
**************************************************************************

/ Check that the player has the item in the second word
0x104e (0x178e): (0x01) Gosub 0x1559

/ Branch if the command was invalid (0x00) and perform additional location 
/ specific checks skipping the code that prints the location description 
/ and ask "What next?" 
/ var[0x0b] is the constant 0x00
0x1051 (0x1791): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

**************************************************************************
* Process the player waving the staff
**************************************************************************

/ Branch if the second word is NOT the "staff" (0x80)
0x1056 (0x1796): (0x19) If var[0x31] != (constant) 0x80 then Goto 0x1069

/ Player IS trying to wave the staff

/ Branch if the first supplementary message is NOT set to "A host of skeletons 
/ are guarding a bearded dwarf" (0x8f)
0x105a (0x179a): (0x19) If var[0x4c] != (constant) 0x8f then Goto 0x1069

/ Player IS waving the staff and the skeletons ARE guarding the dwarf

/ Print message  "As you wave the skeleton staff they all clank off, leaving the dwarf.
/ "Thank you", she says, "You saved my life. I've found a rich vein of ore above
/ the stone face and will share it if you visit the area!" "
0x105e (0x179e): (0x05) Print message (constant) 0x91

/ Set the status of the skeletons to having "clanked off"
0x1060 (0x17a0): (0x09) Set var[0x28] = var[0x01]

/ Set the status of the dwarf to following the player (0x01)
/ var[0x01] is the constant 0x01
0x1063 (0x17a3): (0x09) Set var[0x1a] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x1066 (0x17a6): (0x00) Goto 0x0190

**************************************************************************
* Process the player waving the wand
**************************************************************************

/ Branch if the second word is NOT the "wand" (0x82) and move to the next check
0x1069 (0x17a9): (0x19) If var[0x31] != (constant) 0x82 then Goto 0x107d

/ Second word is the "wand"

/ Branch if the player's current location is NOT "in the lower chamber. There are 6 exits." (0x7c)
0x106d (0x17ad): (0x19) If var[0x43] != (constant) 0x7c then Goto 0x107d

/ Branch if the flint thrower is already dead (0x01)
/ var[0x0b] is the constant 0x00
0x1071 (0x17b1): (0x11) If var[0x3f] != var[0x0b] then Goto 0x107d

/ Flint thrower still alive

/ Print message  "You hear a body fall into water far below "
0x1075 (0x17b5): (0x05) Print message (constant) 0x9b

/ Set the status of the flint thrower to dead
0x1077 (0x17b7): (0x09) Set var[0x3f] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x107a (0x17ba): (0x00) Goto 0x0190

**************************************************************************
* Process the player waving the seed pod
**************************************************************************

/ Branch if the player is waving the seed pod (0x89)
0x107d (0x17bd): (0x18) If var[0x31] == (constant) 0x89 then Goto 0x126c

/ Player is NOT waving the seed pod

/ Print "Nothing happens"
0x1082 (0x17c2): (0x00) Goto 0x15f0

**************************************************************************
* Command: "attack", "kick", "fight", "kill", "chop", "hit" or "smash"
**************************************************************************

0x1085 (0x17c5): (0x18) If var[0x31] == (constant) 0x98 then Goto 0x1180
0x108a (0x17ca): (0x08) Set var[0x1e] = (constant) 0x81
0x108d (0x17cd): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)
0x1090 (0x17d0): (0x11) If var[0x1f] != var[0x07] then Goto 0x10ba
0x1094 (0x17d4): (0x18) If var[0x31] == (constant) 0x9f then Goto 0x109d
/ Print message  ""Sorry!", says your sword, "Can't let you do that. It's against the rules for me to fight anything but dragins!" "
0x1098 (0x17d8): (0x05) Print message (constant) 0x3b

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x109a (0x17da): (0x00) Goto 0x0190
**************************************************************************
/ Print message  "The sword slays the dragon and they fade away, leaving the dragon's teeth and its golden bed "
0x109d (0x17dd): (0x05) Print message (constant) 0x6e
0x109f (0x17df): (0x09) Set var[0x18] = var[0x01]
0x10a2 (0x17e2): (0x09) Set var[0x31] = var[0x1e]
0x10a5 (0x17e5): (0x01) Gosub 0x1488
0x10a8 (0x17e8): (0x08) Set var[0x44] = (constant) 0x7d
0x10ab (0x17eb): (0x08) Set var[0x1f] = (constant) 0x97
0x10ae (0x17ee): (0xe2) Set list#2[var[0x1f]] = var[0x44] (list address 0x0740)
0x10b1 (0x17f1): (0x08) Set var[0x1f] = (constant) 0x78
0x10b4 (0x17f4): (0xe2) Set list#2[var[0x1f]] = var[0x44] (list address 0x0740)

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x10b7 (0x17f7): (0x00) Goto 0x0190
**************************************************************************
0x10ba (0x17fa): (0x08) Set var[0x1e] = (constant) 0x46
0x10bd (0x17fd): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)
0x10c0 (0x1800): (0x10) If var[0x1f] == var[0x07] then Goto 0x10c9

/ Print message  "You've no weapon "
0x10c4 (0x1804): (0x05) Print message (constant) 0x71

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x10c6 (0x1806): (0x00) Goto 0x0190
**************************************************************************
0x10c9 (0x1809): (0x19) If var[0x31] != (constant) 0xb6 then Goto 0x1120
0x10cd (0x180d): (0x18) If var[0x43] == (constant) 0x33 then Goto 0x10e0
0x10d1 (0x1811): (0x1a) If var[0x43] < (constant) 0x10 then Goto 0x1609
0x10d6 (0x1816): (0x1b) If var[0x43] > (constant) 0x1c then Goto 0x1609

/ Print message  "You hack at a branch, blunting your axe "
0x10db (0x181b): (0x05) Print message (constant) 0x3a

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x10dd (0x181d): (0x00) Goto 0x0190
**************************************************************************
0x10e0 (0x1820): (0x0a) Set var[0x10] += var[0x01]
0x10e3 (0x1823): (0x18) If var[0x10] == (constant) 0x07 then Goto 0x10f6
0x10e7 (0x1827): (0x19) If var[0x10] != (constant) 0x08 then Goto 0x10db
0x10eb (0x182b): (0x01) Gosub 0x1445
/ Print message  "The willow drops everything and wraps branches round its trunk "
0x10ee (0x182e): (0x05) Print message (constant) 0x73
0x10f0 (0x1830): (0x09) Set var[0x19] = var[0x0b]

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x10f3 (0x1833): (0x00) Goto 0x0149
**************************************************************************
/ Print message  "A beautiful dryad springs from the tree. "
0x10f6 (0x1836): (0x05) Print message (constant) 0x72
0x10f8 (0x1838): (0x09) Set var[0x19] = var[0x01]
/ Print message  ""Stop! Woodman, spare that tree! I'll give you a reward! OK?"\n "
0x10fb (0x183b): (0x05) Print message (constant) 0x4c
0x10fd (0x183d): (0x07) Input - results in word1 var[0x30], word2 var[0x31], word3 var[0x32], count var[0x33]

/ TODO Branch
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x1102 (0x1842): (0x10) If var[0x30] == var[0x01] then Goto 0x0190
0x1107 (0x1847): (0x18) If var[0x30] == (constant) 0x1d then Goto 0x110f
/ Print message  "Please answer YES or NO\n "
0x110b (0x184b): (0x05) Print message (constant) 0x09
0x110d (0x184d): (0x00) Goto 0x10fb
**************************************************************************
/ Print message  "She gives you a carving and makes the tree drop everything "
0x110f (0x184f): (0x05) Print message (constant) 0x4d
0x1111 (0x1851): (0x08) Set var[0x1e] = (constant) 0x5a
0x1114 (0x1854): (0xe2) Set list#2[var[0x1e]] = var[0x07] (list address 0x0740)
0x1117 (0x1857): (0x0a) Set var[0x3b] += var[0x01]
0x111a (0x185a): (0x01) Gosub 0x1445

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x111d (0x185d): (0x00) Goto 0x0190

**************************************************************************

/ Branch if the second word is NOT the "bird" (0x9e)
0x1120 (0x1860): (0x19) If var[0x31] != (constant) 0x9e then Goto 0x112c

/ Branch if the status of the grotesque yellow bird is NOT scared away (0x00)
/ and print "Gulp! The return blows kill you"
/ var[0x0b] is the constant 0x00
0x1124 (0x1864): (0x10) If var[0x11] == var[0x0b] then Goto 0x12cf

/ Bird has flown away

/ Print "You can't see it"
0x1129 (0x1869): (0x00) Goto 0x12dd

**************************************************************************

/ Branch if the second word is NOT the "dragon" (0x9f)
0x112c (0x186c): (0x19) If var[0x31] != (constant) 0x9f then Goto 0x1138


/ Branch if the staus of the dragon is not slain (0x01)
/ and print "Gulp! The return blows kill you"
/ var[0x0b] is the constant 0x00
0x1130 (0x1870): (0x10) If var[0x18] == var[0x0b] then Goto 0x12cf

/ Dragon has been slain

/ Print "You can't see it"
0x1135 (0x1875): (0x00) Goto 0x12dd

**************************************************************************

/ Branch if the second word is NOT the "giants" (0xa0)
0x1138 (0x1878): (0x19) If var[0x31] != (constant) 0xa0 then Goto 0x1144

/ Branch if the status of the evil giants is still asleep (0x00)
/ and print "Gulp! The return blows kill you"
/ var[0x0b] is the constant 0x00
0x113c (0x187c): (0x10) If var[0x27] == var[0x0b] then Goto 0x12cf

/ Giants have left

/ Print "You can't see it"
0x1141 (0x1881): (0x00) Goto 0x12dd

**************************************************************************

/ Branch if the second word IS the "Rakshsa" (0xa1)
/ and print "Gulp! The return blows kill you"
/ var[0x0b] is the constant 0x00
0x1144 (0x1884): (0x18) If var[0x31] == (constant) 0xa1 then Goto 0x12cf

**************************************************************************

/ Branch if the second word is NOT the "wight" (0xa2)
0x1149 (0x1889): (0x19) If var[0x31] != (constant) 0xa2 then Goto 0x115a

/ Second word IS the "wight" (0xa2)

/ BUG? Nothing else calls this and the second word will ALWAYS be "wight" (0xa2)
/ at this point  so neither will ever branch 
0x114d (0x188d): (0x1a) If var[0x31] < (constant) 0x5e then Goto 0x12dd
0x1152 (0x1892): (0x1b) If var[0x31] > (constant) 0x66 then Goto 0x12dd

/ Print "Gulp! The return blows kill you"
0x1157 (0x1897): (0x00) Goto 0x12cf

**************************************************************************
* Process the player attacking the dryad
**************************************************************************

/ Branch if the second word IS the orcs, roc, siren, thierf, goat, hand, ball or non npcs 
/ and print "Your attack is futile"
0x115a (0x189a): (0x1b) If var[0x31] > (constant) 0xad then Goto 0x12d3

/ Branch if the second word is NOT the "dryad"
0x115f (0x189f): (0x19) If var[0x31] != (constant) 0x9c then Goto 0x116e

/ Second word IS the "dryad"

/ Branch if the status of the dryad is "not sprung from the tree" (0x00)
/ var[0x0b] is the constant 0x00
0x1163 (0x18a3): (0x10) If var[0x19] == var[0x0b] then Goto 0x12dd

/ Dryad HAS "sprung from the tree" (0x01) so player has chopped it before

/ Make the dryad disappear (0x00)
/ var[0x0b] is the constant 0x00
0x1168 (0x18a8): (0x09) Set var[0x19] = var[0x0b]

/ Print "Your blow is deadly!"
0x116b (0x18ab): (0x00) Goto 0x12e2

**************************************************************************
* Process the player attacking the dwarf
**************************************************************************

/ Branch if the second word is NOT the dwarf (0x9b)
0x116e (0x18ae): (0x19) If var[0x31] != (constant) 0x9b then Goto 0x117d

/ Branch if the dwarf is NOT following the player (0x00)
/ var[0x0b] is the constant 0x00
0x1172 (0x18b2): (0x10) If var[0x1a] == var[0x0b] then Goto 0x12dd

/ Set the status of the dwarf to NOT following the player (0x00)
0x1177 (0x18b7): (0x09) Set var[0x1a] = var[0x0b]

/ Print "Your blow is deadly!"
0x117a (0x18ba): (0x00) Goto 0x12e2

**************************************************************************

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x117d (0x18bd): (0x00) Goto 0x0190

**************************************************************************
* Process the player hitting the gem
**************************************************************************

/ Check  if the player is being silly or can't see the object / npc
0x1180 (0x18c0): (0x01) Gosub 0x15c5

/ Branch if the player can't attack the object / npc and perform additional 
/ location specific checks skipping the code that prints the location description 
/ and ask "What next?" 
0x1183 (0x18c3): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190

/ Set the temporary variable to the "hammer" (0x4e)
0x1188 (0x18c8): (0x08) Set var[0x1e] = (constant) 0x4e

/ Get the current location of the "hammer" (0x4e)
0x118b (0x18cb): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "hammer" is NOT in the player's inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x118e (0x18ce): (0x12) If var[0x1f] < var[0x07] then Goto 0x11a0

/ Print message  "The gem breaks: you are free! "
0x1192 (0x18d2): (0x05) Print message (constant) 0xe7

/ Sethe location of the "gem" to out of the game (0xe1)
/ var[0x09] is the constant 0xe1
0x1194 (0x18d4): (0xe2) Set list#2[var[0x31]] = var[0x09] (list address 0x0740)

/ Set the number of turns until the gem sucks the player's mind to "not sucking" (0x00)
/ var[0x0b] is the constant 0x00
0x1197 (0x18d7): (0x09) Set var[0x2b] = var[0x0b]

/ Set the status of the gem to "broken" (0x01)
/ var[0x01] is the constant 0x01
0x119a (0x18da): (0x09) Set var[0x2a] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x119d (0x18dd): (0x00) Goto 0x0190

**************************************************************************

/ Player needs the hammer to break the gem

/ Print message  "You need a hammer! "
0x11a0 (0x18e0): (0x05) Print message (constant) 0xe6

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x11a2 (0x18e2): (0x00) Goto 0x0190

**************************************************************************
* Print the messages and interaction for whent he Rakshasa first appears
**************************************************************************

/ Print message  "Dazzling lightening spears the hilltop and a host of fierce
/ flames spring forth: they are Rakshasa! Their leader floats forwards. "
0x11a5 (0x18e5): (0x05) Print message (constant) 0x55

/ Print message  ""How about a game: If you win I'll strengthen the flames 
/ of your soul. If you lose, I get your body. OK?"\n "
0x11a7 (0x18e7): (0x05) Print message (constant) 0x56

/ Get the player's response
0x11a9 (0x18e9): (0x07) Input - results in word1 var[0x30], word2 var[0x31], word3 var[0x32], count var[0x33]

/ Branch if the first word is "no" (actually matches with north in the dictionary)
0x11ae (0x18ee): (0x10) If var[0x30] == var[0x01] then Goto 0x11ba

/ BRanch if the first word is "yes" (0x1d)
0x11b2 (0x18f2): (0x18) If var[0x30] == (constant) 0x1d then Goto 0x11bf

/ Player entered something else

/ Print message  "Please answer YES or NO\n "
0x11b6 (0x18f6): (0x05) Print message (constant) 0x09

/ Loop back around, ask the question again and get the player's response
0x11b8 (0x18f8): (0x00) Goto 0x11a7

**************************************************************************

/ Player answered "no" so kill them

/ Print message  "OK, you lose then "
0x11ba (0x18fa): (0x05) Print message (constant) 0x6c

/ Kill the player
0x11bc (0x18fc): (0x00) Goto 0x12e7

**************************************************************************

/ Player answered "yes" so play the game

/ Print message  "I'll roll a dice: 1-3 you lose, 4-6 you win. "
0x11bf (0x18ff): (0x05) Print message (constant) 0x57

/ Set the temporary variable to the object id of the "die" (0x85)
0x11c1 (0x1901): (0x08) Set var[0x1e] = (constant) 0x85

/ Get the current location of the "die"
0x11c4 (0x1904): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "die" are not in the player's inventory
0x11c7 (0x1907): (0x11) If var[0x1f] != var[0x07] then Goto 0x11d2

/ Dice ARE in the player's inventory - so the Rakshasa use them
/ and they are weighted to always roll a 6

/ Print message  "And I'll even use your dice to be fair..\n\n "
0x11cb (0x190b): (0x05) Print message (constant) 0x6d

/ Set the temporary variable to 6
/ var[0x06] is the constant 0x06
0x11cd (0x190d): (0x09) Set var[0x5d] = var[0x06]

/ Skip the random number generation as the dice are weighted
0x11d0 (0x1910): (0x00) Goto 0x11dc

**************************************************************************

/ Rakshasa die is not weighted - generate a random number
0x11d2 (0x1912): (0x06) Function - Random - Set var[0x5d]=<random number>

/ Regenerate if the number is a 6 or higher (need a number 0 to 5)
/ var[0x05] is the constant 0x05
0x11d5 (0x1915): (0x13) If var[0x5d] > var[0x05] then Goto 0x11d2

/ Number is less than 0 to 5

/ Add 1 to the dice roll to make the numbers 1 to 6
0x11d9 (0x1919): (0x0a) Set var[0x5d] += var[0x01]

/ Print message  "It's a "
0x11dc (0x191c): (0x05) Print message (constant) 0x58

/ Print the dice roll or fixed number for the weighted die
0x11de (0x191e): (0x03) Print Number var[0x5d]

/ Branch if the number is 4 or 5 or 6 (player wins)
0x11e0 (0x1920): (0x13) If var[0x5d] > var[0x03] then Goto 0x11e9

/ Die roll was 1 or 2 or 3

/ Print message  "! YOU LOSE! "
0x11e4 (0x1924): (0x05) Print message (constant) 0x59

/ Kill the player
0x11e6 (0x1926): (0x00) Goto 0x12e7

**************************************************************************

/ Print message  "! YOU WIN! The Rakshasa envelop you briefly before leaving "
0x11e9 (0x1929): (0x05) Print message (constant) 0x5a

/ Set the status of the Rakshasa to "have played the die game" (0x01)
/ var[0x01] is the constant 0x01
0x11eb (0x192b): (0x09) Set var[0x22] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x11ee (0x192e): (0x00) Goto 0x0190

**************************************************************************
* Command: "score/"
**************************************************************************

0x11f1 (0x1931): (0x01) Gosub 0x1200

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x11f3 (0x1933): (0x00) Goto 0x0190

**************************************************************************
* Command: "save"
**************************************************************************

/ Create a save game file
0x11f6 (0x1936): (0x06) Function - Save (0x03)

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x11f8 (0x1938): (0x00) Goto 0x0149

**************************************************************************
* Command: "restore"
**************************************************************************

/ Perform the restore from a saved file
0x11fb (0x193b): (0x06) Function - Restore (0x04)

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x11fd (0x193d): (0x00) Goto 0x0149

**************************************************************************
* Calculate the player's score (can be negative)
**************************************************************************

/ The following items score 15 each (total of 555):
/ 0x5b  : an antique chair
/ 0x5c  : a securely fastened chest
/ 0x5d  : a selection of coins
/ 0x5e  : a jade egg
/ 0x5f  : a matched pair of lapis lazuli
/ 0x60  : a jewelled needle
/ 0x61  : an onyx oryx
/ 0x62  : a lump of valuable ore
/ 0x63  : a rock crystal
/ 0x64  : a star pendant
/ 0x65  : a sun medallion
/ 0x66  : a very expensive trident
/ 0x69  : an agate
/ 0x6a  : an amethyst
/ 0x6b  : a diamond
/ 0x6c  : an emerald
/ 0x6d  : an opal
/ 0x6e  : a pearl
/ 0x6f  : a valuable rhinestone
/ 0x70  : a ruby
/ 0x71  : a sapphire
/ 0x73  : a topaz
/ 0x73  : a cube of "sticky" metal
/ 0x74  : rare spices
/ 0x75  : a hollow stick
/ 0x76  : a gilt miner's helmet with a lamp
/ 0x78  : a golden bed
/ 0x79  : a good, strong belt
/ 0x7a  : a veneered cross
/ 0x7b  : a jewel-encrusted crucifix
/ 0x7c  : a great horn, bound by metal hoops
/ 0x7d  : a broken mechanical face
/ 0x7e  : a magical mirror
/ 0x7f  : a cuddley octopus figurine
/ 0x80  : a staff of polished bone
/ 0x81  : a magic sword
/ 0x82  : a magic wand

/ Reset the score total to 0
/ var[0x0b] is the constant 0x00
0x1200 (0x1940): (0x09) Set var[0x51] = var[0x0b]

/ Set the temporary variable to 15 (0x0f) - each treasure will score 15
0x1203 (0x1943): (0x08) Set var[0x5d] = (constant) 0x0f

/ Set the temporary variable to the constant for the "ethnic carving" (0x5a)
/ (going to loop through all of the treasures)
0x1206 (0x1946): (0x08) Set var[0x1e] = (constant) 0x5a

/ Get the object's current location
0x1209 (0x1949): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the object is in the player's inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x120c (0x194c): (0x10) If var[0x1f] == var[0x07] then Goto 0x1218

/ Branch if the player is wearing the object (0xff)
/ var[0x08] is the constant 0xff
0x1210 (0x1950): (0x10) If var[0x1f] == var[0x08] then Goto 0x1218

/ Player is not wearing the object and it isn't in their inventory

/ Branch if the object is NOT "in a large store room...." (0xca)
/ (it won't be scored)
0x1214 (0x1954): (0x19) If var[0x1f] != (constant) 0xca then Goto 0x121b

/ Object is in the player's inventory or they are wearing it or it's in the large store room
/ so score it

/ Add 15 (0x0f) to the score
0x1218 (0x1958): (0x0a) Set var[0x51] += var[0x5d]

/ Move to the next treasure object
0x121b (0x195b): (0x0a) Set var[0x1e] += var[0x01]

/ Branch if there are treasures stil to be processed
0x121e (0x195e): (0x1a) If var[0x1e] < (constant) 0x85 then Goto 0x1209

**************************************************************************

/ Set the temporary variable to the number of times the player has died 
/ and multiply it by 16
0x1222 (0x1962): (0x09) Set var[0x5d] = var[0x16] 
0x1225 (0x1965): (0x0a) Set var[0x5d] += var[0x5d] 
0x1228 (0x1968): (0x0a) Set var[0x5d] += var[0x5d] 
0x122b (0x196b): (0x0a) Set var[0x5d] += var[0x5d] 
0x122e (0x196e): (0x0a) Set var[0x5d] += var[0x5d] 
0x1231 (0x1971): (0x0a) Set var[0x5d] += var[0x5d] 

/ Subtract 32 for each time the player has died
0x1234 (0x1974): (0x0b) Set var[0x51] -= var[0x5d]

**************************************************************************

/ Add 15 for the following events (max 45):
/ 1. Vampire being dead
/ 2. Dragon being slain
/ 3. Gem being smashed

/ Set the score increment to 15 (0x0f) for the various events below 
0x1237 (0x1977): (0x08) Set var[0x5d] = (constant) 0x0f

**************************************************************************

/ Branch if the vampire is NOT dead (0x00)
/ var[0x0b] is the constant 0x00
0x123a (0x197a): (0x10) If var[0x5b] == var[0x0b] then Goto 0x1241

/ Vampire IS dead (0x01)

/ Add 15 to the score
0x123e (0x197e): (0x0a) Set var[0x51] += var[0x5d]

**************************************************************************

/ Branch if the dragon is NOT slain (0x00)
/ var[0x0b] is the constant 0x00
0x1241 (0x1981): (0x10) If var[0x18] == var[0x0b] then Goto 0x1248

/ Dragon is slain (0x01)

/ Add 15 to the score
0x1245 (0x1985): (0x0a) Set var[0x51] += var[0x5d]

**************************************************************************

/ Branch if the livid green gem has NOT been smashed
/ var[0x62] is incorrectly used here as the constant 0x00 (should be var[0x0b])
0x1248 (0x1988): (0x10) If var[0x2a] == var[0x62] then Goto 0x124f

/ Add 15 to the score
0x124c (0x198c): (0x0a) Set var[0x51] += var[0x5d]

**************************************************************************

/ Branch if the score is less than 9,999 (0x270f) (it will always be!)
/ BUG?
0x124f (0x198f): (0x1a) If var[0x51] < (constant) 0x270f then Goto 0x1257

/ Reset the score to zero if it's > 9,9998
0x1254 (0x1994): (0x09) Set var[0x51] = var[0x0b]

/ Print message  "\nYour score is "
0x1257 (0x1997): (0x05) Print message (constant) 0x69

0x1259 (0x1999): (0x03) Print Number var[0x51]
/ Print message  "out of 600.\n "
0x125b (0x199b): (0x05) Print message (constant) 0x6a

/ All done
0x125d (0x199d): (0x02) Return

**************************************************************************
* Command: "hear" or "listen"
**************************************************************************

/ Branch if the player can currently hear (0x00)
/ var[0x0b] is the constant 0x00
0x125e (0x199e): (0x10) If var[0x17] == var[0x0b] then Goto 0x1267

/ Player is deaf

/ Print message  "You're temporarily deaf "
0x1262 (0x19a2): (0x05) Print message (constant) 0x42

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x1264 (0x19a4): (0x00) Goto 0x0190

/ Player is temporarily deaf

/ Print message  "You can't hear much "
0x1267 (0x19a7): (0x05) Print message (constant) 0x43

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x1269 (0x19a9): (0x00) Goto 0x0190

**************************************************************************

/ Branch if the second word is NOT the "seeds" or "pod" or "poppy" (0x89)
/ and perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x126c (0x19ac): (0x19) If var[0x31] != (constant) 0x89 then Goto 0x0190

/ Player IS waving the seed pod

/ Print message  "\nSome seeds are dislodged and fall with loud explosions "
0x1271 (0x19b1): (0x05) Print message (constant) 0x41

/ Set the player to be temporarily deaf for 4 turns
/ var[0x04] is the constant 0x04
0x1273 (0x19b3): (0x09) Set var[0x17] = var[0x04]

/ Branch if the first location supplementary message is NOT "A grotesque 
/ bloated yellow bird with big ears squats on the nest" (0x78)
0x1276 (0x19b6): (0x19) If var[0x4c] != (constant) 0x78 then Goto 0x127f

/ Bird is on the nest

/ Print message  ". This sound scares the bird away "
0x127a (0x19ba): (0x05) Print message (constant) 0x79

/ Set the status of the bird to "scared away" (0x01)
/ var[0x01] is the constant 0x01
0x127c (0x19bc): (0x09) Set var[0x11] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x127f (0x19bf): (0x00) Goto 0x0190

**************************************************************************
* Check if the object in var[0x1e] is discoverable - if so print that it's 
* been found
**************************************************************************

/ Get the current location of the object in var[0x1e]
0x1282 (0x19c2): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the object's location is "in Limbo" (0xe0) i.e. waiting to be discovered
0x1285 (0x19c5): (0x18) If var[0x1f] == (constant) 0xe0 then Goto 0x128f

/ Object is NOT "in Limbo" (waiting to be discovered)

/ Print message  "You don't find anything "
0x1289 (0x19c9): (0x05) Print message (constant) 0x6b

/ Set the valid command flag to "not a valid action" (0x00)
/ var[0x0b] is the constant 0x00
0x128b (0x19cb): (0x09) Set var[0x3c] = var[0x0b]

/ All done
0x128e (0x19ce): (0x02) Return

**************************************************************************

/ Print message  "You find:\n "
0x128f (0x19cf): (0x05) Print message (constant) 0x7a

/ Set the temporary variable to the object description offset for when an
/ item is in the player's inventory (0xe7)
0x1291 (0x19d1): (0x08) Set var[0x5d] = (constant) 0xe7

/ Add the object id to get its inventory description
0x1294 (0x19d4): (0x0a) Set var[0x5d] += var[0x1e]

/ Print the object's inventory description
0x1297 (0x19d7): (0x04) Print message var[0x5d]

/ Print message  "\n "
0x1299 (0x19d9): (0x05) Print message (constant) 0x28

/ Set the object's location to the player's current location
0x129b (0x19db): (0xe2) Set list#2[var[0x1e]] = var[0x44] (list address 0x0740)

/ All done
0x129e (0x19de): (0x02) Return

**************************************************************************
* Check to see if the player is wearing the gauntlet before allowing them to 
* either take or wear the red-gold ring 
**************************************************************************

/ Branch if the second word is NOT "a red-gold ring" (0x96)
0x129f (0x19df): (0x19) If var[0x31] != (constant) 0x96 then Goto 0x12ce

/ Second word is "a red-gold ring" (0x96)

/ Get the current location of the "red-gold ring"
0x12a3 (0x19e3): (0xa2) Set var[0x45] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the player is in the same location as the ring
0x12a6 (0x19e6): (0x10) If var[0x43] == var[0x45] then Goto 0x12b8

/ Player is NOT in the same location as the ring

/ Branch if the player is NOT "in a circular room of red-gold metal.
/ Gold rings cover the floor"
0x12aa (0x19ea): (0x19) If var[0x43] != (constant) 0xb0 then Goto 0x12ce

/ Player IS "in a circular room of red-gold metal. Gold rings cover the floor"
/ and the "red-gold ring" is in another location

/ Branch if the player has already picked up the "red-gold ring"
0x12ae (0x19ee): (0x10) If var[0x5a] == var[0x0b] then Goto 0x12b8

/ Player is in the room with gold rings covering the floor, they have
/ previously picked up the red-gold ring and put it in another location
/ or their inventory - don't let them pick up another

/ Print message  "The rings dodge "
0x12b2 (0x19f2): (0x05) Print message (constant) 0x2da

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x12b5 (0x19f5): (0x00) Goto 0x0149

**************************************************************************
* Player in the same location as the "red-gold ring" so check if they are
* wearing the gauntlet to protect themselves from the power of the ring
**************************************************************************

/ Set the temporary variable to the object id of the gauntlet (0x4d)
0x12b8 (0x19f8): (0x08) Set var[0x1e] = (constant) 0x4d

/ Get the location of the gauntlet
0x12bb (0x19fb): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the player is wearing (0xff) the gauntlet
/ var[0x08] is the constant 0xff
0x12be (0x19fe): (0x10) If var[0x1f] == var[0x08] then Goto 0x12c8

/ Player is NOT wearing the gauntlet

/ Print message  "The ring grabs your finger and grows rapidly..\nYou shrink rapidly.. "
0x12c2 (0x1a02): (0x05) Print message (constant) 0x2db

/ Kill the player
0x12c5 (0x1a05): (0x00) Goto 0x12e7

**************************************************************************
* Player IS wearing the gauntlet - let them pick it up
**************************************************************************

/ Set the variable that indicates the player has picked up the ring 
/ at least once
0x12c8 (0x1a08): (0x09) Set var[0x5a] = var[0x01]

/ Weirdly set the location of the "red-gold ring" to the player's current 
/ location (get's changed later to the inventory)
0x12cb (0x1a0b): (0xe2) Set list#2[var[0x31]] = var[0x43] (list address 0x0740)

/ All done
0x12ce (0x1a0e): (0x02) Return

**************************************************************************
* Print "Gulp! The return blows kill you" and kill the player
**************************************************************************

/ Print message  "Gulp! The return blows kill you "
0x12cf (0x1a0f): (0x05) Print message (constant) 0x35

/ Kill the player
0x12d1 (0x1a11): (0x00) Goto 0x12e7

**************************************************************************
* Print "Your attack is futile"
**************************************************************************

/ Print message  "Your attack is futile "
0x12d3 (0x1a13): (0x05) Print message (constant) 0x36

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x12d5 (0x1a15): (0x00) Goto 0x0149

**************************************************************************
* Print "It dodges"
**************************************************************************

/ Print message  "It dodges "
0x12d8 (0x1a18): (0x05) Print message (constant) 0x33

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x12da (0x1a1a): (0x00) Goto 0x0149

**************************************************************************
* Print "You can't see it"
**************************************************************************

/ Print message  "You can't see it "
0x12dd (0x1a1d): (0x05) Print message (constant) 0x0c

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x12df (0x1a1f): (0x00) Goto 0x0149

**************************************************************************
* Print "Your blow is deadly"
**************************************************************************

/ Print message  "Your blow is deadly! "
0x12e2 (0x1a22): (0x05) Print message (constant) 0x34

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x12e4 (0x1a24): (0x00) Goto 0x0149

**************************************************************************
* Kill the player
**************************************************************************

0x12e7 (0x1a27): (0x0a) Set var[0x16] += var[0x01]

/ Set the status of the dwarf to NOT following the player (0x00)
/ var[0x0b] is the constant 0x00
0x12ea (0x1a2a): (0x09) Set var[0x1a] = var[0x0b]

/ Set the player's target location to be the same as their current location
0x12ed (0x1a2d): (0x09) Set var[0x44] = var[0x43]

/ Set the player's current location to 0xe2 (not a real location)
0x12f0 (0x1a30): (0x08) Set var[0x43] = (constant) 0xe2

/ Set the temporary variable to the base message id for the 
/ cyclical messages for when a player has died
0x12f3 (0x1a33): (0x08) Set var[0x5d] = (constant) 0x0f

/ Add on the number of times the player has died 
0x12f6 (0x1a36): (0x0a) Set var[0x5d] += var[0x16]

/ Print the cyclical message from one of the following
/ depending on how many times the player has died:
/ 0x10 : You have managed to get yourself killed!
/ 0x11 : You have got killed again!
/ 0x12 : Dead yet again!!
0x12f9 (0x1a39): (0x04) Print message var[0x5d]

/ Print message  "\nWant to be resurrected?\n "
0x12fb (0x1a3b): (0x05) Print message (constant) 0x0f

/ Get the player's response
0x12fd (0x1a3d): (0x07) Input - results in word1 var[0x30], word2 var[0x31], word3 var[0x32], count var[0x33]

/ If the word count is zero, loop back and get the input again
0x1302 (0x1a42): (0x10) If var[0x33] == var[0x0b] then Goto 0x12fd

/ Branch if the first word is "no" - actually matches against "North" (0x01)
/ var[0x01] is the constant 0x01
0x1306 (0x1a46): (0x10) If var[0x30] == var[0x01] then Goto 0x135c

/ Branch if the first word is "yes" (0x1d)
0x130a (0x1a4a): (0x18) If var[0x30] == (constant) 0x1d then Goto 0x1312

/ Answer was NOT "yes" or "no"

/ Print message  "Please answer YES or NO\n "
0x130e (0x1a4e): (0x05) Print message (constant) 0x09

/ Ask again
0x1310 (0x1a50): (0x00) Goto 0x12fb

**************************************************************************

/ Print message  "\nYour ghost rushes along "
0x1312 (0x1a52): (0x05) Print message (constant) 0x13

/ Branch if the machine has NOT scanned the player previously (0x00)
/ as they cannot be resurrected
/ var[0x0b] is the constant 0x00
0x1314 (0x1a54): (0x10) If var[0x49] == var[0x0b] then Goto 0x133a

/ Branch if the player has already met the Rakshasa (0x01)
/ and allow the resurrection
/ var[0x0b] is the constant 0x00
0x1318 (0x1a58): (0x13) If var[0x22] > var[0x0b] then Goto 0x133e

/ Player has NOT met the Rakshasa (0x00)

/ Branch if the player's current location IS "on the ceiling of a fine room. 
/ A chandelier lies beside you and the floor of the room is far above" (0xc8)
/ and allow the resurrection
0x131c (0x1a5c): (0x18) If var[0x44] == (constant) 0xc8 then Goto 0x133e

/ Branch if the player's current location IS "on the carpetted floor of a
/ comfortable homely room, beside a door to the east." (0xc9)
/ and allow the resurrection
0x1320 (0x1a60): (0x18) If var[0x44] == (constant) 0xc9 then Goto 0x133e

/ Branch if the player's current location IS "in a large store room. 
/ You realise that this is the ideal place to leave any treasures that you ." (0xca)
/ and allow the resurrection
0x1324 (0x1a64): (0x18) If var[0x44] == (constant) 0xca then Goto 0x133e

/ Branch if the player's current location IS "inside a large wooden box. 
/ A small door leads deeper into the box" (0xd7)
/ and allow the resurrection
0x1328 (0x1a68): (0x18) If var[0x44] == (constant) 0xd7 then Goto 0x133e

/ Set the temporary variable to the object id of the "packing case" (0x88)
0x132c (0x1a6c): (0x08) Set var[0x1e] = (constant) 0x88

/ Get the current location of the "packing case"
0x132f (0x1a6f): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ Branch if the "packing case" IS in the player's inventory (0xfe)
/ and allow the resurrection
/ var[0x07] is the constant 0x0fe
0x1332 (0x1a72): (0x10) If var[0x1f] == var[0x07] then Goto 0x133e

/ Branch if the "packing case" IS in the player's current location
/ and allow the resurrection
0x1336 (0x1a76): (0x10) If var[0x1f] == var[0x44] then Goto 0x133e

/ Resurrection is NOT allowed

/ Print message  "but fades rapidly.. You are completely dead "
0x133a (0x1a7a): (0x05) Print message (constant) 0x14

/ TODO
0x133c (0x1a7c): (0x00) Goto 0x135c

**************************************************************************

/ Print message  "and enters the machine in the homely house. Your body regenerates rapidly "
0x133e (0x1a7e): (0x05) Print message (constant) 0x15

/ Branch if the player has died less than 3 times and allow the resurrection
/ var[0x03] is the constant 0x03
0x1340 (0x1a80): (0x12) If var[0x16] < var[0x03] then Goto 0x1348

/ Player is dead for the 3rd time - don't allow the resurrection

/ Print message  "but the machine has been overworked. Something is wrong! Your new body slumps to the floor "
0x1344 (0x1a84): (0x05) Print message (constant) 0x17

/ Calculate the score, display it along with an accolade
/ and ask if the player wants to  play again
0x1346 (0x1a86): (0x00) Goto 0x135c

/ Player has died less than 2 times, allow the resurrection

/ Print message  "and you are alive again\n "
0x1348 (0x1a88): (0x05) Print message (constant) 0x16

/ Set the player's current location to "in a large store room." (0xca)
0x134a (0x1a8a): (0x08) Set var[0x43] = (constant) 0xca

/ Set the second word to the "packing case" (0x88)
0x134d (0x1a8d): (0x08) Set var[0x31] = (constant) 0x88

/ Remove the packing case from the game (why is this necessary?)
0x1350 (0x1a90): (0x01) Gosub 0x1488

/ Set the temporary variable to the starting location "on a mud-bank" (0x32)
0x1353 (0x1a93): (0x08) Set var[0x5d] = (constant) 0x32

/ Move the packing case to the starting location
0x1356 (0x1a96): (0xe2) Set list#2[var[0x31]] = var[0x5d] (list address 0x0740)

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x1359 (0x1a99): (0x00) Goto 0x0149
**************************************************************************

/ Calculate and print the player's score 
0x135c (0x1a9c): (0x01) Gosub 0x1200

/ 0x2b : You didn't get very far!
/ 0x2c : OK for a beginner
/ 0x2d : You had some success
/ 0x2e : A worthy efort!
/ 0x2f : You have earned the rank of Adventurer
/ 0x30 : You're clearly an experienced Adventurer!
/ 0x31 : Congratulations, Master Adventurer! You'll soon be a Grandmaster
/ 0x32  : All hail to thee, Grandmaster Adventurer!!

/ Set the temporary variable to the base message "You didn't get very far!" (0x2b)
0x135f (0x1a9f): (0x08) Set var[0x5d] = (constant) 0x2b

/ Branch if the score is less than 50 (0x32)
0x1362 (0x1aa2): (0x1a) If var[0x51] < (constant) 0x32 then Goto 0x1397

/ Set the temporary variable to the message "OK for a beginner" (0x2c)
0x1366 (0x1aa6): (0x0a) Set var[0x5d] += var[0x01]

/ Branch if the score is less than 100 (0x64)
0x1369 (0x1aa9): (0x1a) If var[0x51] < (constant) 0x64 then Goto 0x1397

/ Set the temporary variable to the base message "You had some success" (0x2d)
0x136d (0x1aad): (0x0a) Set var[0x5d] += var[0x01]

/ Branch if the score is less than 200 (0xc8)
0x1370 (0x1ab0): (0x1a) If var[0x51] < (constant) 0xc8 then Goto 0x1397

/ Set the temporary variable to the base message "A worthy effort!" (0x2e)
0x1374 (0x1ab4): (0x0a) Set var[0x5d] += var[0x01]

/ Branch if the score is less than 300 (0x128)
0x1377 (0x1ab7): (0x1a) If var[0x51] < (constant) 0x12c then Goto 0x1397

/ Set the temporary variable to the base message "You have earned the rank of Adventurer" (0x2f)
0x137c (0x1abc): (0x0a) Set var[0x5d] += var[0x01]

/ Branch if the score is less than 400 (0x190)
0x137f (0x1abf): (0x1a) If var[0x51] < (constant) 0x190 then Goto 0x1397

/ Set the temporary variable to the base message "You're clearly an experienced Adventurer!" (0x30)
0x1384 (0x1ac4): (0x0a) Set var[0x5d] += var[0x01]

/ Branch if the score is less than 500 (0x1f4)
0x1387 (0x1ac7): (0x1a) If var[0x51] < (constant) 0x1f4 then Goto 0x1397

/ Set the temporary variable to the base message "Congratulations, Master Adventurer! You'll soon be a Grandmaster" (0x31)
0x138c (0x1acc): (0x0a) Set var[0x5d] += var[0x01]

/ Branch if the score is less than 600 (0x258)
0x138f (0x1acf): (0x1a) If var[0x51] < (constant) 0x258 then Goto 0x1397

/ Set the temporary variable to the base message "All hail to thee, Grandmaster Adventurer!!" (0x32)
0x1394 (0x1ad4): (0x0a) Set var[0x5d] += var[0x01]

0x1397 (0x1ad7): (0x04) Print message var[0x5d]
/ Print message  "\nAnother game?\n "
0x1399 (0x1ad9): (0x05) Print message (constant) 0x0e

/ Get the player's response
0x139b (0x1adb): (0x07) Input - results in word1 var[0x30], word2 var[0x31], word3 var[0x32], count var[0x33]

/ Branch if there is no entered input and ask for input again
0x13a0 (0x1ae0): (0x10) If var[0x33] == var[0x0b] then Goto 0x139b

/ Branch if the first word is "no" (actually matches against north) (0x01)
/ var[0x01] is the constant 0x01
0x13a4 (0x1ae4): (0x10) If var[0x30] == var[0x01] then Goto 0x13b1

/ Branch if the first word is "yes" (0x1d) and reinitialise the game
0x13a8 (0x1ae8): (0x18) If var[0x30] == (constant) 0x1d then Goto 0x0000

/ Player did NOT answer "yes" or "no"

/ Print message  "Please answer YES or NO\n "
0x13ad (0x1aed): (0x05) Print message (constant) 0x09

/ Loop back and ask the question again
0x13af (0x1aef): (0x00) Goto 0x1399

/ Player decided to quit

/ Quit the game
0x13b1 (0x1af1): (0x06) Function - Quit (0x01)

**************************************************************************
* Process the password being said
**************************************************************************

/ Branch if the player's current location is NOT "outside the gatehouse" (0x22)
/ and print "nothing happens"
0x13b3 (0x1af3): (0x19) If var[0x43] != (constant) 0x22 then Goto 0x15f0

/ Player IS at "outside the gatehouse"

/ Print message  ""Pass friend!" "
0x13b8 (0x1af8): (0x05) Print message (constant) 0xb9

/ Set the status of the password to correctly given (0x01)
/ var[0x01] is the constant 0x01
0x13ba (0x1afa): (0x09) Set var[0x41] = var[0x01]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x13bd (0x1afd): (0x00) Goto 0x0190

**************************************************************************

/ Branch if the player is NOT in one of the following locations 
/ and print "Nothing happens"
/ 0x55 : standing on a small round platform surrounded by a cylinder of red light
/ 0x56 : standing on a small round platform surrounded by a cylinder of orange light
/ 0x57 : standing on a small round platform surrounded by a cylinder of yellow light
/ 0x58 : standing on a small round platform surrounded by a cylinder of green light
/ 0x59 : standing on a small round platform surrounded by a cylinder of blue light
/ 0x5a : standing on a small round platform surrounded by a cylinder of violet light
/ 0x5b : standing on a small round platform surrounded by a cylinder of impenetrable darkness
/ 0x5c : standing on a small round platform surrounded by a cylinder of silvery light
/ 0x5d : sitting on an ornate throne. There are nine numbered buttons along the left arm-rest
0x13c0 (0x1b00): (0x1a) If var[0x43] < (constant) 0x55 then Goto 0x15f0
0x13c5 (0x1b05): (0x1b) If var[0x43] > (constant) 0x5d then Goto 0x15f0

/ Player IS at "a small round platform"

/ The player teleports by saying a colour - which will take them to that cylinder of light
/ Player has to be wearing a collar colour that has a greater or equal colour value 
/ than the cylinder of coloured light that they want to teleport to e.g. to 
/ teleport to the orange cylinder of light, the player must be wearing at 
/ least the yellow collar - they will be denied with "NOT AUTHORISED TO GO THERE!"
/ if they are wearing the orange or red collar
/ 0x00 : Not wearing a collar
/ 0x8c : ORANGE
/ 0x8d : YELLOW
/ 0x8e : GREEN
/ 0x8f : BLUE
/ 0x91 : VIOLET
/ 0x92 : SILVER
/ 0x93 : MITHRIL

/ Branch if the player is wearing a collar with a lesser colour value 
/ than the colour they have said and print "NOT AUTHORISED...."
0x13ca (0x1b0a): (0x12) If var[0x0a] < var[0x30] then Goto 0x13e2

/ Set the player's current location to the dictionary id for the colour
0x13ce (0x1b0e): (0x09) Set var[0x43] = var[0x30]

/ Set the temporary variable to the offset to subtract to get the 
/ location id for the cylinder of light of that colour
0x13d1 (0x1b11): (0x08) Set var[0x5d] = (constant) 0x37

/ Subtract the offset to get the actual loction id 
0x13d4 (0x1b14): (0x0b) Set var[0x43] -= var[0x5d]

/ Branch and get the next command if they player is NOT in the 
/ "impenetrable darkness (0x5b) or "sliver" cylinder of light and 
/ perform additional location specific checks, print the location description
/ and ask "What next?" 
0x13d7 (0x1b17): (0x1a) If var[0x43] < (constant) 0x5b then Goto 0x0149

/ Add one to the location id
0x13dc (0x1b1c): (0x0a) Set var[0x43] += var[0x01]

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x13df (0x1b1f): (0x00) Goto 0x0149

**************************************************************************

/ Print message  ""NOT AUTHORISED TO GO THERE!" "
0x13e2 (0x1b22): (0x05) Print message (constant) 0x7c

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x13e4 (0x1b24): (0x00) Goto 0x0190

**************************************************************************

/ Check to see if the TODO
0x13e7 (0x1b27): (0x01) Gosub 0x15c5

/ Branch if the player was told "Don't be silly" and
/ perform additional location specific checks, print the location description
/ and ask "What next?" 
0x13ea (0x1b2a): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0149


0x13ef (0x1b2f): (0x13) If var[0x5f] > var[0x0b] then Goto 0x13f9
/ Print message  "A snake leaps out and strikes! "
0x13f3 (0x1b33): (0x05) Print message (constant) 0x12c
0x13f6 (0x1b36): (0x00) Goto 0x12e7
**************************************************************************

/ Set the temporary variable to the object id for the "opal" (0x6d)
0x13f9 (0x1b39): (0x08) Set var[0x1e] = (constant) 0x6d

/ CHeck to see if the object is discoverable and print it if it is
0x13fc (0x1b3c): (0x01) Gosub 0x1282

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x13ff (0x1b3f): (0x00) Goto 0x0190

**************************************************************************
* Command: "squash", "squeeze" or "hug"
**************************************************************************

0x1402 (0x1b42): (0x19) If var[0x31] != (constant) 0x87 then Goto 0x15f0
0x1407 (0x1b47): (0x01) Gosub 0x1559

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x140a (0x1b4a): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190
0x140f (0x1b4f): (0x10) If var[0x4a] == var[0x01] then Goto 0x15f0
/ Print message  "A silken rope emerges! "
0x1414 (0x1b54): (0x05) Print message (constant) 0xc3
0x1416 (0x1b56): (0x08) Set var[0x1f] = (constant) 0x54
0x1419 (0x1b59): (0xe2) Set list#2[var[0x1f]] = var[0x43] (list address 0x0740)
0x141c (0x1b5c): (0x09) Set var[0x4a] = var[0x01]

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x141f (0x1b5f): (0x00) Goto 0x0149

**************************************************************************
* Command: "bury" or "plant"
**************************************************************************

0x1422 (0x1b62): (0x01) Gosub 0x15c5

/ TODO Branch 
/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x1425 (0x1b65): (0x10) If var[0x3c] == var[0x0b] then Goto 0x0190
0x142a (0x1b6a): (0x01) Gosub 0x1488

/ TODO Branch 
// Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x142d (0x1b6d): (0x19) If var[0x31] != (constant) 0x97 then Goto 0x0190
/ Print message  "Warriors spring from the teeth "
0x1432 (0x1b72): (0x05) Print message (constant) 0xe1
0x1434 (0x1b74): (0x19) If var[0x4c] != (constant) 0xdc then Goto 0x1440
0x1438 (0x1b78): (0x09) Set var[0x0f] = var[0x06]

/ Print message  "and kill the orcs "
0x143b (0x1b7b): (0x05) Print message (constant) 0xe3

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x143d (0x1b7d): (0x00) Goto 0x0149
**************************************************************************
/ Print message  "and attack you "
0x1440 (0x1b80): (0x05) Print message (constant) 0xe2
0x1442 (0x1b82): (0x00) Goto 0x12e7
**************************************************************************
0x1445 (0x1b85): (0x08) Set var[0x5d] = (constant) 0xe5
0x1448 (0x1b88): (0x08) Set var[0x31] = (constant) 0x46
0x144b (0x1b8b): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)
0x144e (0x1b8e): (0x11) If var[0x1f] != var[0x5d] then Goto 0x1455
0x1452 (0x1b92): (0xe2) Set list#2[var[0x31]] = var[0x43] (list address 0x0740)
0x1455 (0x1b95): (0x0a) Set var[0x31] += var[0x01]
0x1458 (0x1b98): (0x1a) If var[0x31] < (constant) 0x9b then Goto 0x144b
0x145c (0x1b9c): (0x02) Return

**************************************************************************
* Loop through ALL the objects in the players inventory and remove them 
* from the game
**************************************************************************

/ Set the second word to the "axe" (0x46), the first game object
0x145d (0x1b9d): (0x08) Set var[0x31] = (constant) 0x46

/ Get the current location of the "axe" (0x46)
0x1460 (0x1ba0): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the axe is NOT in the player's inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x1463 (0x1ba3): (0x12) If var[0x1f] < var[0x07] then Goto 0x1469

/ Remove the object from the game by setting its location to 0xe1
0x1467 (0x1ba7): (0x01) Gosub 0x1488

/ Move to the next game object
0x1469 (0x1ba9): (0x0a) Set var[0x31] += var[0x01]

/ Loop back around until all objects have been processed 
0x146c (0x1bac): (0x1a) If var[0x31] < (constant) 0x9b then Goto 0x1460

/ All done
0x1470 (0x1bb0): (0x02) Return

**************************************************************************

/ Set the temporary variable to the first object, the axe (0x46)
0x1471 (0x1bb1): (0x08) Set var[0x31] = (constant) 0x46

/ Loop

/ Get the current location of the current object
0x1474 (0x1bb4): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the "axe" is NOT in the player's inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x1477 (0x1bb7): (0x12) If var[0x1f] < var[0x07] then Goto 0x1480

/ Player has the object

/ Remove the object from the game (either the player's carried items or 
/ worn items) and print an approrpiate message.  Seems slightly redundant 
/ given could just reset the inventory counts and put it directly in the location 
0x147b (0x1bbb): (0x01) Gosub 0x1488

/ Set the location of the object to their player's current location
0x147d (0x1bbd): (0xe2) Set list#2[var[0x31]] = var[0x44] (list address 0x0740)

/ Increment the current object id
0x1480 (0x1bc0): (0x0a) Set var[0x31] += var[0x01]

/ Keep looping until all objects are processed 
0x1483 (0x1bc3): (0x1a) If var[0x31] < (constant) 0x9b then Goto 0x1474

/ All done
0x1487 (0x1bc7): (0x02) Return

*************************************************************************
* Remove the item from the game (either the player's carried items or 
* worn items) and print an approrpiate message 
*************************************************************************

/ Get the current location of the object in the second word
0x1488 (0x1bc8): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)

/ Set it's current location to out of game (0xe1)
/ var[0x09] is the constant 0xe9
0x148b (0x1bcb): (0xe2) Set list#2[var[0x31]] = var[0x09] (list address 0x0740)

/ Branch if its location was in the player's inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x148e (0x1bce): (0x10) If var[0x1f] == var[0x07] then Goto 0x14a6

/ Branch if its location was NOT being worn by the player (0xff)
/ var[0x08] is the constant 0xff
0x1492 (0x1bd2): (0x11) If var[0x1f] != var[0x08] then Goto 0x14ad

/ Branch if the player is not wearing any items
0x1496 (0x1bd6): (0x10) If var[0x3e] == var[0x0b] then Goto 0x149d

/ Player is wearing at least one item

/ Decrement the number of items the player is wearing 
0x149a (0x1bda): (0x0b) Set var[0x3e] -= var[0x01]

/ Branch if the item being put out of the game is NOT the "good strong belt" (0x79)
0x149d (0x1bdd): (0x19) If var[0x31] != (constant) 0x79 then Goto 0x14a4

/ Object being put out of the game IS the "good strong belt" (0x79)

/ Reset the inventory size to 0x04
/ var[0x04] is the constant 0x04
0x14a1 (0x1be1): (0x09) Set var[0x4f] = var[0x04]

/ Skip over decrementing the carried items as the player was wearing the item
0x14a4 (0x1be4): (0x00) Goto 0x14ad

/ Branch if the player is not carrying any items (0x00)
/ var[0x0b] is the constant 0x00
0x14a6 (0x1be6): (0x10) If var[0x3b] == var[0x0b] then Goto 0x14ad

/ Player is carrying at least one item

/ Decrement the number of items the player is carrying
0x14aa (0x1bea): (0x0b) Set var[0x3b] -= var[0x01]

**************************************************************************
* Check to see if the player dropped or threw the pod onto the sleeping giants
**************************************************************************

/ Branch if the first word WAS "drop" (0x29)
0x14ad (0x1bed): (0x18) If var[0x30] == (constant) 0x29 then Goto 0x14b5

/ Branch if the first word was NOT "throw" or "hurl" (0x2b)
0x14b1 (0x1bf1): (0x19) If var[0x30] != (constant) 0x2b then Goto 0x14f2

/ First word was "throw" or "hurl" (0x2b) or "drop" (0x29)

/ Branch if the first location supplementary message is NOT "Two fierce
/ giants are asleep below" (0x45)
0x14b5 (0x1bf5): (0x19) If var[0x4c] != (constant) 0x45 then Goto 0x14c1

/ Two giants are asleep below

/ Print message  "It hits one giant, waking him. Seeing no other source for the attack, he attacks the other and they rush off, fighting "
0x14b9 (0x1bf9): (0x05) Print message (constant) 0x46

/ Set the status of the two evil giants to "fought each other and rushed off" (0x01)
/ var[0x01] is the constant 0x01
0x14bb (0x1bfb): (0x09) Set var[0x27] = var[0x01]

/ Set the target destination to "in a forest clearing" (0x11)
/ (move the player there)
0x14be (0x1bfe): (0x08) Set var[0x44] = (constant) 0x11

**************************************************************************
* Check to see if the player dropped or threw the pot
**************************************************************************
/ Branch if the second word is NOT the "pot" (0x52)
0x14c1 (0x1c01): (0x19) If var[0x31] != (constant) 0x52 then Goto 0x14d6

/ Second word IS the pot

/ Print message  "\nThe pot shatters "
0x14c5 (0x1c05): (0x05) Print message (constant) 0xa6

/ Cache the player's target location (which is the 
/ same at this point as the current location)
0x14c7 (0x1c07): (0x09) Set var[0x45] = var[0x44]

/ Set the target location to the out of game location id (0xe1). Also,
/ why? It gets reset to the player's current location but no processing 
/ checks against 0xe1 
/ BUG? Why not use the var[0x09] the constant 0xe1
/ BUG? Redundant code?
0x14ca (0x1c0a): (0x08) Set var[0x44] = (constant) 0xe1

/ Branch if the location of the sticky slime is NOT in its default location (0x00)
0x14cd (0x1c0d): (0x10) If var[0x40] == var[0x0b] then Goto 0x14d6

/ Slime is in the pot (oxfe)

/ Print message  ", and slime oozes out "
0x14d1 (0x1c11): (0x05) Print message (constant) 0xa7

/ Set the location of the slime to the player's target location (which is the 
/ same at this point as the current location)
0x14d3 (0x1c13): (0x09) Set var[0x40] = var[0x45]

**************************************************************************
* Check to see if the player dropped or threw the elephant brooch
**************************************************************************

/ Branch if the second word is NOT the "elephant brooch" (0x86)
0x14d6 (0x1c16): (0x19) If var[0x31] != (constant) 0x86 then Goto 0x14f2

/ Set the target location to the out of game location id (0xe1). Also,
/ why? It gets reset to the player's current location but no processing 
/ checks against 0xe1 
/ var[0x09] is the constant 0xe1
0x14da (0x1c1a): (0x09) Set var[0x44] = var[0x09]

/ Branch if the player's current location is after the outdoor locations
0x14dd (0x1c1d): (0x1b) If var[0x44] > (constant) 0x35 then Goto 0x14e6

/ Outdoor location - roc will take the elephant

/ Print message  "As the elephant grows, a roc swoops and carries it off "
0x14e1 (0x1c21): (0x05) Print message (constant) 0x111

/ Skip ahead past the rest of the elephant checks 
0x14e4 (0x1c24): (0x00) Goto 0x14f2

**************************************************************************

/ Print message  "The elephant tries to grow to full size but there's no room. It implodes "
0x14e6 (0x1c26): (0x05) Print message (constant) 0x112

/ Branch if the player's current location is NOT "in the condemned cell" (0xb9)
0x14e9 (0x1c29): (0x19) If var[0x43] != (constant) 0xb9 then Goto 0x14f2

/ Elephant kills the executioner

/ Print message  ". The executioner has been flattened "
0x14ed (0x1c2d): (0x05) Print message (constant) 0xf8

/ Set the status of the executioner to out of the game (0xe1)
/ var[0x09] is the constant 0xe1
0x14ef (0x1c2f): (0x09) Set var[0x2c] = var[0x09]

**************************************************************************
* Process the player dropping the corpse with the jellies
**************************************************************************

/ Branch if the second word is NOT the "corpse" or "body" (0x49)
0x14f2 (0x1c32): (0x19) If var[0x31] != (constant) 0x49 then Goto 0x1502

/ Branch if the player's target location (same as current) is NOT "in a 
/ tall cavern with a large central fireplace and a wide brick chimney 
/ leading upwards" (0x80)
0x14f6 (0x1c36): (0x19) If var[0x44] != (constant) 0x80 then Goto 0x1502

/ Player IS in the "tall cavern..."

/ Print message  "The jellies converge onto it "
0x14fa (0x1c3a): (0x05) Print message (constant) 0xea

/ Set the status of the carnivorous jelly to "converged on the corpse" (0x01)
/ var[0x01] is the constant 0x01
0x14fc (0x1c3c): (0x09) Set var[0x24] = var[0x01]

/ Set the target location to the out of game location id (0xe1). Also,
/ why? It gets reset to the player's current location but no processing 
/ checks against 0xe1 
/ var[0x09] is the constant 0xe1
0x14ff (0x1c3f): (0x09) Set var[0x44] = var[0x09]

**************************************************************************
* Process the player dropping a collar
**************************************************************************

/ Branch if the second word is NOT a colour
/ 0x8d : ORANGE
/ 0x8e : YELLOW
/ 0x8f : GREEN
/ 0x90 : BLUE
/ 0x91 : VIOLET
/ 0x92 : INDIGO
/ 0x93 : SILVER
0x1502 (0x1c42): (0x1a) If var[0x31] < (constant) 0x8c then Goto 0x1514
0x1506 (0x1c46): (0x1b) If var[0x31] > (constant) 0x93 then Goto 0x1514

/ Second word IS a colour

/ Get the current location of the <colour in the second word> collar
0x150a (0x1c4a): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the player is NOT waring the collar (0xff)
/ var[0x09] is the constant 0xff
0x150d (0x1c4d): (0x12) If var[0x1f] < var[0x08] then Goto 0x1514

/ Set the current worn collar to "none" (0x00)
/ var[0x0b] is the constant 0x00
0x1511 (0x1c51): (0x09) Set var[0x0a] = var[0x0b]

**************************************************************************
* Process the player dropping the blindfold
**************************************************************************

/ Branch if the second word is NOT the "blindfold" (0x48)
0x1514 (0x1c54): (0x19) If var[0x31] != (constant) 0x48 then Goto 0x151b

/ Second word IS the "blindfold" (0x48)

/ Set the status of the blindfold to "not being worn" (0x00)
0x1518 (0x1c58): (0x09) Set var[0x21] = var[0x0b]

**************************************************************************
* Process the player dropping the pig
**************************************************************************

/ Branch if the player's current location is NOT one of the following:
/ 0x2f : south of the river, on the edge of a vast field stretches west as far as the eye can see. A somnolant perfume hangs heavy on the breeze
/ 0x30 : on an east-west road, south of the river and north of a steep, treeless hill
/ 0x31 : on an east-west road beside the river and north plain. A line of stepping stones leads to a small island in the water
/ 0x32 : on a mud-bank, north of a wide river. A stone bridge spans the waters, reaching from the granite cliffs above to the flat lands of the far bank, and a path climbs up to it
/ 0x33 : under the killer-willow tree
/ 0x34 : on the southern end of a small island, reached by stepping stones from the south. The far end of the island is occupied by a viscious-looking willow tree with six long rubbery branches
/ 0x35 : on stepping stones leading north to an island
/ 0x36 : on the floor of a cavern, beside a clump of evil green toadstools. Liquid slime oozes from the north and paths lead south and up
/ 0x37 : in the middle of the floor of a giant cove, in a giant ants' nest. Small footprints lead north and south
/ 0x38 : North of the cave floor, below a huge grey mushroom
/ 0x39 : at the end of an aqueduct designed to drip water evenly into the depths of a deep pit below. The aqueduct leads north, a narrow fissure leads south, and steps lead down into the pit
/ 0x3a : walking on the bed of an empty aqueduct which crosses a vast dark pit
/ 0x3b : in a damp north-south pipe
/ 0x3c : on an aqueduct
/ 0x3d : in a paved tunnel below a silver pedestal. Water trickles from a silver hoop painted on one wall and seeps south. An armoured door leads east and a crack splits the north wall
/ 0x3e : standing in shallow water at the foot of the ramp. A ladder slopes northwards to a higher part of the ramp
0x151b (0x1c5b): (0x1a) If var[0x43] < (constant) 0x2f then Goto 0x153a
0x151f (0x1c5f): (0x1b) If var[0x43] > (constant) 0x3e then Goto 0x153a

/ Player IS in a location with location id from 0x2f to 0x3e

/ Branch if the second word is NOT the "pig" (0x51)
0x1523 (0x1c63): (0x19) If var[0x31] != (constant) 0x51 then Goto 0x152c

/ Second word is the "pig" (0x51)

/ Print message  "The pig dissolves! "
0x1527 (0x1c67): (0x05) Print message (constant) 0xda

/ Set the second word to the "pearl" 0x6e
0x1529 (0x1c69): (0x08) Set var[0x31] = (constant) 0x6e

/ Branch if the second word is NOT "a small ornate box with a lid" (0x4b)
0x152c (0x1c6c): (0x19) If var[0x31] != (constant) 0x4b then Goto 0x153a

/ Second word IS "a small ornate box with a lid"

/ Branch if the box has been dropped in shallow water 
/ and the drowned snake has floated from the box (0x01)
/ var[0x0b] is the constant 0x00
0x1530 (0x1c70): (0x13) If var[0x5f] > var[0x0b] then Goto 0x153a

/ First time box has been dropped in shallow water and snake inside drowned

/ Print message  "A drowned snake floats from the box "
0x1534 (0x1c74): (0x05) Print message (constant) 0x129

/ Set the status of the box to being dropped in shallow water
/ with the snake drowned (0x01)
/ var[0x01] is the constant 0x01
0x1537 (0x1c77): (0x09) Set var[0x5f] = var[0x01]

/ All done
0x153a (0x1c7a): (0x02) Return

**************************************************************************

/ Branch if the object in the second word is pickupable
0x153b (0x1c7b): (0x1a) If var[0x31] < (constant) 0x9b then Goto 0x1543

/ Player is trying to pick up a non-pickupable object

/ Print message  "Don't be silly! "
0x153f (0x1c7f): (0x05) Print message (constant) 0x06

/ Jump ahead and set the flag for the invalid command and return 
0x1541 (0x1c81): (0x00) Goto 0x1555

**************************************************************************

/ Branch if the object in the second word is NOT the "corpse" (0x49)
0x1543 (0x1c83): (0x19) If var[0x31] != (constant) 0x49 then Goto 0x154c

/ Object in the second word IS the "corpse" (0x49)

/ Branch if the player's current location IS "in a dead end, below a gallows 
/ tree from which a bloodless corpse hangs by one foot" (0xb1)
0x1547 (0x1c87): (0x18) If var[0x43] == (constant) 0xb1 then Goto 0x15e0

/ Player iS NOT "in a dead end, below a gallows tree from which 
/ a bloodless corpse hangs by one foot" (0xb1)

/ Get the current location of the corpse
0x154c (0x1c8c): (0xa2) Set var[0x5d] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the current location is NOT the player's current location
0x154f (0x1c8f): (0x10) If var[0x5d] == var[0x44] then Goto 0x1558

/ Print message  "You can't see it "
0x1553 (0x1c93): (0x05) Print message (constant) 0x0c

/ Set the flag that indicates they can pick it up or wear it to 
/ indicate that they cannot (0x00)
/ var[0x0b] is the constant 0x00
0x1555 (0x1c95): (0x09) Set var[0x3c] = var[0x0b]

/ All done
0x1558 (0x1c98): (0x02) Return

**************************************************************************
* Check that the object is "pickupable" and in the player's inventory or 
* being worn
**************************************************************************

/ TODO also called by eat etc... check the commentary wording here

/ Branch if the object in the second word is a pickupable
0x1559 (0x1c99): (0x1a) If var[0x31] < (constant) 0x9b then Goto 0x1561

/ Object is NOT pickupable

/ Print message  "Don't be silly! "
0x155d (0x1c9d): (0x05) Print message (constant) 0x06

/ Set the invalid action flag and return
0x155f (0x1c9f): (0x00) Goto 0x156a

**************************************************************************

/ Get the current location of the object in the second word
0x1561 (0x1ca1): (0xa2) Set var[0x5d] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the player already has the object in their inventory (0xfe) or 
/ is wearing it (0xff)
0x1564 (0x1ca4): (0x1b) If var[0x5d] > (constant) 0xfd then Goto 0x156d

/ Print message  "You don't have it "
0x1568 (0x1ca8): (0x05) Print message (constant) 0x0b

/ Set the flag that indicates they can pick it up or wear it to 
/ indicate that they cannot (0x00)
/ var[0x0b] is the constant 0x00
0x156a (0x1caa): (0x09) Set var[0x3c] = var[0x0b]

/ All done
0x156d (0x1cad): (0x02) Return

**************************************************************************
* Print all the objects in the location passed in var[0x44]
* Either a location id, inventory (0xfe) or wearing (0xff)
**************************************************************************

/ Set the temporary variable to the first object id "axe" (0x46)
0x156e (0x1cae): (0x08) Set var[0x1e] = (constant) 0x46

/ Set the count of objects printed to 0
/ var[0x0b] is the constant 0x00
0x1571 (0x1cb1): (0x09) Set var[0x3c] = var[0x0b]

/ Get the current location of the object
0x1574 (0x1cb4): (0xa2) Set var[0x1f] = list#2[var[0x1e]] (list address 0x0740)

/ BUG? This isn't used at all here or in the subroutine at 0x1586
/ Set the message to print between objects to newline
0x1577 (0x1cb7): (0x08) Set var[0x63] = (constant) 0x28

/ Branch if the object is in the passed in location
0x157a (0x1cba): (0x10) If var[0x1f] == var[0x44] then Goto 0x1586

/ Object IS NOT in the player's current location 

/ Move to the next object id 
0x157e (0x1cbe): (0x0a) Set var[0x1e] += var[0x01]

/ If there are remaining object to process, loop back and process them
0x1581 (0x1cc1): (0x1a) If var[0x1e] < (constant) 0x9a then Goto 0x1574

/ All done
0x1585 (0x1cc5): (0x02) Return

**************************************************************************
* Print the object description 
**************************************************************************

/ Set the temporary variable to the base message id that was passed in
/ the message offset is either (0x141) for items in a location or 
/ (0x37) for items in the inventory.  This is used to get the right object
/ description depending on where the object is as the descriptions are
/ different.
0x1586 (0x1cc6): (0x09) Set var[0x5d] = var[0x38]

/ Add on the current looping object index (starts at 0x1e ends at 0x8f)
0x1589 (0x1cc9): (0x0a) Set var[0x5d] += var[0x1e]

**************************************************************************
* Suffix the driftwood with a status depending on how much is left to burn
**************************************************************************

/ Branch if the current object id is NOT the "driftwood" / "torch" (0x4c)
0x158c (0x1ccc): (0x19) If var[0x1e] != (constant) 0x4c then Goto 0x159e

/ Object IS the torch

/ Brance if the driftwood / torch has remaining turns left to burn
/ var[0x0b] is the constant 0x00
0x1590 (0x1cd0): (0x10) If var[0x36] == var[0x0b] then Goto 0x159e

/ Torch IS lit

/ Set the message to print to ", burning brightly" (0x70)
0x1594 (0x1cd4): (0x08) Set var[0x63] = (constant) 0x70

/ Branch if the driftwood torch has more than 10 (0x0a) turns remaining lit
0x1597 (0x1cd7): (0x1b) If var[0x36] > (constant) 0x0a then Goto 0x159ef

/ 10 turns or less remaining to burn

/ Set the message to print to ", only a stump is left" (0xa8)
0x159b (0x1cdb): (0x08) Set var[0x63] = (constant) 0xa8

**************************************************************************
* Suffix the pot with a status depending on if it's full of slime
**************************************************************************

/ Branch if the current object id is NOT the "pot" (0x52)
0x159e (0x1cde): (0x19) If var[0x1e] != (constant) 0x52 then Goto 0x15a9

/ Object IS the pot

/ Branch if the location of the sticky slime is NOT in the player's 
/ inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x15a2 (0x1ce2): (0x11) If var[0x40] != var[0x07] then Goto 0x15a9

/ Set the suffix to ", full of slime" (0xa0)
0x15a6 (0x1ce6): (0x08) Set var[0x63] = (constant) 0xa0

/ Branch if the current object id is NOT the "miner's helmet" (0x76)
0x15a9 (0x1ce9): (0x19) If var[0x1e] != (constant) 0x76 then Goto 0x15b4

/ Branch if the helmet does not have the will o'wisp lighting it (0x00)
0x15ad (0x1ced): (0x11) If var[0x5c] != var[0x01] then Goto 0x15b4

/ Will O'wisp is lighting the helmet (0x00)

/ Set the suffix to "which shines brightly" (0xbf)
0x15b1 (0x1cf1): (0x08) Set var[0x63] = (constant) 0xbf

/ 
0x15b4 (0x1cf4): (0x0a) Set var[0x3c] += var[0x01]

/ Branch if the offset passed in was 0x00 and do NOT 
/ print the object description
/ var[0x0b] is the constant 0x00
0x15b7 (0x1cf7): (0x10) If var[0x38] == var[0x0b] then Goto 0x157e

/ Print message  "\n "
0x15bb (0x1cfb): (0x05) Print message (constant) 0x28

/ Print the location or inventory description of the object
/ based on the offset that was passed in in var[0x38]
0x15bd (0x1cfd): (0x04) Print message var[0x5d]

/ Print the suffix for the object (if any)
0x15bf (0x1cff): (0x04) Print message var[0x63]

/ Print message  "\n "
0x15c1 (0x1d01): (0x05) Print message (constant) 0x28

/ Move to the next object and print it's description if necessary
0x15c3 (0x1d03): (0x00) Goto 0x157e

**************************************************************************

/ Branch if the player is trying to pick up something that isn't a NPC
/ or fixed object or password or number 
0x15c5 (0x1d05): (0x1a) If var[0x31] < (constant) 0x9b then Goto 0x15cd

/ Player is trying to pick up an NPC or fixed object or password or number

/ Print message  "Don't be silly! "
0x15c9 (0x1d09): (0x05) Print message (constant) 0x06

/ Set the variable that indicates the object cannot be worn or picked up 
/ and return
0x15cb (0x1d0b): (0x00) Goto 0x15dc

**************************************************************************

/ Get the current location of the object in the second word
0x15cd (0x1d0d): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the object is already in the inventory (0xfe) or being worn (0xff) 
/ and just return
0x15d0 (0x1d10): (0x1b) If var[0x1f] > (constant) 0xfd then Goto 0x15df

/ Branch if the object is in their player's current location and return
/ (at this point var[0x43] and var[0x44] are the same
0x15d5 (0x1d15): (0x10) If var[0x1f] == var[0x44] then Goto 0x15df

/ Object is NOT in the player's current location

/ Print message  "You can't see it "
0x15da (0x1d1a): (0x05) Print message (constant) 0x0c

/ Set the flag that indicates they can pick it up or wear it to 
/ indicate that they cannot (0x00)
/ var[0x0b] is the constant 0x00
0x15dc (0x1d1c): (0x09) Set var[0x3c] = var[0x0b]

/ All done
0x15df (0x1d1f): (0x02) Return

**************************************************************************
* Print "You can't do that" for various actions
**************************************************************************

/ Print message  "You can't do that "
0x15e0 (0x1d20): (0x05) Print message (constant) 0x05

/ Set the invalid action status (0x00)
/ var[0x0b] is the constant 0x00
0x15e2 (0x1d22): (0x09) Set var[0x3c] = var[0x0b]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x15e5 (0x1d25): (0x00) Goto 0x0190

**************************************************************************
* Print "Please be more specific" for various actions
**************************************************************************

/ Print message  "Please be more specific "
0x15e8 (0x1d28): (0x05) Print message (constant) 0x04

/ Set the invalid action status (0x00)
/ var[0x0b] is the constant 0x00
0x15ea (0x1d2a): (0x09) Set var[0x3c] = var[0x0b]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x15ed (0x1d2d): (0x00) Goto 0x0190

**************************************************************************
* Print "nothing happens" for various actions
**************************************************************************

/ Print message  "Nothing happens "
0x15f0 (0x1d30): (0x05) Print message (constant) 0x0a

/ Set the invalid action status (0x00)
/ var[0x0b] is the constant 0x00
0x15f2 (0x1d32): (0x09) Set var[0x3c] = var[0x0b]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x15f5 (0x1d35): (0x00) Goto 0x0190

**************************************************************************
* Print "You can't do that" when a player tries to give an invalid object
*************************************************************************
*
/ Print message  "You can't do that "
0x15f8 (0x1d38): (0x05) Print message (constant) 0x05

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x15fa (0x1d3a): (0x00) Goto 0x0190

**************************************************************************
* UNUSED CODE 
**************************************************************************

/ Get the current location of the object in the second word
0x15fd (0x1d3d): (0xa2) Set var[0x1f] = list#2[var[0x31]] (list address 0x0740)

/ Branch if the object is not in the inventory (0xfe)
/ var[0x07] is the constant 0xfe
0x1600 (0x1d40): (0x11) If var[0x1f] != var[0x07] then Goto 0x1608

/ Set the invalid action status (0x00)
/ var[0x0b] is the constant 0x00
0x1605 (0x1d45): (0x09) Set var[0x3c] = var[0x0b]

/ All done
0x1608 (0x1d48): (0x02) Return

**************************************************************************
* END OF UNUSED CODE
**************************************************************************

**************************************************************************
* Print "Don't be silly" as it's not a valid action and set the flag
**************************************************************************

/ Print message  "Don't be silly! "
0x1609 (0x1d49): (0x05) Print message (constant) 0x06

/ Set the flag that it's not a valid action
/ var[0x0b] is the constant 0x00
0x160b (0x1d4b): (0x09) Set var[0x3c] = var[0x0b]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x160e (0x1d4e): (0x00) Goto 0x0190

**************************************************************************
* Print you must be joking
**************************************************************************

/ Print message  "You must be joking! "
0x1611 (0x1d51): (0x05) Print message (constant) 0x23

/ Set the indicator to show it was not a valid action
0x1613 (0x1d53): (0x09) Set var[0x3c] = var[0x0b]

/ Perform additional location specific checks skipping the code 
/ that prints the location description and ask "What next?" 
0x1616 (0x1d56): (0x00) Goto 0x0190

**************************************************************************
* For various situations print that the player cannot see the object
**************************************************************************

/ Print message  "You can't see it "
0x1619 (0x1d59): (0x05) Print message (constant) 0x0c

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x161b (0x1d5b): (0x00) Goto 0x0149

**************************************************************************
* The iron door is locked so print the message
**************************************************************************

/ Print message  "The door is locked! "
0x161e (0x1d5e): (0x05) Print message (constant) 0x8e

/ Perform additional location specific checks, print the location description
/ and ask "What next?" 
0x1620 (0x1d60): (0x00) Goto 0x0149

**************************************************************************
* Remaining turns exhausted when a black sphere is following the player -
* t will swallow them now
**************************************************************************

/ Print message  "The sphere swallows you "
0x1623 (0x1d63): (0x05) Print message (constant) 0x38

/ Reset the first black sphere to its starting location 
/ "dead-end dark room, below a black pedestal" (0xab)
0x1625 (0x1d65): (0x08) Set var[0x14] = (constant) 0xab

/ Reset the first black sphere to its starting location
/ "dead-end dark room" (0xac)
0x1628 (0x1d68): (0x08) Set var[0x15] = (constant) 0xac

/ Kill the player
0x162b (0x1d6b): (0x00) Goto 0x12e7

**************************************************************************
* Level 9 A-Code game dissassembly complete
**************************************************************************
