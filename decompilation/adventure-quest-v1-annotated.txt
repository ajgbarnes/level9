**************************************************************************
* Level 9 A-Code game dissassembly for Adventure Quest v1
**************************************************************************

/ Created by Andy Barnes @ajgbarnes on X/Twitter

/ Location descriptions
/ ---------------------
/ Location text can be found by looking in the adventure-quest-v1-descs.txt file
/ Locations descriptions are 0x12c + location id
/ 
/ Object descriptions
/ ---------------------
/ Object text can be found by looking in the adventure-quest-v1-descs.txt file
/ Object descriptions (when in inventory) are 0xaa + object id
/ Object descriptions (when in location)  are 0xd2 + object id

/ Lists
/ =====
/
/ list#1 - initial location of objects (read only)
/ list#2 - current working location of objects - initialised by list#1
/ list#3 - whether the location is dark, only locations that are dark 
/          will be in this list. Terminated with 0xe2
/ list#4 - whether the location is undewater, only locations that are 
/          underwater will be in this list. Terminated with 0xe2
/
/ list#1
/ ======
/ 
/ There are 33 objects in the game
/
/ Obj    Object        Initial  Partial 
/ Id     Name          Loc Id   Location Description
/ ----   ------------- -------  ----------------------------------------------------------------------------------
/ 0x33 - Earth-stone    0x6b    in the lair of a giant spider, surrounded by a maze of web strands
/ 0x34 - Mist-stone     0xb9    deep in the marsh with no way out. Every way you look seems blocked by areas of quicksand. A Will o'Wisp dances overhead in triumph
/ 0x35 - Star-stone     0xa5    on a hill-top outside a long barrow....
/ 0x36 - Sun-stone      0x92    standing by the alter
/ 0x37 - Medallion      0x14    in a small woodland clearing carpetted with buttercups and sweet grasses
/ 0x38 - Boots          0xc2    You are in a high room. A window looks out onto the marsh to the south....
/ 0x39 - Bottle         0x12    in the building. Steps lead down a well in the centre of the floor....
/ 0x3a - Brazier        0xa5    on a hill-top outside a long barrow. 
/ 0x3b - Keys           0x12    in the building. Steps lead down a well in the centre of the floor....
/ 0x3c - Cloak          0x86    on a ledge south-west of the crater
/ 0x3d - Compass        0x19    (hidden) at the top of a stone pinnacle high above the forest... 
/ 0x3e - Egg            0x80    in the dragon's lair....
/ 0x3f - Emerald eye    0x4a    in a tiny alcove at the back of a squalid room
/ 0x40 - Ruby           0xe2    (given when you give the priestess the sun-dial in the small temple (0x24))
/ 0x41 - Lung-fish      0x64    on a ledge above a series of rapids
/ 0x42 - Fruit          0x12    in the building. Steps lead down a well in the centre of the floor....
/ 0x43 - Jelly-fish     0x5c    inside the drowned church. A slow ringing can be heard from the west...
/ 0x44 - Lamp           0x2f    in an oasis beside a deep pool of cool water
/ 0x45 - Net            0x62    on a small gravel beach to the south of a lake in a volcanic crater
/ 0x46 - Garlic/onions  0x0d    on the steep east side of a valley, overgrown with brambles and stinging plants
/ 0x47 - Rare orchid    0x0b    stumbling over sharp stones in a steeply sloping gulley
/ 0x48 - Pan pipes      0x14    in a small woodland clearing carpetted with buttercups and sweet grasses
/ 0x49 - Crooked stick  0x19    at the top of a stone pinnacle high above the forest...
/ 0x4a - Rope           0x45    in a small room used by the orc guards
/ 0x4b - Scroll         0x19    at the top of a stone pinnacle high above the forest....
/ 0x4c - Silver ball    0x11    sitting on a gnarled tree-branch which is half-split from its parent...
/ 0x4d - Sling          0x12    in the building. Steps lead down a well in the centre of the floor....
/ 0x4e - Snowman        0x3f    standing on a snowfield outside a small dark mountain cave    
/ 0x4f - Sun-dial       0x31    in a looted teasure cave
/ 0x50 - Sword          0xe2    (given to the player in a small dead-end room. An ancient statue... (0x6e) )
/ 0x51 - Table          0x12    in the building. Steps lead down a well in the centre of the floor....
/ 0x52 - Trident        0x30    swimming in a clear desert pool
/ 0x53 - Leather bag    0x4a    in a tiny alcove at the back of a squalid room
/ 
/ list#3
/ ======
/ 
/ The following locations are defined as dark:
/ 0x13 - in the well. A message on the wall says "Congratulations on bringing 
/        light to the dark well! Give yourself a 1000 point bonus for being lucky!!"
/ 0x40 - in a smelly cave: the sound of running water reverberates from the walls. A white dot is marked 
/        on the roof, and at the back of the cave is a sheer drop down into darkness
/ 0x5e - at the west end of an underwater trench. A swift current flows away through a small gap in the rocks
/ 0x5f - at the east end of an underwater trench, outside a small cave. You think that there may be movement in the cave
/ 0x61 - inside an octopus lair. The water is warm and there is a white dot on the wall
/ 0x65 - south of a huge door on the north shore of the crater lake. A host of carved stone heads glare at you from above the door, seeming to follow your every move. To the east is a second, smaller entrance, marked with a black dot
/ 0x66 - at the south of a magnificent cave with holes all around. A huge door stands open behind you
/ 0x67 - at a dead end
/ 0x68 - in the centre of a magnificent cave. A web-covered stalagmite reaches upwards towards the sculpted roof
/ 0x69 - clinging to a web-covered stalagmite. The cavern floor is far below
/ 0x6a - in the middle of a huge web at the top of the stalagmite. A thick web walkway continues upwards
/ 0x6b - in the lair of a giant spider, surrounded by a maze of web strands
/ 0x6c - at a dead end decorated with ornate carvings cut into the rock
/ 0x6d - at the north of a magnificent cave with holes all around
/ 0x6e - in a small dead-end room. An ancient statue of a warrior elf stands in the centre. One of his eyes is covered by a jewelled patch - the other is missing
/ 0x6f - in an east-west passage decorated with carvings
/ 0x70 - in a sloping corridoor warmed by rising hot air
/ 0x71 - at a dead end
/ 0x72 - in a steeply-sloping east-west passage which winds upwards through the rock
/ 0x73 - at a junction between north-south and east-west passages
/ 0x74 - on a ledge clinging to the west wall of a huge cavern. The cavern floor is just visible, far below
/ 0x75 - on a ledge which clings to the west wall of a large cavern
/ 0x76 - trapped at a dead end
/ 0x78 - in a smelly store-room
/ 0x7c - in a tiny store-room
/ 0x7d - in a mass of giant rocks
/ 0x80 - in the dragon's lair. The floor is covered in gold coins but, sadly for you, the dragon's breath has fused them solid. "Why don't all dragons do this", you wonder
/ 0x89 - in a cave opening onto a volcanic crater. A huge hole almost fills the cave floor and a ramp spirals down into it. Warning runes are carved at the top of the ramp
/ 0x8a - on a spiral ramp at the top of Hell-well. The walls of the well are inset with small niches containing small flickering lights
/ 0x8b - on a spiral ramp half way up Hell-well. The walls are inset with small niches containing trapped flames
/ 0x8c - on a spiral ramp near the bottom of Hell-well. The walls of the well are inset with small niches holding tiny flames
/ 0x8d - standing on shattered rocks at the bottom of Hell-well. A broken door leads west
/ 
/ 
/ list#4
/ ======
/
/ The following locations are defined as underwater:
/ 0x13 - in the well. A message on the wall says "Congratulations 
/        on bringing light to the dark well! Give yourself a 
/        1000 point bonus for being lucky!!"
/ 0x30 - swimming in a clear desert pool
/ 0x53 - in a quiet pool below the rapids and near a gravel beach
/ 0x54 - on a featureless lake-bed
/ 0x55 - on the lake-bed. A huge clam is firmly rooted to the rocks
/ 0x56 - on the lake bed
/ 0x57 - on the lake bed
/ 0x58 - on the lake bed above a deep dark trench
/ 0x59 - on the lake bed above a deep dark trench
/ 0x5a - safe in a thick mass of water weed
/ 0x5b - in a drowned grave yard, outside a church. A ringing sound can be heard
/ 0x5c - inside the drowned church. A slow ringing can be heard from the west, behind the pulpit
/ 0x5d - inside the belfry, below a tolling bell
/ 0x5e - at the west end of an underwater trench. A swift current flows away through a small gap in the rocks
/ 0x5f - at the east end of an underwater trench, outside a small cave. You think that there may be movement in the cave
/ 0x60 - in shallow water at the edge of the lake
/ 0x61 - inside an octopus lair. The water is warm and there is a white dot on the wall
/
/ Exit flags
/ ==========
/
/ When the "exits" command is called, exit flags are returned in var[0x48]
/ 
/ In this game they have the following definition:
/ Bit 0 - If set, the direction can be used inversely i.e. if this is 
/         an East entry between locations A and B then the player can go 
/         West from B to A
/ Bit 1 - If set this a teleporation between a black and white dot
/         so print "There is a sensation of rapid movement.."
/ BIt 2 - Not used, always set to 0x00
/ 
/ Hence if 0x00 (0b00) - cannot be used inversely but is NOT a teleportation
/       if 0x01 (0b01) - can    be used inversely but is NOT a teleportation
/       if 0x02 (0b10) - cannot be used inversely and IS a teleportation
/       if 0x03 (0b11) - can be used inversely and IS a teleportation (NEVER USED)
/
/ Objects
/ =======
/ 
/ - There are 33 objects in the game
/ - First object has object id 0x33 (51)
/ - Last object  has object id 0x53 (83)
/
/ Use of variables var[0xNN] in the A-code
/ ========================================
/ 0x01 - (Constant) 0x01
/ 0x02 - (Constant) 0x02
/ 0x03 - (Constant) 0x03
/ 0x04 - (Constant) 0x04
/ 0x05 - (Constant) 0x05
/ 0x06 - (Constant) 0x06
/ 0x07 - (Constant) 0xff, location code of the inventory
/ 0x08 - (Constant) 0xe2, location code for out of game or destroyed
/ 0x09 - Status of the snowman:
/        0x00 - freed from the chains or killed by the ruby
/        0x01 - chained to the mountain
/ 0x0a - Status of the bottle:
/        0x00 - empty
/        0x01 - full of oil
/        0x02 - full of water (when initialised at the beginning of the game)
/        0x03 - full of water (when filled during the game, should be 0x02!)
/ 0x0b - Player's current location
/ 0x0c - Initialised to 0x01 but unused
/ 0x0d - How close in movement turns the gigantic worm is to the player:
/        1. It gets closer every movement turn in the desert
/        2. It gets further away with any other action e.g. inventory
/        3. It gets reset to 0x07 turns away when the player is NOT 
/        in the desert (every turn)
/        4. It gets further away every non-movement turn in the desert e.g. inventory or look
/        5. It gets set to 0x0a if the player throws or drops the ruby as
/        (presumably) the explosion scares it
/        6. When it's 4 or less used as an offset from a base message id 
/        to print a message about the worm
/        7. After the gigantic worm "rises from the sand, swallowing all in its path!"
/        and eats e.g. the sphinx, it's reset to 0x07 turns away
/ 0x0e - Number of scored points for staying alive. Starts at 1,000 and has 
/        300 deducted every time the player dies
/ 0x0f - Number of turns before a player will die of cold exposure on the bleak moor
/        Defaults to 10 (0x0a)
/ 0x10 - 1. Object index when setting initial location of the object
/        2. Object index when printing items in a specified location
/        3. Temporary object id for looking up the insulating cloak's location
/        4. Temporary object id for looking up the wind-bag's location
/        5. Temporary object id for looking up the trident's location
/        6. Temporary object id for looking up the lung-fish's location
/        7. Temporary object id for looking up the water walking boots' location
/        8. Temporary id for looping through list#3 (the dark locations)
/        9. Temporary id for looping through list#4 (the underwater locations)
/        10.Temporary object id for looking up the net's location
/        11.Temporary object id for looking up the sword's location
/ 0x11 - 1. Location of the ruby for an inventory check
/        2. Location of the abominable snowman 
/        3. Location of object when looping through trying to find objects in a specified location
/        4. Temporary location id after looking up the insulating cloak's location
/        5. Temporary location id after looking up the wind-bag's location
/        6. Temporary location id after looking up the trident's location
/        7. Temporary location id after looking up the lung-fish's location
/        8. Temporary location id after looking up the lamp's location
/        9. Temporary location id after looking up the water walking boot's location
/        10.Temporary location id read from list#3 used to determine if a location is dark
/        11.Temporary location id read from list#4 used to determine if a location is underwater
/ 0x12 - Indicates if the location is one of the dark locations in list#3
/ 0x13 - 1. Location of item that is to be removed from the game (used for inventory check)
/        2. Object description to print when an object is in the passed location
/        3. Calculating the probability that the shark will attack the player when circling
/        4. Calculating the probability that an arrow will kill the player
/        when in the magnificent cave locations 0x68 and 0x6d
/        5. Calculating the probability that the sheet of living flame will attack
/        the player if not wearing the insulating cloak.  Will attack 81/255 so approximately 32% of
/        time. 
/        6. Calculating the probability that the BALROG will strike out at the player
/        and also if it hits the player
/        7. Which direction the flames come from when around the crater
/        8. Which location the flames land in to see if they kill the player
/        9. Calculating the probability of the skeletal hand grabbing the player in the marsh each turn
/        10. Calculating the probability of the wolves grabbing the player in the marsh each turn
/        11. Calculating the probability of a shark circling the player in the lake bed/quiet pool
/        12. Subtracting 300 from the 1000 they could have scored if they died
/        13. Location of an object when get/take/wear/catch is being checked to see if it's in the player's current location
/        14. Moving the earth-stone to the tiny store room
/ 0x14 - Status of the lamp 
/        0x00 - unlit
/        0x01 - lit
/ 0x15 - (Constant) 0x00
/ 0x16 - Indicates if the player can see in the location - if it's a dark location 
/        then it will have to be lit by either the lamp of the luminous jelly-fish
/        0x00 - it's dark
/        0x01 - location is lit
/ 0x17 - Description offset for the objects when printing objects
/        0x00 - reset to this when the player performs a get/take/catch/wear
/        0xaa - description offset for when describing objects in the inventory
/        0xd2 - description offset for when describing objects in a location
/ 0x18 - 1. Player's target location (where the exit would take them) when moving
/        2. Location to check object is in e.g. inventory when looping through the objects (see 0x0edc)
/        3. Set to the current location after moving
/ 0x19 - First supplementary message to print at the location
/        (mostly about things in the location that need dealing with)
/        Can be one of the following:
/        0x00 - n/a
/        0x2a - The orchid is two foot above your reach
/        0x2e - A rope bridge spans the chasm from east to west
/        0x45 - A fearsome dark shape flies at you: claws and tentacles flail the air!
/        0x4c - "A cavern opens to the north
/        0x8f - A BALROG stands astride the bridge, holding its whip of flames. You are trapped!
/        0xb1 - You are surrounded by cold shadowy ghosts which are feeding from your very life energy
/        0xba - You stand before the throne where the Demon Lord sits laughing. You cannot move!
/        0xbf - The Demon Lord freezes you with a look: "You will still fail!", he snarls, "No amulet can work so close to the centre of my power." 
/        0xc5 - A giant sits in the middle of the path, blocking it. He is picking at the bones of some unfortunate creature
/        0xce - A Djinn stands before you, guarding the oasis to the south
/        0xd0 - The snowman is chained to the mountain
/        0xd1 - There is a small stalagmite near the edge
/        0xd2 - A pile of giant rocks lies beside the steps
/        0xd4 - A dragon fills the cave!
/        0xd9 - The door is rusted solid
/        0xda - The door is locked
/ 0x1a - Second supplementary message to print at the location
/        (mostly about NPCs attacking the player)
/        Can be one of the following:
/        0x00 - n/a
/        0x11 - A pack of wolves is stalking you
/        0x63 - A shark circles round, eying you
/        0x85 - A sheet of living flame is attacking you
/        0xa8 - A reflected face in the marsh looks back. Your gaze is locked!
/        0xae - A skeletal hand is gripping your leg and dragging you into the marsh!
/        0xb1 - You are surrounded by cold shadowy ghosts which are feeding from your very life energy
/ 0x1b - 1. Count of objects in the passed location to the "count objects in this
/        location" routine"
/        2. Whether the player has a weapon in their inventory
/        0x00 - Weapon in inventory
/        0x01 - No weapon in inventory
/        3. For a get/take/catch/wear, flag to indicate if the object is in the same 
/        location as the player or, if it's the cloak, if it can be picked up (it's not allowed
/        if it's been dropped in a "hot room")
/        0x00 - cannot be picked up
/        0x01 - can be picked up
/ 0x1c - If the player is underwater
/        0x00 - not underwater
/        0x01 - underwater
/ 0x1d - Status of the lung-fish
/        0x00 - player can breathe in air
/        0x01 - player can breathe only in water
/ 0x1e - Number of turns that the player has been unable to breathe
/ 0x1f - Whether the gigantic worm has eaten the sphinx or blown up by the ruby
/        0x00 - Sphinx is still alive
/        0x01 - Sphinx has been eaten by the gigantic worm or blown up by the ruby
/ 0x20 - How many turns without water the player has had in the desert
/        Player will be told they are very thirsty at turn 20 (0x14)
/        Player will be told they are very thirsty and will die at turn 27 (0x1b)
/        Player will be killed at turn 30 (0x1e)
/ 0x21 - Whether the giant pile of rocks has been pushed off the mountainside and 
/        abominable snowman has chased off the orcs (snowman required to push rocks) or
/        has been killed by the ruby exploding
/        0x00 - orcs still at the tower
/        0x01 - orcs have fled or been killed by the ruby
/ 0x22 - Second entered word by the player (dictionary id) or set by the code here
/ 0x23 - Number of turns that the player has been with the dark fearsome shape
/ 0x24 - Status of the octopus
/        0x00 - not yet encountered
/        0x01 - grabbed the wind-bag and whizzed off
/ 0x25 - Status of the orc archer
/        0x00 - still on the ledge and can fire arrows
/        0x01 - scared off
/ 0x26 - Number of turns until the orcs catch the player
/        0x00 - Not being chased 
/               (but if decremented to this then the player is caught)
/        0x02 - Set to this when crossing the bridge and the alarm is raised
/        0x05 - Set to this every time the player reaches the long barrow (0xa5)
/ 0x27 - Whether the earth-stone has been snatched by an orc and 
/        the orcs are celebrating in the feast hall
/        0x00 - has not yet been snatched
/        0x01 - snatched and they are celebrating
/ 0x28 - Number of turns until the player dies when either:
/        1. Gripped by the skeletal hand in the marsh (will be 3 turns)
/        2. Surrounded by cold shawdowy ghosts (will be 3 turns)
/        3. Gaze locked when looking at the reflected face (will be 3 turns)
/ 0x29 - Indicates if the player has waved the medallion of Agaliarept
/        0x00 - Medallion not waved in front of Agaliarept
/        0x01 - Medallion has been waved in front of Agaliarept
/ 0x2a - Indicates if the player has dropped the egg into the nest and reborn the Phoenix
/        0x00 - phoenix not reborn
/        0x01 - phoenix reborn
/ 0x2b - once the game is completed, the bonus for completing the game to add to the score
/        0x00  - player has not completed the game
/        0x3e8 - player has completed the game (1,000 points)
/ 0x2c - Score
/ 0x2d - matched input word code 1
/ 0x2e - matched input word code 3
/ 0x2f - matched input word count 
/ 0x30 - number of turns/commands entered by the player
/ 0x31 - flames counter used when in locations 0x82 to 0x78 around the crater
/        Every turn it decrements and it can be 0x02, 0x01 or 0x00
/        It is used to add to the location (0x83) and see if the first 
/        flame hits the player (it will if that location mathches the player's location)
/        It is then used to add again to the first flame's location to see if the second
/        flame hits the player (it will if that location mathches the player's location)
/ 0x32 - The highest location id the player has reached so far 
/        Maxes out at "on a wide ramp up the side of the Black Tower" (0xe1) as "in Purgatory" (0xe2) 
/ 0x33 - Status of the robed wizard
/        0x00 - has not given the player the scroll
/        0x01 - has given the player the scroll
/ 0x34 - Status of the priestess 
/        0x00 - has not greeted the player
/        0x01 - has greeted the player
/ 0x35 - Location message - used to set the first supplemental message
/ 0x36 - Indicates if the unicorn has received the rare orchid or blown up by the ruby
/        0x00 - player has not yet given the orchid to the unicorn
/        0x01 - player has given the orchid to the unicorn or has been killed
/ 0x37 - Indicates if the snakes have been danced away by the pipes or blown up by the ruby
/        0x00 - Player has not played the pipes to get rid of the snakes
/        0x01 - Player has player the pipes to get rid of the snakes or has been killed
/ 0x38 - Indicates if the player has opened the bag to blow the Djinn to the lamp
/        0x00 - Player has not opened the bag to blow away the Djinn
/        0x01 - Player has opened the bag to blow away the Djinn
/ 0x39 - Indicates whether the player has said "open sesame" in front of the stone slab
/        0x00 - Player has not said it in front of the stone slab
/        0x01 - Player has said it in front of the stone slab
/ 0x3a - Indicates whether the player has swung the sling at the giant or blown up by the rubt
/        0x00 - Player has not swung the sling at the giant
/        0x01 - Player has swung the sling at the giant or has been killed
/ 0x3b - Indicates whether the player has tied the rope to the stalagmite
/        0x00 - Player has not tied the rope to the stalagmite
/        0x01 - Player has tied the rope to the stalagmite
/ 0x3c - Status of oil on the door at the "...north shore of the crater lake" (0x66)
/        0x00 - unoiled and rusty
/        0x01 - oiled
/ 0x3d - Status of the door at the "...north shore of the crater lake" (0x66)
/        0x00 - locked
/        0x01 - oiled and unlocked
/ 0x3e - Status of the orcs chsing the player
/        0x00 - not yet ran past and still pursuing
/        0x01 - have ran past and no longer pursuing the player
/ 0x3f - Status of the rope bridge 
/        0x00 - Still in place across the chasm
/        0x01 - Severed 
/ 0x40 - Status of the dragon 
/        0x00 - still has fire
/        0x01 - fire has been extinguished by the bottle of water
/ 0x41 - Status of the BALROG
/        0x00 - Astride the bridge
/        0x01 - Plummeted into the chasm
/ 0x42 - Indicates whether the player has thrown the ruby at the fearsome dark shape
/        0x00 - Ruby not thrown at fearsome dark shape
/        0x01 - Ruby thrown at fearsome dark shape
/ 0x43 - Indicates whether the player has attacked the "sheet of living flame"
/        with the sword
/        0x00 - Sheet of living flame has not been attacked with the sword
/        0x01 - Sheet of living flame has been attacked with the sword
/ 0x44 - Door of Rock status:
/        0x00 - earth-stone not inserted and door closed
/        0x01 - earth-stone inserted and door open
/ 0x45 - Door of Gold status:
/        0x00 - sun-stone not inserted and door closed
/        0x01 - sun-stone inserted and door open
/ 0x46 - Door of Silver status:
/        0x00 - star-stone not inserted and door closed
/        0x01 - star-stone inserted and door open
/ 0x47 - gets set to 0x0a when the player is in any desert location
/        but it's never used
/ 0x48 - Holds the exit flags when checking to see if the player can move 
/        from a location in a specific direction
/ 0x49 - Number of items in the player's inventory
/ 0x4a - Status of the cold shadowy ghosts at the circle of thirteen standing stones
/        0x00 - haven't appeared you or not banished 
/        0x01 - banished by the player throwing the brazier 
/ 0x4b - Has the vampire fled yet because of the garlic?
/        0x00 - not fled from game
/        0x01 - fled from game
/ 0x4c - Has the player eaten onion (garlic) to protect them from the vampire
/        0x00 - not eaten 
/        0x01 - eaten
/ 0x4d - Status of the door into the "ancient house" on the "island" (0xbf)
/        This status is set but it's not used or checked when a player goes "in"
/        which is shame as it's a beautiful message
/        0x00 - closed
/        0x01 - open
/ 0x4e - Door of Glass status:
/        0x00 - mist-stone not inserted and door closed
/        0x01 - mist-stone inserted and door open
/ 0x4f - Number of times the player has died
/ 0x50 - Whether the Djinn has previously warned the player 
/        0x00 - player has NOT tried to move past the djinn
/        0x01 - player HAS tried to move past the djinn and been warned
/ 0x51 - Additional object message to print, either "full of oil" or 
/        "full of water" or " " and empty for everything else
/ 
/ Notes and observations
/ ======================
/ 
/ 1.  The variable that holds the second word is out of sequence 
/     from the others i.e. 0x2d, 0x22, 0x2e, 0x2f. Snowball, Colossal and Lords 
/     of Time all have them in order (easier to debug)
/ 2.  When the player encounters the "Will O'Wisp", they cannot interact with it 
/     in anyway - always says "you can't get near it"
/ 3.  Will O'Wisp is misspelt in the dictionary as "whisp" and "o'whisp"
/ 4.  There is a different set of descriptions for objects when they are 
/     in the player's current location (0x105 to 0x125 ) than when in the player's 
/     inventory (0xdd to 0xfd)
/ 5.  There is a 11/256 chance of the shark attacking the player any given turn 
/     (approximately 4.2% chance)
/ 6.  Description 0x5f should be "You cannot breathe" not "...breath"
/ 7.  Description 0x5f should be "You cannot breathe" not "...breath"
/ 8.  Entering the octopus lair - there is a missing space here: "You are underwaterA huge
/     octopus leaps out and bites at your treasure"
/ 9.  Player will have an arrow fired at them when "in the centre of a magnificent cave" (0x68)
/     or "at the north of a magnificent cave with holes all around" (0x6d)
/ 10. Arrow has a 41/255 chance of hitting the player (approximately 16%)
/ 11. Visting the "ledge clinging to the west wall of a huge cavern" (0x74)
/     scares off the archer and no longer are arrows fired into the magnificant cavern
/     locations 0x68 and 0x6d
/ 12. Having the wind-bag when entering the octopus lair, gets rid of the octopus
/ 13. There is a 50/255 chance of the sheet of living flame attacking the player 
/     if they are not wearing the cloak (approximately 20% chance)
/ 14. There is a 50/255 chance of the BALROG striking out at the player 
/     (approximately 20% chance)
/ 15. If the BALROG has struck out there is an approximately 61/255 chance
/     of the player being killed (approximately 24%)
/ 16. If the player reaches "on a ledge which clings to the west wall of a
/     large cavern" (0x75) AFTER fighting off the spider, losing the earth-stone
/     and the orc snatching it, the orcs wil kill the player here. The orcs are 
/     celebrating in the feast hall which is why the player is not attacked here
/     any more.
/ 17. The following score categories exist:
/         0 - 1,399 - A puny effort!
/     1,400 - 1,799 - Not bad.. for a beginner
/     1,800 - 3,999 - You are hereby admitted to the ranks of Adventuredom as an "Adventurer"
/     4,000 - 5,999 - You are clearly a Master Adventurer!
/     6,000+        - All Middle-Earth hails thee: "Grandmaster Adventurer!". Congratulations, 
/                     you are one of the elite who have cracked this game. 
/ 18. A player can be killed by: 
/     1. Being hit by a flame when walking around the crater
/     2. Being attacked by a shark when underwater
/     3. Being hit with the whip of flames by the BALROG
/     4. Being attacked by the pack of wolves
/     5. Inserting the wrong stone into the wrong Door of <type>
/     6. Being eaten by the gigantic worm
/     7. Being held and attacked by the skeletal hand
/     8. Unable to breathe underwater
/     9. Being attacked by the cloak of living flames
/     10.Being hit by a random arrow by the orc above "the centre of a magnificent cave" 
/     11.Being attacked by the sheet of living flame
/     12.Entering the feast hole when the orcs are celebrating after stealing the earth-stone
/     13.Being thirsty in the desert for 30 turns
/     14.Being chased by the orcs and them eventually reaching the player
/     15.Being attacked by the fearsome dark shape
/     16.Being swept over the rapids and held under for a long time (without the lung-fish)
/     17.Being attacked by the huge octopus in the octopus lair when the player does not have the windbag
/     18.Being trapped for too many turns in the marsh when the gaze is locked by the reflected face
/     19.Being surrounced by the cold shadowy ghosts  
/     20.Too many turns on the bleak moor without heat (die of exposure)
/     21.Walking on the quicksand without the water walking boots
/     22.Trying to move past the giant on the track up the mountain
/     23.Being attacked by the vampire if the player has NOT eaten the garlic
/     24.Being bitten by the spider in the spider's lair if the player does not have the sword`
/     25.Dropping the ruby rather than throwing the ruby
/ 19. The BALROG only appears if the player has the sun-stone in their inventory
/     (not sure the reasoning!)
/ 20. "Altar" is spelt "alter" in location 0x92
/ 21. If the player attacks the sheet of living flame with the sword in Hell-well
/     the message "The flame vanishes into the sword! A hundred voices seem to 
/     shout in disappointment from the walls of Hell Well" is printed. Have not seen 
/     that any solutions to this game.
/ 22. BUG - the wrong door status variable is checked for the door of glass 
/     being open/closed and hence it will never print "The door is locked" for this 
/     door (it does for all others). See 0x057f
/ 23. Player has a 21/256 chance of having the skeletal hand grab them (approximately 8%)
/     in the marsh each turn
/ 24. Wolves will only appear in locations 0x01 to 0x10 (forest plus valley/gulley)
/ 25. Skeletal hand will only appear in locations 0xb0 to 0xc0 (marsh and island)
/ 26. Player has a 6/256 chance of having the pack of wolves emerge 
/     (approximately 2%) in the forest/valley/gulley locations
/ 27. var[0x47] is set at the desert locations to 0x0a but it's never used for anything
/ 28. Player has a 11/256 chance of having the shark appear when in the lake bed/quiet pool
/     (approximately 4%)
/ 29. When the player gives the emerald eye to the statue, there's a spelling mistake in the
/     response: "The status nods in thanks and gives you its rune-encrusted sword". Should be 
/     statue.
/ 30. If the player drops the stick "drop stick" in one of the following locations this
/     rather poetic message is printed: "The stick grows incredibly as it hits the ground. 
/     Buds form, leaves burst from them and drink in the light, and then the stick is a 
/     mass of flowers! Fruit quickly swells and falls onto the ground and the leaves are 
/     shed. It is just a stick again"
/     0x4c : on a ledge. It collapses, hurling you into a fast-flowing underground river! You are swept along helplessly
/     0x4d : in a raging torrent
/     0x4e  : buffeted by the swift current
/     0x4f  : swept round a bend in the river
/     0x50  : in a series of rapids
/     0x51  : on the brink of a stretch of rapids
/     0x52  : tossed around by the rapids
/ 31. Any object dropped in the above locations will wash up on the " small gravel beach to the 
/     south of a lake in a volcanic crater." (0x62)
/ 32. If an object is dropped in location "at the west end of an underwater trench. 
/     A swift current flows away through a small gap in the rocks" (0x5e) it will be
/     sucked down a hole and end up in "deadly quicksand" (0xbe)
/ 33. If the player drops any object in the rapids (0x4c to 0x52) and the fruit
/     is also in their inventory, it will be swept up onto the beach
/ 34. Whenever the "trident" (0x52) is dropped "Water bubbles from the ground" 
/ 35. The dragon will eat any object dropped in front of it when it is filling the cave
/ 36. There is a great description for the "out of game" location 0xe2 "in Purgatory. You will 
/     have to stay here for a century or two.. if you're lucky!". It's also underwater!
/ 37. Typo on the location description for location id (0x96) "iQ a very hot passage".
/ 38. Dropping the brazier always says "The brazier expands, giving out a welcome warmth"
/ 39. If the player is locked in the marsh with "A reflected face in the marsh looks back. 
/     Your gaze is locked!", dropping anything frees them (sets ripples in the water)
/ 40. Player has a 11/256 chance of being attacked by the wolves each turn after they have appeared
/ 41. When in the desert, the gigantic worm gets closer to the player whenever they move
/     location.  It gets further away if the player does anything else e.g. drop <object> or 
/     inventory or look
/ 42. If the player tries to go North from the  "at the south of a magnificent 
/     cave with holes all around. A huge door stands open behind you" (0x66) 
/     after oiling and unlocking the door, if they have at least one weapon
/     they will be blocked with ""ARMED INTRUDER! ARMED INTRUDER! ARMED INTRUDER!
/     ARMED INTRUDER! ARMED INTRUDER! ARMED INTRUDER!" yells a gargoyle overhead. 
/     The door slams"
/ 43. Orcs will start chasing the player if they cross the rope bridge whilst
/     carrying the earth-stone. This is in either direction between 
/     " on a ledge which clings to the west wall of a large cavern" (0x75) and "You are 
/     at the entrance to an orc lair" (0x77)
/ 44. The orcs will start chasing the player when they reach "on a hill-top outside a long barrow" (0xa5)
/ 45. The black dots indicate that in that direction the player will be teleported to another location
/ 46. The white dots indicate the place a player can be teleported to 
/ 47. The following teleporation location pairs exist:
/
/     Direction:   East
/     From: (0x65) south of a huge door on the north shore of the crater lake. A host 
/                  of carved stone heads glare at you from above the door, seeming
/                  to follow your every move. To the east is a second, smaller entrance, marked with a black dot
/     To:   (0x12) in the building. Steps lead down a well in the centre of the floor.
/                  A white dot is marked over the door
/
/     Direction:   North
/     From: (0x8f) in a hot room. The north door is marked with a black dot
/     To:   (0x20) on trackless desert beside a black pillar. The pillar is round, and perfectly
/                  smooth but for a single white dot half-way up
/
/     Direction:   In
/     From: (0xa5) on a hill-top outside a long barrow. The lintel 
/                  over the door of the barrow is marked with a black dot. The hill is surrounded on three sides 
/                  by sheer cliffs and from the other orcs are closing in
/     To:   (0x40) in a smelly cave: the sound of running water reverberates from the walls. 
/                  A white dot is marked 
/
/     Direction:   North
/     From: (0xc3) on a small ledge south of a small door marked with a black dot. There is a window in the wall above
/     To:   (0x61) inside an octopus lair. The water is warm and there is a white dot on the wall
/ 48. There's a bug when you try and wear/get/take/catch an NPC even if the NPC is in the same location 
/     e.g. "get wolves" will always print "You can't do thatIt's not on the ground"
/     the second half should not be printed and line 0x0e97 should probably be "Goto 0x0ec3" instead of "Goto 0x0ec1" 
/ 49. The insulating cloak cannot be picked up again after it has been laid over the hot coals (0x8e)
/     as the coals are too hot
/ 50. Feel this is bug. If the cloak is dropped in any of the following locations, the player is no longer
/     able to pick it up and will be shown the message "It's not on the ground" if they try
/     All these locations are "hot" apart from 0x90 where it says it doesn't give off heat, but for all others
/     shouldn't it say "You must be joking! Those coals are red-hot!"
/     0x8f : in a hot room. The north door is marked with a black dot
/     0x90 : in an ornate room decorated with symbols of infinity. A nest burns on a marble plinth in the centre of the room: yet it is not consumed, and neither does it give off any smoke or heat
/     0x91 : in a hot east-west corridor. To the east is a bed of glowing coals
/     0x96 : iQ a very hot passage. The floor is covered by hot coals to the west
/ 51. Player will die if they "drop" instead of "throw" the ruby
/ 52. Throwing and dropping the ruby can kill:
/     1. The unicorn in the woodland
/     2. The sphinx at the pyramid
/     3. The snakes outside the small temple
/     4. The giant up the mountain
/     5. The orcs near the snowfield / smelly cave
/     6. The fearsome shape up the spiral staircase
/     7. The abominable snowman if in the inventory or same location
/ 53. Throwing anything at the wolves scares them off
/ 54. There is no crowbar in the game however if the player tries to "unlock snowman" 
/     or "open snowman" to free the abominable snowman, the error messages says
/     "You have no keys (or crowbar)"
/ 55. Bug? The door into the "ancient house" on the "island" (0xbf) can be opened
/     and a satisfying message is printed "The bell rings and the door creaks open.
/     A gravelly voice croaks from the darkness: 'Enter.. The master awaits..'" however
/     it's unlikely anyone has ever seen this as the status var[0x4d] is NOT checked
/     when the player goes "in" to see if the door is in fact open
/ 56. Dropping the trident in a location allows the player to fill the bottle
/     with water as "Water bubbles from the ground" after the drop
/ 57. Weirdly, the following locations are allows to be used for filling the bottle
/     with water (yes they are in the marsh, maybe it's a damp house?):
/     0xc0 : in a ancient panelled entrance hall of a decaying house. Rats scurry behind the walls. There are doors to north and south
/     0xc1 : in the main hall. Steps lead upwards
/     0xc2 : in a high room. A window looks out onto the marsh to the south, and you catch a glimpse of a huge black tower nearby
/     0xc3 : on a small ledge south of a small door marked with a black dot. There is a window in the wall above
/     0xc4 : on a dark granite ramp at the foot of the BLACK TOWER
/ 58. Bug. The status of the water is mistakenly set to 0x03 when filled with water rather than
/     0x02 (0x0bae) - which is why a few checks check "< var[0x02]" (where var[0x02]
/     is the constant 0x02) or "> var[0x01]" (where var[0x01] is the constant 0x01)
/     Should be set to 0x02.
/ 59. If the player does not have the phoenix reborn, when they are frozen in 
/     front of the demon lord, the orcs will arrive in 10 turns
/ 60. Part of the player's score is made up of the highest location id they have reached
/     The highest they can reach is "on a wide ramp up the side of the Black Tower" (0xe1)
/     Which is reached before most of the end game locations 
/ 61. Player's score is calculated as:
/     1. Maximum location id reached x 8 (maxes at 225 x 8 = 1,800)
/     2. Score for staying alive (max 1,000)
/     3. Add another 900 if player has reached in the Black Tower destinations
/     "...Door of Rock..." (0xc9) to "...standing by the Bane-fire..." (0xe0)
/     4. Add 500 per <type>-stone that the player has either used on a Door of <type>
/     or is in the player's inventory.  Maximum 4 x 500 = 2000 points
/     5. Subtract the number of commands/turns entered by the player
/     6. Add 1,000 if the player completed the game and killed/banished The Demon Lord
/
/     Maximum score without subtracting the commands/turns is 6,700 
/ 
/     One published solution in the test script uses 512 turns
/
/     So maximum score is 6,188
/ 62. Despite the message in the well "Congratulations on bringing 
/     light to the dark well! Give yourself a 1000 point bonus for being lucky!"
/     which is readable when the player has the jelly-fish, 1000 points 
/     are NOT added to the player's score.
/ 63. There is a mysterious object! There is a "compass" (0x3d) without 
/     a location description i.e. when it's on the ground so you cannot
/     see it.  However if the player types "get compass" in "You are at 
/     the top of a stone pinnacle high above the forest....." (0x19) it
/     will appear in the player's inventory as "a crystal compass 
/     enscribed 'this game Copyright (C) 1983 Level 9 Computing'. 
/     Unauthorised copying or loan is prohibited."
/ 64. Every object has two descriptions - one for the inventory and one for/
/     when it's in a location e.g.
/     Location  - An ancient medallion lies on the ground (0x109)
/     Inventory - The Medallion of Good (0xe1)
/ 65. The lung-fish token is interesting - it flips whether the player can breathe in
/     air or water each time it is picked up. What even is a "lung-fish token"?
/        
/     
/ 
/ 
/ Descriptions 
/ ============
/
/ 0xdd  to  0xfd  - object descriptions for when in the current location
/ 0xfe  to  0x104 - unused
/ 0x105  to 0x123 - object descriptions for when in the player's inventory

**************************************************************************
* A-code entry point
**************************************************************************

/ Call the initialisation routine
0x0000 (0x0820): (0x00) Goto 0x0006

**************************************************************************
* NEVER USED
**************************************************************************

/ NOTE This is never executed

/ Seems to be an A code entry point to skip initialisation but it's never called
/ Probably some test harness thing back with their original tools that allowed
/ state to be loaded first and jump into the game processing
0x0003 (0x0823): (0x00) Goto 0x0046

**************************************************************************
* New game initialisation (including after a player dies)
**************************************************************************

/ Reset all the variables to 0x00 - engine underneath on the BBC Micro
/ assumes a maximum of $6E / 110 variables
0x0006 (0x0826): (0x06) Function - Clear Workspace (0x05)

/ Initialise to the constant 0x01
0x0008 (0x0828): (0x08) Set var[0x01] = (constant) 0x01

/ Initialise to the constant 0x02
0x000b (0x082b): (0x08) Set var[0x02] = (constant) 0x02

/ Initialise to the constant 0x03
0x000e (0x082e): (0x08) Set var[0x03] = (constant) 0x03

/ Initialise to the constant 0x04
0x0011 (0x0831): (0x08) Set var[0x04] = (constant) 0x04

/ Initialise to the constant 0x05
0x0014 (0x0834): (0x08) Set var[0x05] = (constant) 0x05

/ Initialise to the constant 0x06
0x0017 (0x0837): (0x08) Set var[0x06] = (constant) 0x06

/ Initialise to the constant 0xff (the inventory location)
0x001a (0x083a): (0x08) Set var[0x07] = (constant) 0xff

/ Initialise to the constant 0xe2 (the out of game location)
0x001d (0x083d): (0x08) Set var[0x08] = (constant) 0xe2

/ Initialise the status of the snowman to "chained to mountain" (0x01)
/ var[0x01] is the constant 0x01
0x0020 (0x0840): (0x09) Set var[0x09] = var[0x01]

/ Initialise the status of the bottle to "full of water (0x02)
/ var[0x02] is the constant 0x02
0x0023 (0x0843): (0x09) Set var[0x0a] = var[0x02]

/ Set the starting location for the player to "You are at the end of a 
/ road from the north, outside a small brick building." (0x07)
0x0026 (0x0846): (0x08) Set var[0x0b] = (constant) 0x07

/ Initiliase an unused variable to 0x01
/ vat[0x01] is the constant 0x01
0x0029 (0x0849): (0x09) Set var[0x0c] = var[0x01]

/ Initialise the number of movement turns that the 
/ gigantic worm is away from the player 
0x002c (0x084c): (0x09) Set var[0x0d] = var[0x06]

/ Initialise the number of points that the player will score for 
/ completing the game without dying to 1,000 (0x3e8) - this gets
/ deducted by 300 everytime the player dies
0x002f (0x084f): (0x08) Set var[0x0e] = (constant) 0x3e8

/ Initialise the number of turns until the player will die of 
/ cold exposure to 10 (0x0a)
0x0033 (0x0853): (0x08) Set var[0x0f] = (constant) 0x0a

/ Intialise the index to the first object id (0x33)
0x0036 (0x0856): (0x08) Set var[0x10] = (constant) 0x33

/ Get the starting location of the object
0x0039 (0x0859): (0xa1) Set var[0x11] = list#1[var[0x10]] (list address 0x029d)

/ Set the current location of the object to starting location
0x003c (0x085c): (0xe2) Set list#2[var[0x10]] = var[0x11] (list address 0x0820)

/ Move to the next object id
0x003f (0x085f): (0x0a) Set var[0x10] += var[0x01]

/ Loop around until all 33 objects are initialised 
0x0042 (0x0862): (0x1a) If var[0x10] < (constant) 0x54 then Goto 0x0039

/ Print the welcome message "Welcome to Adventure Quest from Level 9. Enter 
/ English phrases (without punctuation) to play, find and defeat the Demon
/ Lord AGALIAREPT to win."
0x0046 (0x0866): (0x04) Print message var[0x01]

/ Set the first and second supplementary messages
0x0048 (0x0868): (0x01) Gosub 0x0390

/ Set the first and second supplementary messages
0x004b (0x086b): (0x01) Gosub 0x0390

0x004e (0x086e): (0x10) If var[0x12] == var[0x01] then Goto 0x0073

/ Set the temporary object id to the location of the luminous jelly-fish (0x43)
0x0052 (0x0872): (0xc2) Set var[0x13] = list#2[0x43]

/ Branch if the location of the luminous jelly-fish IS the same 
/ as the player's location (they can see in the dark)
0x0055 (0x0875): (0x10) If var[0x13] == var[0x0b] then Goto 0x0073

/ Branch if the location of the luminous jelly-fish IS in the 
/ player's inventory (0xff) (they can see in the dark) 
/ var[0x07] is the constant 0xff
0x0059 (0x0879): (0x10) If var[0x13] == var[0x07] then Goto 0x0073

/ Set the temporary object id to the location of the lamp (0x44)
0x005d (0x087d): (0xc2) Set var[0x13] = list#2[0x44]

/ Branch if the lamp is unlit (0x00) and print it's dark
/ var[0x15] is the constant 0x00
0x0060 (0x0880): (0x10) If var[0x14] == var[0x15] then Goto 0x006c

/ Lamp is lit

/ Branch if the lamp IS in the player's inventory (0xff) and describe
/ the location
/ var[0x07] is the constant 0xff
0x0064 (0x0884): (0x10) If var[0x13] == var[0x07] then Goto 0x0073

/ Branch if the lamp IS in the same location as the player and
/ describe the location
0x0068 (0x0888): (0x10) If var[0x13] == var[0x0b] then Goto 0x0073

/ Set the location light indicator to dark (0x00)
/ var[0x15] is the constant 0x00
0x006c (0x088c): (0x09) Set var[0x16] = var[0x15]

/ Print message  "\nIt is dark, you cannot see "
0x006f (0x088f): (0x05) Print message (constant) 0x31

/ Perform the location checks (don't print the description)
0x0071 (0x0891): (0x00) Goto 0x0098

**************************************************************************
* Print the location description
**************************************************************************

/ Location descriptions begin at 0x12c - the player's current location id 
/ need to be added to this number to get the location description

/ Set the temporary variable to 0x12c
0x0073 (0x0893): (0x08) Set var[0x13] = (constant) 0x12c

/ Add on the player's current location id
0x0077 (0x0897): (0x0a) Set var[0x13] += var[0x0b]

/ Print message  "\nYou are "
0x007a (0x089a): (0x05) Print message (constant) 0x34

/ Print the location description message
0x007c (0x089c): (0x04) Print message var[0x13]

/ Print message  ".\n "
0x007e (0x089e): (0x05) Print message (constant) 0x41

/ Set the location light indicator to light (0x01)
/ var[0x01] is the constant 0x01
0x0080 (0x08a0): (0x09) Set var[0x16] = var[0x01]

/ Set the description offset for the objects to the ones
/ for when in the current location (0xd2)
0x0083 (0x08a3): (0x08) Set var[0x17] = (constant) 0xd2

/ Set the location to check to the player's current location
0x0086 (0x08a6): (0x09) Set var[0x18] = var[0x0b]

/ Print all the objects in the current location
0x0089 (0x08a9): (0x01) Gosub 0x0edc

/ Branch if the first supplementary message is not set (0x00)
/ var[0x15] is the constant 0x00
0x008c (0x08ac): (0x10) If var[0x19] == var[0x15] then Goto 0x0092

/ First supplementary message is set

/ Print the first supplementary message
0x0090 (0x08b0): (0x04) Print message var[0x19]

/ Branch if the second supplementary message is not set (0x00)
/ var[0x15] is the constant 0x00
0x0092 (0x08b2): (0x10) If var[0x1a] == var[0x15] then Goto 0x0098

/ Second supplementary message is set

/ Print the second supplementary message
0x0096 (0x08b6): (0x04) Print message var[0x1a]

/ Jump to the location checks
0x0098 (0x08b8): (0x00) Goto 0x00a2

**************************************************************************
* Perform location checks
**************************************************************************

/ Branch if the player is NOT in any of the following locations:
/ 0x4c : on a ledge. It collapses, hurling you into a fast-flowing underground river! You are swept along helplessly
/ 0x4d : in a raging torrent
/ 0x4e : buffeted by the swift current
/ 0x4f : swept round a bend in the river
/ 0x50 : in a series of rapids
/ 0x51 : on the brink of a stretch of rapids
/ 0x52 : tossed around by the rapids
0x009a (0x08ba): (0x1a) If var[0x0b] < (constant) 0x4c then Goto 0x00a2

/ Branch if the player IS in any of the following locations:
/ 0x4c : on a ledge. It collapses, hurling you into a fast-flowing underground river! You are swept along helplessly
/ 0x4d : in a raging torrent
/ 0x4e : buffeted by the swift current
/ 0x4f : swept round a bend in the river
/ 0x50 : in a series of rapids
/ 0x51 : on the brink of a stretch of rapids
/ 0x52 : tossed around by the rapids
/ and print the location description
0x009e (0x08be): (0x1a) If var[0x0b] < (constant) 0x53 then Goto 0x004b

/ Player is NOT in the rapids 

/ Set the first location supplementary message
0x00a2 (0x08c2): (0x01) Gosub 0x0390

/ Set the destination location to the player's current location
0x00a5 (0x08c5): (0x09) Set var[0x18] = var[0x0b]

/ Set the flag 
0x00a8 (0x08c8): (0x09) Set var[0x1b] = var[0x01]

**************************************************************************
* Process if the player whether the player can breathe
**************************************************************************

/ Branch if the player is NOT underwater (0x00)
/ var[0x15] is the constant 0x00
0x00ab (0x08cb): (0x10) If var[0x1c] == var[0x15] then Goto 0x00b1

/ Player IS underwater

/ Print message  "\nYou are underwater "
0x00af (0x08cf): (0x05) Print message (constant) 0x32

/ Branch if one of the following conditions is met:
/ 1. The player is NOT underwater and they CAN breathe in air
/ 2. The player IS underwater and they CAN breathe in water
/
/ The lung-fish token changes where a player can breathe - whenever
/ the player picks it up where they can breathe changes
/ 
/ var[0x1c] is if the player can breathe in air (0x00) or water (0x01)
/ var[0x1d] is if the player is underwater (0x01) or not (0x00)
0x00b1 (0x08d1): (0x10) If var[0x1c] == var[0x1d] then Goto 0x00c1

/ Player cannot breathe

/ Print message  "\nYou cannot breath! "
0x00b5 (0x08d5): (0x05) Print message (constant) 0x5f

/ Increment the number of turns that the player has been unable to breathe
/ var[0x01] is the constant 0x01
0x00b7 (0x08d7): (0x0a) Set var[0x1e] += var[0x01]

/ Branch if the player has been unable to breathe for more than 5 turns
/ and kill the player
/ var[0x05] is the constant 0x05
0x00ba (0x08da): (0x13) If var[0x1e] > var[0x05] then Goto 0x0d64

/ Skip ahead (don't reset the number of turns to zero)
0x00bf (0x08df): (0x00) Goto 0x00c4

/ Reset the number of turns to zero (player can breathe)
/ var[0x15] is the constant 0x00
0x00c1 (0x08e1): (0x09) Set var[0x1e] = var[0x15]

**************************************************************************
* Process the movement of the giant worm
**************************************************************************

/ Add 1 to the number of movement turns away the gigantic worm is from 
/ the player. Every movement turn this gets decremented by 2. All others
/ there is no decrement e.g. inventory or look
0x00c4 (0x08e4): (0x0a) Set var[0x0d] += var[0x01]

/ If the worm is more than four turns away do not print a message
0x00c7 (0x08e7): (0x13) If var[0x0d] > var[0x04] then Goto 0x0104

/ Gigantic worm is getting close (4 or less turns away)

/ Set the temporary variable to the base message id for the worm
0x00cb (0x08eb): (0x08) Set var[0x13] = (constant) 0x46

/ Add the distance / number of turns away that the worm is to the 
/ base message id
0x00ce (0x08ee): (0x0a) Set var[0x13] += var[0x0d]

/ Print one of the following messages as the worm gets nearer:
/ 0x47 : A gigantic worm rises from the sand, swallowing all in its path!
/ 0x48 : A rushing noise is nearly upon you!
/ 0x49 : Sand is sliding nearby
/ 0x4a : You can hear sand sliding softly in the distance
0x00d1 (0x08f1): (0x04) Print message var[0x13]

/ Branch if the gigantic worm is still more than a turn away, 
0x00d3 (0x08f3): (0x13) If var[0x0d] > var[0x01] then Goto 0x0104

/ Set the target location to "on trackless desert south of a canyon. 
/ A large flat-topped pyramid... "
0x00d7 (0x08f7): (0x08) Set var[0x18] = (constant) 0x23

/ Branch if the player is in a desert location that is beyond 
/ the pyramid (other desert location)
0x00da (0x08fa): (0x1b) If var[0x0b] > (constant) 0x23 then Goto 0x00e1

/ Set the target destination to the player's current location
0x00de (0x08fe): (0x09) Set var[0x18] = var[0x0b]

/ Set the temporary variable to the first object's id, the earth-stone (0x33)
0x00e1 (0x0901): (0x08) Set var[0x10] = (constant) 0x33

/ Get the current location of the current object
0x00e4 (0x0904): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the current location is NOT in the same location as the player
0x00e7 (0x0907): (0x11) If var[0x11] != var[0x18] then Goto 0x00ee

/ Object IS in the same location as the player

/ Set the object's location to "out of game" (0xe2)
/ var[0x08] is the constant 0xe2
0x00eb (0x090b): (0xe2) Set list#2[var[0x10]] = var[0x08] (list address 0x0820)

/ Move to the next object id
0x00ee (0x090e): (0x0a) Set var[0x10] += var[0x01]

/ Loop back around until all objects have had their location checked
0x00f1 (0x0911): (0x1a) If var[0x10] < (constant) 0x54 then Goto 0x00e4

/ Reset the number of movement turns until the gigantic worm
/ catches the player to 7
0x00f5 (0x0915): (0x08) Set var[0x0d] = (constant) 0x07

/ Branch if the player is NOT "on trackless desert south of a canyon. 
/ A large flat-topped pyramid with steps on all sides rises from the 
/ desert, and to the east an outcrop ofpolished rock resists the 
/ shifting sands" (0x23) - this is the location of the sphinx that is guarding
/ the pyramid
0x00f8 (0x0918): (0x19) If var[0x18] != (constant) 0x23 then Goto 0x00ff

/ Player is at the pyramid and sphinx is there

/ Set the flag the indicates the gigantic worm has eaten the sphinx (0x01)
/ var[0x01] is the constant 0x01
0x00fc (0x091c): (0x09) Set var[0x1f] = var[0x01]

/ If the player is not in location 0x23 then the target destination and 
/ player's current location will be the same and kill the player
0x00ff (0x091f): (0x10) If var[0x18] == var[0x0b] then Goto 0x0d64

**************************************************************************
* Process if the player is outside the desert and reset the worm counter 
**************************************************************************

/ If the player is outside of the desert, the countdown counter for the 
/ worm should be reset to 0x07

/ Branch if the player is in a foresty location where the wolves would 
/ appear which is locations 0x01 to 0x19
0x0104 (0x0924): (0x1a) If var[0x0b] < (constant) 0x1a then Goto 0x010c

/ Branch if the player IS in a desert location
0x0108 (0x0928): (0x1a) If var[0x0b] < (constant) 0x27 then Goto 0x010f

/ Player is NOT in the desert

/ Reset the gigantic worm counter to the default 0x07
0x010c (0x092c): (0x08) Set var[0x0d] = (constant) 0x07

**************************************************************************
* Check to see if the player is attacked by wolves 
**************************************************************************

/ Branch if the first supplementary message is NOT "A pack of wolves
/ is stalking you" (0x11) as there are no wolves to attack the player
0x010f (0x092f): (0x1e9) If var[0x1a] != (constant) 0x11 then Goto 0x011f

/ A pack of wolves IS stalking the player

/ Set the temporary variable to a random number
0x0113 (0x0933): (0x06) Function - Random - Set var[0x13]=<random number>

/ Branch If the random number is greater than 10 (0x0a) (the wolves won't 
/ attack).  
0x0116 (0x0936): (0x1b) If var[0x13] > (constant) 0x0a then Goto 0x011f

/ Print message  "\nThe wolves attack.. "
0x011a (0x093a): (0x05) Print message (constant) 0x12

/ Kill the player
0x011c (0x093c): (0x00) Goto 0x0d64

**************************************************************************
* Check to see if the player is thirsty if they are in desert locations
**************************************************************************

/ Branch if the player is NOT in one of the following location:
/ 0x1a : on trackless desert
/ 0x1b : on trackless desert
/ 0x1c : on trackless desert
/ 0x1d : on trackless desert
/ 0x1e : on trackless desert
/ 0x1f : on trackless desert
/ 0x20 : on trackless desert beside a black pillar. The pillar is round, and perfectly smooth but for a single white dot half-way up
/ 0x21 : on trackless desert above a deep canyon. A small oasis sits in the bottom of the canyon, nestling at the foot of the southern cliffs below
/ 0x22 : on trackless desert south of a canyon
/ 0x23 : on trackless desert south of a canyon. A large flat-topped pyramid with steps on all sides rises from the desert, and to the east an outcrop ofpolished rock resists the shifting sands
/ 0x24 : inside a small temple to the sun god on the pyramid. It is surrounded by stone pillars and has a large central altar, but is roofless of course
/ 0x25 : on top of the pyramid outside a small temple
/ 0x26 : on a rocky outcrop overlooking the desert and the pyramid. A path leads down to the north into a chasm between the outcrop and its parent mountain
/ 0x27 : at the southern edge of a vast desert, baked by the burning sun. Great lines of dunes seem to march north
/ 0x28 : beside giant rocks which block the valley
/ 0x29 : in a dry east-west canyon with sheer rocky walls
/ 0x2a : in a dry canyon. Cliffs tower overhead and you can see an oasis to the south
/ 0x2b : on the side of a mountain rising from the desert
/ 0x2c : in a sheltered wadi. Oil seeps from the rocks
/ 0x2d : where the wadi ends at a mountain. You could climb up
/ 0x2e : at the north edge of an oasis
/ 0x2f : in an oasis beside a deep pool of cool water
/ 0x30 : swimming in a clear desert pool
/ 0x31 : in a looted treasure cave. It has been cleaned out completely and on one wall is written "Ali wuz here"!
/ 0x32 : in a sheltered east-west valley, protected from the burning sun by high rocky walls
0x011f (0x093f): (0x1a) If var[0x0b] < (constant) 0x1a then Goto 0x013f
0x0123 (0x0943): (0x1b) If var[0x0b] > (constant) 0x32 then Goto 0x013f

/ Increment the number of turns the player has been thirsty in the desert
0x0127 (0x0947): (0x0a) Set var[0x20] += var[0x01]

/ Branch if it's NOT the 20th turn that the player has been thirsty in the 
/ desert
0x012a (0x094a): (0x19) If var[0x20] != (constant) 0x14 then Goto 0x0130

/ It's the 20th turn that the player has been thirsty in the desert so
/ print "You are very thirsty"

/ Print message  "\nYou are very thirsty "
0x012e (0x094e): (0x05) Print message (constant) 0x4d

/ Branch if it's NOT the 27th turn that the player has been thirsty in the 
/ desert
0x0130 (0x0950): (0x19) If var[0x20] != (constant) 0x1b then Goto 0x0136

/ It's the 20th turn that the player has been thirsty in the desert so
/ print a harsher warning
 
/ Print message  "\nYou are very thirsty and will die without water "
0x0134 (0x0954): (0x05) Print message (constant) 0x4e

/ Branch if it's NOT the 30th turn that the player has been thirsty in the 
/ desert
0x0136 (0x0956): (0x19) If var[0x20] != (constant) 0x1e then Goto 0x013f

/ It's the 30th turn that the player has been thirsty in the desert so
/ kill the player

/ Print message  "\nYou die of thirst! "
0x013a (0x095a): (0x05) Print message (constant) 0xa2

/ Kill the player
0x013c (0x095c): (0x00) Goto 0x0d64

**************************************************************************
* Check to see if the orcs attack and kill the player
**************************************************************************

/ Branch if the orcs have fled the tower after the rocks have been pushed
/ and the abominable snowman has chased them off (0x01)
/ var[0x01] is the constant 0x01
0x013f (0x095f): (0x10) If var[0x21] == var[0x01] then Goto 0x014d

/ Orcs still at the tower

/ Branch if the player is "outside the north door of the tower" (0x42)
/ and print "the orcs all upon you with cries of triumph" and kill the player
0x0143 (0x0963): (0x18) If var[0x0b] == (constant) 0x42 then Goto 0x0e24

/ Branch if the player is "outside the south door of a stone tower which 
/ stands astride the stairway" (0x41) / and print "the orcs all upon you 
/ with cries of triumph" and kill the player
0x0148 (0x0968): (0x18) If var[0x0b] == (constant) 0x41 then Goto 0x0e24

**************************************************************************
* Check to see if the player is underwater, if so and they have the ruby 
* it will vanish.  Also the abominable snowman will be silently removed 
* from the player's inventory (stops following them)
**************************************************************************

/ Branch if the player is NOT underwater (0x00)
/ var[0x15] is the constant 0x00
0x014d (0x096d): (0x10) If var[0x1c] == var[0x15] then Goto 0x016d

/ Set the second word to the "ruby" (0x40)
0x0151 (0x0971): (0x08) Set var[0x22] = (constant) 0x40

/ Get the location of the "ruby"
0x0154 (0x0974): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the "ruby" is NOT in the player's inventory (0xff)
/ var[0x07] is the constant 0xff
0x0157 (0x0977): (0x11) If var[0x11] != var[0x07] then Goto 0x0160

/ Print message  "\nThe ruby vanishes in a hissing cloud of steam\n "
0x015b (0x097b): (0x05) Print message (constant) 0x5e

/ Remove the "ruby" from the game
0x015d (0x097d): (0x01) Gosub 0x0e7f

/ Set the second word to the "abominable snowman" (0x4e)
0x0160 (0x0980): (0x08) Set var[0x22] = (constant) 0x4e

/ Get the location of the "abominable snowman"
0x0163 (0x0983): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the "abominable snowman" is NOT in the player's inventory (0xff)
/ var[0x07] is the constant 0xff
0x0166 (0x0986): (0x11) If var[0x11] != var[0x07] then Goto 0x016d

/ Remove the "abominable snowman" from the game
0x016a (0x098a): (0x01) Gosub 0x0e7f

**************************************************************************

/ Increment the number of times the player has been with the 
/ "fearsome dark shape" (get reset to zero if they are not in its location
/ so outside of there it'll remain at 0x01)
/ var[0x01] is the constant 0x01
0x016d (0x098d): (0x0a) Set var[0x23] += var[0x01]

**************************************************************************

/ Branch if the first supplemental message is NOT "A fearsome dark shape 
/ flies at you: claws and tentacles flail the air!" (0x45)
0x0170 (0x0990): (0x19) If var[0x19] != (constant) 0x45 then Goto 0x017d

/ Branch if it hasn't been 4 turns yet 
/ var[0x04] is the constant 0x04
0x0174 (0x0994): (0x12) If var[0x23] < var[0x04] then Goto 0x017d

/ Print message  "The shape engulfs you.. "
0x0178 (0x0998): (0x05) Print message (constant) 0x46

/ Kill the player
0x017a (0x099a): (0x00) Goto 0x0d64

**************************************************************************
* Check to see if the player is on the collapsing ledge or in the river/rapids
* and also if they drown when finally swept over (they need to 
* be able to breathe underwater via the lung-fish being picked up the right 
* amount of times)
**************************************************************************

/ Branch If the player is NOT in any of these locations:
/ 0x4c : on a ledge. It collapses, hurling you into a fast-flowing underground river! You are swept along helplessly
/ 0x4d : in a raging torrent
/ 0x4e : buffeted by the swift current
/ 0x4f : swept round a bend in the river
/ 0x50 : in a series of rapids
/ 0x51 : on the brink of a stretch of rapids
/ 0x52 : tossed around by the rapids
0x017d (0x099d): (0x1a) If var[0x0b] < (constant) 0x4c then Goto 0x0197
0x0181 (0x09a1): (0x1b) If var[0x0b] > (constant) 0x52 then Goto 0x0197

/ Player IS at one of those destinations

/ Move the player to the next location in that sequence 
/ var[0x01] is the constant 0x01
0x0185 (0x09a5): (0x0a) Set var[0x0b] += var[0x01]

/ Branch if the player is still in the sequence of locations 
0x0188 (0x09a8): (0x1a) If var[0x0b] < (constant) 0x53 then Goto 0x0197

/ Player has gone beyond the rapids (0x52) to 0x53

/ Print message  "\nYou are swept over the rapids "
0x018c (0x09ac): (0x05) Print message (constant) 0x61

/ Branch if the player can breathe underwater (0x01)
/ var[0x01] is the constant 0x01
0x018e (0x09ae): (0x10) If var[0x1d] == var[0x01] then Goto 0x0197

/ Player does NOT have the lung-fish

/ Print message  "and held under for a long time.. "
0x0192 (0x09b2): (0x05) Print message (constant) 0x62

/ Kill the player
0x0194 (0x09b4): (0x00) Goto 0x0d64

**************************************************************************
* Check if the shark is circling the playing and if it attacks
**************************************************************************

/ Branch if the shark is NOT circling around the player (0x63)
0x0197 (0x09b7): (0x19) If var[0x1a] != (constant) 0x63 then Goto 0x01b1

/ Shark IS circling around the player

/ Set the temporary variable to a random number
0x019b (0x09bb): (0x06) Function - Random - Set var[0x13]=<random number>

/ Branch if the random number is greater than 10 (0x0a), the shark will
/ not attack
0x019e (0x09be): (0x1b) If var[0x13] > (constant) 0x0a then Goto 0x01b1

/ Shark attacks the player with a 11/256 or 4.2% probability

/ Print message  "\nThe shark attacks! "
0x01a2 (0x09c2): (0x05) Print message (constant) 0x64

/ Set the temporary variable to the "trident" (0x52)
0x01a4 (0x09c4): (0x08) Set var[0x10] = (constant) 0x52

/ Get the location of the trident 
0x01a7 (0x09c7): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the trident is NOT in the player's inventory (0xff)
/ var[0x07] is the constant 0xff and kill the player
0x01aa (0x09ca): (0x11) If var[0x11] != var[0x07] then Goto 0x0d64

/ Trident IS in the player's inventory

/ Print message  "\nBut the trident protects you! "
0x01af (0x09cf): (0x05) Print message (constant) 0x65

**************************************************************************
* Check if the player is entering the octopus lair
**************************************************************************

/ Branch if the octopus has already "whizzed off" (0x01)
/ var[0x01] is the constant 0x01
0x01b1 (0x09d1): (0x10) If var[0x24] == var[0x01] then Goto 0x01d2

/ Octopus has NOT been encountered yet

/ Branch if the player is NOT "inside an octopus lair. The water is warm and
/ there is a white dot on the wall" (0x61)
0x01b5 (0x09d5): (0x19) If var[0x0b] != (constant) 0x61 then Goto 0x01d2

/ Print message  "A huge octopus leaps out and bites at your treasure. "
0x01b9 (0x09d9): (0x05) Print message (constant) 0x69

/ Set the temporary object to the "wind-bag" (0x53)
0x01bb (0x09db): (0x08) Set var[0x22] = (constant) 0x53

/ Get the location of the "wind-bag"
0x01be (0x09de): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the player has the "wind-bag" in their inventory (0xff)
/ var[0x07] is the constant 0xff
0x01c1 (0x09e1): (0x10) If var[0x11] == var[0x07] then Goto 0x01ca

/ Player does NOT have the "wind-bag"

/ Print message  "Then it reaches for you.. "
0x01c5 (0x09e5): (0x05) Print message (constant) 0x6b

/ Kill the player
0x01c7 (0x09e7): (0x00) Goto 0x0d64

/ Print message  "It starts on the wind-bag, inflates like a balloon and whizzes off! "
0x01ca (0x09ea): (0x05) Print message (constant) 0x6a

/ Set the octopus status to "whizzed off" (0x01)
/ var[0x01] is the constant 0x01
0x01cc (0x09ec): (0x09) Set var[0x24] = var[0x01]

/ Remove the "wind-bag" from the game
0x01cf (0x09ef): (0x01) Gosub 0x0e7f

**************************************************************************
* Check if the player is in the magnificent cave and if an arrow is fired
**************************************************************************

/ Branch if the orc archer has been scared off the ledge
0x01d2 (0x09f2): (0x10) If var[0x25] == var[0x01] then Goto 0x01ec

/ Branch if the player's location IS "in the centre of a magnificent cave" (0x68)
0x01d6 (0x09f6): (0x18) If var[0x0b] == (constant) 0x68 then Goto 0x01de

/ Branch if the player's location is NOT "at the north of a magnificent cave
/ with holes all around" (0x6d)
0x01da (0x09fa): (0x19) If var[0x0b] != (constant) 0x6d then Goto 0x01ec

/ Set the temporary variable to a random number
0x01de (0x09fe): (0x06) Function - Random - Set var[0x13]=<random number>

/ Branch if the random number is greater than 40 as the arrow will miss
/ Player has a 41 / 255 chance of being hit, approximately 16% chance
0x01e1 (0x0a01): (0x1b) If var[0x13] > (constant) 0x28 then Goto 0x01ea

/ Arrow hits the player 

/ Print message  "\nAn arrow is fired. It gets you! A cry of triumph echoes round the hall "A head for Melkor!" "
0x01e5 (0x0a05): (0x05) Print message (constant) 0x71

/ Kill the player
0x01e7 (0x0a07): (0x00) Goto 0x0d64

/ Print message  "\nAn arrow lands nearby "
0x01ea (0x0a0a): (0x05) Print message (constant) 0x70

**************************************************************************
* Check to see if the orcs are chasing the player and if they catch them
**************************************************************************

/ Branch if the orcs are NOT chasing the player 
/ var[0x15] is the constant 0x00
0x01ec (0x0a0c): (0x10) If var[0x26] == var[0x15] then Goto 0x01fe

/ Orcs ARE chasing the player

/ Decrement the number of remaining turns until the player is caught
/ var[0x01] is the constant 0x01
0x01f0 (0x0a10): (0x0b) Set var[0x26] -= var[0x01]

/ Branch if the counter reachers zero, print "the orcs all upon you with 
/ cries of triumph" and kill the player
0x01f3 (0x0a13): (0x10) If var[0x26] == var[0x15] then Goto 0x0e24

/ Counter has not reached zero

/ Branch if the orcs are more than 5 turns away and don't print a message
0x01f8 (0x0a18): (0x13) If var[0x26] > var[0x05] then Goto 0x01fe

/ Print message  "\nThe orcs are closing in "
0x01fc (0x0a1c): (0x05) Print message (constant) 0xa0

**************************************************************************
* Check to see if the player is scaring off the orc archer
**************************************************************************

/ Branch if the orc archer has already fled (0x01)
/ var[0x01] is the constant 0x01
0x01fe (0x0a1e): (0x10) If var[0x25] == var[0x01] then Goto 0x020b

/ Branch if the player's location is not "on a ledge clinging to the west wall
/ of a huge cavern (0x74)
0x0202 (0x0a22): (0x19) If var[0x0b] != (constant) 0x74 then Goto 0x020b

/ Player's location IS "on a ledge clinging to the west wall
/ of a huge cavern (0x74)

/ Print message  "\nAn orc archer is crouched, peering down into the gloom. When he sees you he jumps up and runs north to his kin standing there "
0x0206 (0x0a26): (0x05) Print message (constant) 0x72

/ Set the status of the orc archer to "fled" (0x01)
/ var[0x01] is the constant 0x01
0x0208 (0x0a28): (0x09) Set var[0x25] = var[0x01]

**************************************************************************
* Check to see if the player is being attacked by the sheet of living flame
**************************************************************************

/ Branch if the player is NOT being attacked by "a sheet of living flame"
0x020b (0x0a2b): (0x19) If var[0x1a] != (constant) 0x85 then Goto 0x0229

/ Player IS being attacked by "a sheet of living flame" 

/ Set the temporary object to the "insulating cloak" (0x3c)
0x020f (0x0a2f): (0x08) Set var[0x10] = (constant) 0x3c

/ Get the current location of the insulating cloak
0x0212 (0x0a32): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the cloak is NOT in the player's inventory 
/ var[0x07] is the constant 0xff
0x0215 (0x0a35): (0x11) If var[0x11] != var[0x07] then Goto 0x021d

/ Cloak is in the player's inventory

/ Print message  "but the insulation cloak protects you "
0x0219 (0x0a39): (0x05) Print message (constant) 0x86

/ Skip to next check
0x021b (0x0a3b): (0x00) Goto 0x0229

/ Set the temporary variable to a random number
0x021d (0x0a3d): (0x06) Function - Random - Set var[0x13]=<random number>

/ Branch if the random number is greater than 80 (0x50) - it won't attack this time
0x0220 (0x0a40): (0x1b) If var[0x13] > (constant) 0x50 then Goto 0x0229

/ Cloak of living flame attacks

/ Print message  "It gets you! "
0x0224 (0x0a44): (0x05) Print message (constant) 0x91

/ Kill the player
0x0226 (0x0a46): (0x00) Goto 0x0d64

**************************************************************************
* Check to see if the player is confronted by the BALROG
**************************************************************************

/ Branch if the player is NOT confronted by the BALROG
0x0229 (0x0a49): (0x19) If var[0x19] != (constant) 0x8f then Goto 0x0241

/ Set the temporary variable to a random number
0x022d (0x0a4d): (0x06) Function - Random - Set var[0x13]=<random number>

/ Branch if the random number is greater than 80 (0x50) - it won't attack this time
0x0230 (0x0a50): (0x1b) If var[0x13] > (constant) 0x50 then Goto 0x0241

/ BALROG attacks

/ Print message  "\nThe Balrog's fire-whip strikes out.. "
0x0234 (0x0a54): (0x05) Print message (constant) 0x90

/ Branch if the random number is greater than 60 (0x3c) - it misses
0x0236 (0x0a56): (0x1b) If var[0x13] > (constant) 0x3c then Goto 0x023f

/ Print message  "It gets you! "
0x023a (0x0a5a): (0x05) Print message (constant) 0x91

/ Kill the player
0x023c (0x0a5c): (0x00) Goto 0x0d64

/ Print message  "It misses! "
0x023f (0x0a5f): (0x05) Print message (constant) 0x92

**************************************************************************
* Check to see if the player entered the feast hall full of celebrating orcs
**************************************************************************

/ Branch if the location is "in a feast hall full of celebrating orcs", 
/ print "the orcs all upon you with  cries of triumph" and kill the player
0x0241 (0x0a61): (0x18) If var[0x0b] == (constant) 0x79 then Goto 0x0e24

/ Player is NOT "in a feast hall full of celebrating orcs"

**************************************************************************
* Check to see if the player has entered "the ledge which clings to the 
* west wall of a large cavern" after having the earth-stone snatched by an orc
**************************************************************************

/ Branch if the player is NOT "on a ledge which clings to the west wall
/ of a large cavern" (0x75)
0x0246 (0x0a66): (0x19) If var[0x0b] != (constant) 0x75 then Goto 0x024f

/ Player IS "on a ledge which clings to the west wall
/ of a large cavern" (0x75)

/ Branch if the earth-stone has NOT been snatched by an orc
/ and print "the orcs fall upon you with cries of triumph" (0x3e)
/ var[0x15] is the constant 0x00
0x024a (0x0a6a): (0x10) If var[0x27] == var[0x15] then Goto 0x0e24

/ Earth stone HAS been snatched by the orc after the fight with the 
/ enormous spider so DON'T kill the player. The orcs are celebrating
/ in the feast hall which is why the player is not attacked here any more.

/ Branch if "a reflected face in the marsh looks back. Your gaze is locked!" (0xae)
0x024f (0x0a6f): (0x18) If var[0x1a] == (constant) 0xa8 then Goto 0x025b

/ Branch if "A skeletal hand is gripping your leg and dragging you into the marsh!" (0xae)
0x0253 (0x0a73): (0x18) If var[0x1a] == (constant) 0xae then Goto 0x025b

/ Branch if NOT "You are surrounded by cold shadowy ghosts which are feeding from 
/ your very life energy" (0xb1)
0x0257 (0x0a77): (0x19) If var[0x1a] != (constant) 0xb1 then Goto 0x0269

/ Decrement the number of remaining turns until the player dies by the ghosts
0x025b (0x0a7b): (0x0b) Set var[0x28] -= var[0x01]

/ Branch if the remaining turns is NOT zero (player won't die this turn)
/ var[0x15] is the constant 0x00
0x025e (0x0a7e): (0x11) If var[0x28] != var[0x15] then Goto 0x0269

/ No more turns left

/ Print message  "\nYou stumble into the marsh. "
0x0262 (0x0a82): (0x05) Print message (constant) 0xad

/ Print message  "\nThe quicksand sucks you down! "
0x0264 (0x0a84): (0x05) Print message (constant) 0xac

/ Kill the player
0x0266 (0x0a86): (0x00) Goto 0x0d64

**************************************************************************
* Check to see if the player is on the bleak moor and cold
**************************************************************************

0x0269 (0x0a89): (0x10) If var[0x0f] == var[0x15] then Goto 0x0290

/ Branch if the player is NOT on any of the "...bleak moor..." locations
0x026d (0x0a8d): (0x1a) If var[0x0b] < (constant) 0x97 then Goto 0x028d
0x0271 (0x0a91): (0x1b) If var[0x0b] > (constant) 0xaf then Goto 0x028d

/ Player IS on the bleak moor

/ Decrement the remaining times before the player dies of cold exposure
/ var[0x01] is the constant 0x01
0x0275 (0x0a95): (0x0b) Set var[0x0f] -= var[0x01].

/ Branch if there are more than 3 turns remaining, and don't print a
/ message
0x0278 (0x0a98): (0x13) If var[0x0f] > var[0x03] then Goto 0x0290

/ 3 or less turns remaining

/ Branch if there is only 1 turn remaining and print "Without heat 
/ you will die of exposure"
0x027c (0x0a9c): (0x10) If var[0x0f] == var[0x01] then Goto 0x0289

/ 0 or 2 or 3 turns remaining

/ Branch if there are no more remaining turns and kill the player
0x0280 (0x0aa0): (0x10) If var[0x0f] == var[0x15] then Goto 0x0d64

/ 2 or 3 turns remaining s

/ Print message  "\nYou are severely chilled and must have warmth "
0x0285 (0x0aa5): (0x05) Print message (constant) 0x9e

/ Skip to the next check
0x0287 (0x0aa7): (0x00) Goto 0x0290

/ Print message  "\nWithout heat you will die of exposure\n "
0x0289 (0x0aa9): (0x05) Print message (constant) 0x9f

/ Skip to the next check
0x028b (0x0aab): (0x00) Goto 0x0290
**************************************************************************

/ Reset the number of turns remaining until the player dies of exposure
/ to 10 (0x0a) as the player is NOT on the bleak moor
0x028d (0x0aad): (0x08) Set var[0x0f] = (constant) 0x0a

**************************************************************************
* Check if the player is entering "south of a magnificant throne-room"
**************************************************************************

/ Branch if the player is NOT "at the south of a magnificent throne-room" (0xcd)
0x0290 (0x0ab0): (0x19) If var[0x0b] != (constant) 0xcd then Goto 0x02a3

/ Player IS "at the south of a magnificent throne-room"

/ Branch if Agaliarept has already slipped away when the player 
/ waves the medallion at the carved granite throne
0x0294 (0x0ab4): (0x10) If var[0x29] == var[0x01] then Goto 0x02a3

/ Print message  "\n"Come in!", sneers an evil voice, "I have
/ watched your pitiful efforts against MY servants. Surely you did
/ not expect to defeat ME!!". Dozens of orcs surround you 
/ and herd you north\n "
0x0298 (0x0ab8): (0x05) Print message (constant) 0xbb

/ Move the player to "in front of a carved granite throne in a magnificent 
/ room lined with decorated leather."
0x029a (0x0aba): (0x08) Set var[0x0b] = (constant) 0xcf

/ Set the first and second supplementary messages
0x029d (0x0abd): (0x01) Gosub 0x0390

/ Set the number of turns to 5 until the orcs get the player 
/ var[0x05] is the constant 0x05
0x02a0 (0x0ac0): (0x09) Set var[0x26] = var[0x05]

**************************************************************************
* Process if the player is at the Bane-fire with the Phoenix and completes
* the game
**************************************************************************

/ Branch if the player is "standing by the Bane-fire. But you can't get 
/ near enough to use the Amulet because of the evil radiance 
/ from the flames!" (0xe0)
0x02a3 (0x0ac3): (0x19) If var[0x0b] != (constant) 0xe0 then Goto 0x02e1

/ Player IS "standing by the Bane-fire. But you can't get near enough to 
/ use the Amulet because of the evil radiance from the flames!"

/ Branch if the phoenix has not been reborn (0x00)
/ var[0x15] is the constant 0x00
0x02a7 (0x0ac7): (0x10) If var[0x2a] == var[0x15] then Goto 0x02e1

/ Print message  "\nBut the PHOENIX dives at the fire, destroying it
/ completely! The Demon Lord screams and implodes to nothing: your 
/ mission is successful!!\n \n "
0x02ab (0x0acb): (0x05) Print message (constant) 0xc2

/ Give the player 1,000 (0x3e8) points for completing the game
0x02ad (0x0acd): (0x08) Set var[0x2b] = (constant) 0x3e8

/ Print the score
0x02b1 (0x0ad1): (0x01) Gosub 0x0cf2

/ Branch if the score is less than 6,000 (0x1770)
0x02b4 (0x0ad4): (0x1a) If var[0x2c] < (constant) 0x1770 then Goto 0x02be

/ Score is greater than or equal to 6,000

/ Print message  "\nAll Middle-Earth hails thee: "Grandmaster Adventurer!".
/ Congratulations, you are one of the elite who have cracked this game. " 
0x02b9 (0x0ad9): (0x05) Print message (constant) 0x9c

/ Ask if the player wants to try again
0x02bb (0x0adb): (0x00) Goto 0x0d9a

**************************************************************************

/ Branch if the score is less than 4,000 (0xfa0)
0x02be (0x0ade): (0x1a) If var[0x2c] < (constant) 0xfa0 then Goto 0x02c8

Score is between 4,000 and 5,999

/ Print message  "\nYou are clearly a Master Adventurer! "
0x02c3 (0x0ae3): (0x05) Print message (constant) 0x9b

/ Ask if the player wants to try again
0x02c5 (0x0ae5): (0x00) Goto 0x0d9a

**************************************************************************

/ Branch if the score is less than 1,800 (0x708)
0x02c8 (0x0ae8): (0x1a) If var[0x2c] < (constant) 0x708 then Goto 0x02d2

/ Score is between 1,800 and 3,999

/ Print message  "\nYou are hereby admitted to the ranks of Adventuredom
/ as an "Adventurer" "
0x02cd (0x0aed): (0x05) Print message (constant) 0x9a

/ Ask if the player wants to try again
0x02cf (0x0aef): (0x00) Goto 0x0d9a

**************************************************************************

/ Branch if the score is less than 1,400 (0x578)
0x02d2 (0x0af2): (0x1a) If var[0x2c] < (constant) 0x578 then Goto 0x02dc

/ Score is between 1,400 and 1799

/ Print message  "\nNot bad.. for a beginner "
0x02d7 (0x0af7): (0x05) Print message (constant) 0x99

/ Ask if the player wants to try again
0x02d9 (0x0af9): (0x00) Goto 0x0d9a

**************************************************************************

/ Score is less than 1,400

/ Print message  "\nA puny effort! "
0x02dc (0x0afc): (0x05) Print message (constant) 0x98

/ Ask if the player wants to try again
0x02de (0x0afe): (0x00) Goto 0x0d9a

**************************************************************************
* Print the two flame messages and check to see if they hit the player
**************************************************************************

/ Branch if the player is NOT in one of these locations:
/ 0x82 : on a ledge over the crater. A path spirals anticlockwise to a cave far below
/ 0x83 : on a ledge north-east of the crater
/ 0x84 : on a ledge north-west of the crater
/ 0x85 : on a ledge west of the crater, opposite two caves on the far side. The path 
/        slopes up towards one cave and down to the other
/ 0x86 : on a ledge south-west of the crater
/ 0x87 : on a ledge south-east of the crater
/ 0x88 : on a ledge east of the volcanic crater, beside a cave entrance. The heat 
/        from the bubbling lava just below is immense. A path slopes up clockwise 
/        to another cave high above
/ 0x89 : in a cave opening onto a volcanic crater. A huge hole almost fills the cave
/        floor and a ramp spirals down into it. Warning runes are carved at the top of
/        the ramp
0x02e1 (0x0b01): (0x1a) If var[0x0b] < (constant) 0x82 then Goto 0x02ec
0x02e5 (0x0b05): (0x1b) If var[0x0b] > (constant) 0x89 then Goto 0x02ec

/ Print the two flames and check to see if the flames hit the player
0x02e9 (0x0b09): (0x01) Gosub 0x0d3d

**************************************************************************
* Get the next user input, update/reset the flame counter and process input
**************************************************************************

/ Print message  "\nWhat next?\n "
0x02ec (0x0b0c): (0x05) Print message (constant) 0x02

/ Get user input and store results after parsing against dictionary
0x02ee (0x0b0e): (0x07) Input - results in word1 var[0x2d], word2 var[0x22], word3 var[0x2e], count var[0x2f]

/ Clear the gosub stack as this turn is over - for instances where
/ there has been a gosub and there was no return because e.g. there was 
/ a goto back to another part of the game
0x02f3 (0x0b13): (0x06) Function - Clear Stack (0x06)

/ Increment the number of turns/commands entered by the player
/ var[0x01] is the constant 0x01
0x02f5 (0x0b15): (0x0a) Set var[0x30] += var[0x01]

/ Branch if the flames counter is NOT 0x00 and decrement it
0x02f8 (0x0b18): (0x13) If var[0x31] > var[0x15] then Goto 0x02ff

/ Reset the flames counter to 0x03
/ var[0x03] is the constant 0x03
0x02fc (0x0b1c): (0x09) Set var[0x31] = var[0x03]

/ Subtract 1 from the flames counter
0x02ff (0x0b1f): (0x0b) Set var[0x31] -= var[0x01]

/ Branch if nothing was entered and wait for input again
/ var[0x15] is the constant 0x00
0x0302 (0x0b22): (0x10) If var[0x2f] == var[0x15] then Goto 0x02ee

/ Branch if the first word was not matched to anything in the dictionary 
/ and print "I don't understand"
/ var[0x15] is the constant 0x00
0x0306 (0x0b26): (0x10) If var[0x2d] == var[0x15] then Goto 0x030e

/ Branch if the first word was a verb / command
/ 0x33 is the dictionary id of the first object, the earth-stone
0x030a (0x0b2a): (0x1a) If var[0x2d] < (constant) 0x33 then Goto 0x0313

/ Print message  "I don't understand "
0x030e (0x0b2e): (0x05) Print message (constant) 0x03

/ Print the location description
0x0310 (0x0b30): (0x00) Goto 0x004b

**************************************************************************

/ Branch if the first matched word is one of the comamnds that either
/ does not require a second word e.g. North or inventory or has an 
/ optional second word e.g. get or wear. Branch processes the command.
0x0313 (0x0b33): (0x1a) If var[0x2d] < (constant) 0x1e then Goto 0x0328

/ Command requires an object

/ Branch if the second word is an object and process the command
0x0317 (0x0b37): (0x1b) If var[0x22] > (constant) 0x32 then Goto 0x032

/ "Oil" (0x14) is a special dictionary item - it's both a command and object
/ but only defined as a verb
0x031b (0x0b3b): (0x18) If var[0x22] == (constant) 0x14 then Goto 0x0328
0x031f (0x0b3f): (0x18) If var[0x22] == (constant) 0x1c then Goto 0x0328

/ Print message  "Please be more specific "
0x0323 (0x0b43): (0x05) Print message (constant) 0x04

/ Print the location description
0x0325 (0x0b45): (0x00) Goto 0x004b
**************************************************************************

/ If the second word is the "Will O'Wisp" (0x74) and print
/ "You can't get near it" regardless of the command
0x0328 (0x0b48): (0x18) If var[0x22] == (constant) 0x74 then Goto 0x0b48

/ Use the jump table below to process the command in the first matched word
0x032d (0x0b4d): (0x0e) Jump table at 0x0331 (0x0b51) - nth entry in var[0x2d]

**************************************************************************
* Jump tables are actually just a lookup by index of the dictionary id
* of the first word the player entered. That returns an offset into the
* a-code on where to start executing.  For ease of understanding,
* the disassembly produced if... in... goto statements, a little more 
* readable and useful than just a list of indexed addresses
**************************************************************************
Jump Table       (Idx) 
**************************************************************************

0x0331 (0x0b51): (0x00) If player cmd in n/a Goto 0x0645
0x0333 (0x0b53): (0x01) If player cmd in {'NORTH'} Goto 0x0645
0x0335 (0x0b55): (0x02) If player cmd in {'NORTHEAST', 'NEAST'} Goto 0x0645
0x0337 (0x0b57): (0x03) If player cmd in {'EAST'} Goto 0x0645
0x0339 (0x0b59): (0x04) If player cmd in {'SOUTH'} Goto 0x0645
0x033b (0x0b5b): (0x05) If player cmd in {'SOUTHEAST', 'SEAST'} Goto 0x0645
0x033d (0x0b5d): (0x06) If player cmd in {'SWEST', 'SOUTHWEST'} Goto 0x0645
0x033f (0x0b5f): (0x07) If player cmd in {'WEST'} Goto 0x0645
0x0341 (0x0b61): (0x08) If player cmd in {'NWEST', 'NORTHWEST'} Goto 0x0645
0x0343 (0x0b63): (0x09) If player cmd in {'CLIMB', 'UPWARDS'} Goto 0x0645
0x0345 (0x0b65): (0x0a) If player cmd in {'DOWNWARDS', 'JUMP'} Goto 0x0645
0x0347 (0x0b67): (0x0b) If player cmd in {'INSIDE', 'INTO'} Goto 0x0645
0x0349 (0x0b69): (0x0c) If player cmd in {'OUTSIDE'} Goto 0x0645
0x034b (0x0b6b): (0x0d) If player cmd in {'CROSS'} Goto 0x0645
0x034d (0x0b6d): (0x0e) If player cmd in {'YES'} Goto 0x0645 
0x034f (0x0b6f): (0x0f) If player cmd in {'LIGHT', 'ON'} Goto 0x0962
0x0351 (0x0b71): (0x10) If player cmd in {'OFF'} Goto 0x0971
0x0353 (0x0b73): (0x11) If player cmd in {} Goto 0x038b
0x0355 (0x0b75): (0x12) If player cmd in {'EAT'} Goto 0x0a5b
0x0357 (0x0b77): (0x13) If player cmd in {'DRINK'} Goto 0x0b4d
0x0359 (0x0b79): (0x14) If player cmd in {'OIL'} Goto 0x0bf7
0x035b (0x0b7b): (0x15) If player cmd in {'SCORE?'} Goto 0x0ce3
0x035d (0x0b7d): (0x16) If player cmd in {'QUIT'} Goto 0x094d
0x035f (0x0b7f): (0x17) If player cmd in {'SAVE'} Goto 0x0ce8
0x0361 (0x0b81): (0x18) If player cmd in {'RESTORE'} Goto 0x0ced
0x0363 (0x0b83): (0x19) If player cmd in {'EXAMINE', 'INSPECT', 'HELP'} Goto 0x038b
0x0365 (0x0b85): (0x1a) If player cmd in {'INVENTORY'} Goto 0x08e9
0x0367 (0x0b87): (0x1b) If player cmd in {'LOOK'} Goto 0x08fe
0x0369 (0x0b89): (0x1c) If player cmd in {'BOULDERS', 'ROCKS'} Goto 0x0c22
0x036b (0x0b8b): (0x1d) If player cmd in {} Goto 0x038b
0x036d (0x0b8d): (0x1e) If player cmd in {'GET', 'TAKE', 'CATCH', 'WEAR'} Goto 0x07c2
0x036f (0x0b8f): (0x1f) If player cmd in {'FREE', 'DROP'} Goto 0x0847
0x0371 (0x0b91): (0x20) If player cmd in {'HIT', 'FIGHT', 'SMITE', 'CUT', 'KILL', 'ATTACK'} Goto 0x0c64
0x0373 (0x0b93): (0x21) If player cmd in {'THROW'} Goto 0x091c
0x0375 (0x0b95): (0x22) If player cmd in {'UNLOCK', 'OPEN'} Goto 0x09a6
0x0377 (0x0b97): (0x23) If player cmd in {'LOCK', 'CLOSE', 'SHUT'} Goto 0x038b
0x0379 (0x0b99): (0x24) If player cmd in {'TIE', 'ATTACH', 'FASTEN'} Goto 0x0990
0x037b (0x0b9b): (0x25) If player cmd in {'MOVE', 'DISLODGE', 'PUSH'} Goto 0x0bfc
0x037d (0x0b9d): (0x26) If player cmd in {'SWING', 'REVEAL', 'WAVE', 'SHOW'} Goto 0x0c24
0x037f (0x0b9f): (0x27) If player cmd in {'PLAY', 'BLOW'} Goto 0x0aa2
0x0381 (0x0ba1): (0x28) If player cmd in {'READ'} Goto 0x0a90
0x0383 (0x0ba3): (0x29) If player cmd in {'FILL'} Goto 0x0b73
0x0385 (0x0ba5): (0x2a) If player cmd in {'EMPTY', 'POUR'} Goto 0x0bc3
0x0387 (0x0ba7): (0x2b) If player cmd in {'INSERT', 'FEED', 'GIVE', 'REPLACE', 'PUT'} Goto 0x0ac3
0x0389 (0x0ba7): (0x2b) If player cmd in {'RUB'} Goto 0x0a44

**************************************************************************
* Command: examine/inspect/help and lock/close/shut
**************************************************************************

/ Nothing can be examined

/ Print "I don't understand" 
/ var[0x03] is the constant 0x03
0x038b (0x0bab): (0x04) Print message var[0x03]

/ Get the player's next command 
0x038d (0x0bad): (0x00) Goto 0x009a

**************************************************************************
 
/ Branch if the current location id is less than the highest location id
/ they have reached (nothing to update) - this affects the player's score
0x0390 (0x0bb0): (0x12) If var[0x0b] < var[0x32] then Goto 0x039b

/ Branch if the current locatin id is "Purgatory" by dying (0xe2) (they don't 
/ score more for dying and reaching this hidden location)
0x0394 (0x0bb4): (0x1b) If var[0x0b] > (constant) 0xe1 then Goto 0x039b

/ Set the highest location id to the player's current location so their
/ score increases
0x0398 (0x0bb8): (0x09) Set var[0x32] = var[0x0b]

/ Reset the location light indicator to dark (0x00)
/ var[0x15] is the constant 0x00
0x039b (0x0bbb): (0x09) Set var[0x12] = var[0x15]

/ Set the temporary index into list#3 to 0x00 to start 
/ looping through the dark location ids
/ var[0x15] is the constant 0x00
0x039e (0x0bbe): (0x09) Set var[0x10] = var[0x15]

/ Get the next location id that is dark
0x03a1 (0x0bc1): (0xa3) Set var[0x11] = list#3[var[0x10]] (list address 0x0318)

/ Branch if the dark location matches the player's current location
0x03a4 (0x0bc4): (0x10) If var[0x11] == var[0x0b] then Goto 0x03b2

/ Move to the next dark location in list#3 
0x03a8 (0x0bc8): (0x0a) Set var[0x10] += var[0x01]

/ List#3 is terminated with a "0xe2" but loop back around testing for
/ dark locations until all dark locations have been checked against the 
/ player's current location 
0x03ab (0x0bcb): (0x1a) If var[0x11] < (constant) 0xe2 then Goto 0x03a1

/ Set the location to light 
0x03af (0x0bcf): (0x09) Set var[0x12] = var[0x01]

/ Reset the underwater indicator to "underwater" (0x01)
/ var[0x01] is the constant 0x01
0x03b2 (0x0bd2): (0x09) Set var[0x1c] = var[0x01]

/ Set the temporary index into list#4 to 0x00 to start 
/ looping through the underwater location ids
/ var[0x15] is the constant 0x00
0x03b5 (0x0bd5): (0x09) Set var[0x10] = var[0x15]

/ Get the next location id that is underwater
0x03b8 (0x0bd8): (0xa4) Set var[0x11] = list#4[var[0x10]] (list address 0x0340)

/ Branch if the underwater location matches the player's current location
0x03bb (0x0bdb): (0x10) If var[0x11] == var[0x0b] then Goto 0x03c9

/ Move to the next underwater location in list#4
0x03bf (0x0bdf): (0x0a) Set var[0x10] += var[0x01]

/ List#4 is terminated with a "0xe2" but loop back around testing for
/ underwater locations until all underwater locations have been checked against the 
/ player's current location 
0x03c2 (0x0be2): (0x1a) If var[0x11] < (constant) 0xe2 then Goto 0x03b8

/ Location is NOT underwater so set the flag (0x00)
/ var[0x15]
0x03c6 (0x0be6): (0x09) Set var[0x1c] = var[0x15]

**************************************************************************
* Process the first time the player is at the top of the stone pinnacle 
* and gets handed the scroll
**************************************************************************

/ Branch if the player is NOT "You are at the top of a stone pinnacle high 
/ above the forest." (0x19)
0x03c9 (0x0be9): (0x19) If var[0x0b] != (constant) 0x19 then Goto 0x03dc

/ Player IS currently at "the top of a stone pinnacle high 
/ above the forest." (0x19)

/ Branch if the robed wizard has already given the scroll (0x01)
/ var[0x01] is the constant 0x01
0x03cd (0x0bed): (0x10) If var[0x33] == var[0x01] then Goto 0x03dc

/ Print message  "\nA robed wizard is standing waiting. She hands you a scroll, smiles and fades away "
0x03d1 (0x0bf1): (0x05) Print message (constant) 0x18

/ Set the status of the robed wizard to having given the scroll (0x01)
0x03d3 (0x0bf3): (0x09) Set var[0x33] = var[0x01]

/ Set the second word to the "scroll" (0x4b)
0x03d6 (0x0bf6): (0x08) Set var[0x22] = (constant) 0x4b

/ Add the scroll to the player's inventory
0x03d9 (0x0bf9): (0x00) Goto 0x07d6

**************************************************************************
* Process the first time the player reaches the small temple to the sun
* god and print the priestess greeting the player
**************************************************************************

/ Branch if the location is NOT the "You are inside a small temple to the
/ sun god on the pyramid."
0x03dc (0x0bfc): (0x19) If var[0x0b] != (constant) 0x24 then Goto 0x0400

/ Branch if the player has already been greeted by the priestess (0x01)
0x03e0 (0x0c00): (0x10) If var[0x34] == var[0x01] then Goto 0x03eb

/ Print message  "A priestess greets you: "I can help your quest if you return
/  my sun-dial", she says, "It was stolen and hidden in a cave near the oasis. 
/ Without it I am powerless and dare not leave the temple!" "
0x03e4 (0x0c04): (0x05) Print message (constant) 0x59

/ Set the status of the priestess to "has greeted the player" (0x01)
/ var[0x01] is the constant 0x01
0x03e6 (0x0c06): (0x09) Set var[0x34] = var[0x01]

/ Skip ahead to perform more location checks
0x03e9 (0x0c09): (0x00) Goto 0x0400

**************************************************************************

/ Set the second word to the dictionary id for the "sun-dial" (0x4f)
0x03eb (0x0c0b): (0x08) Set var[0x22] = (constant) 0x4f

/ Get the location of the "sun-dial" (0x4f)
0x03ee (0x0c0e): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the "sun-dial" is NOT in the player's inventory (0xff) and skip
/ ahead and perform more location checks
/ var[0x07] is the constant 0xff
0x03f1 (0x0c11): (0x11) If var[0x11] != var[0x07] then Goto 0x0400

/ "Sun-dial" IS in the player's inventory (0xff)

/ Print message  "The priestess gives you a small ruby in exchange for the 
/ sun-dial. She vanishes, mouthing "Be careful!" "
0x03f5 (0x0c15): (0x05) Print message (constant) 0x58

/ Set the sun-dial to out of game (0xe2)
/ var[0x08] is the constant 0xe2
0x03f7 (0x0c17): (0xe2) Set list#2[var[0x22]] = var[0x08] (list address 0x0820)

/ Set the second word to the dictionary id for the "ruby" (0x40)
0x03fa (0x0c1a): (0x08) Set var[0x22] = (constant) 0x40

/ Set the location of the "ruby" to the player's inventory (0xff)
/ var[0x07] is the constant 0xff
0x03fd (0x0c1d): (0xe2) Set list#2[var[0x22]] = var[0x07] (list address 0x0820)

/ Set the location message to "A unicorn stands in the clearing" (0xc9)
0x0400 (0x0c20): (0x08) Set var[0x35] = (constant) 0xc9

/ Branch if the player has already fed the rare orchid to the unicorn (0x01)
/ var[0x01] is the constant 0x01
0x0403 (0x0c23): (0x10) If var[0x36] == var[0x01] then Goto 0x040c

/ Player has NOT fed the rare orchid to the unicorn

/ Branch if the player is "in woodland above the valley." (0x17) and skip
/ most of the checks here
0x0407 (0x0c27): (0x18) If var[0x0b] == (constant) 0x17 then Goto 0x0586

/ Player is NOT "in woodland above the valley" (0x17)

/ Set the location message to "The orchid is two foot above your reach" (0x2a)
0x040c (0x0c2c): (0x08) Set var[0x35] = (constant) 0x2a

/ Branch if the player is NOT in the location "stumbling over sharp stones in a steeply 
/ sloping gulley" (0x0b)
0x040f (0x0c2f): (0x19) If var[0x0b] != (constant) 0x0b then Goto 0x042e

/ Player IS in the location "stumbling over sharp stones in a steeply 
/ sloping gulley" (0x0b)

/ Set the temporary variable to the object id for the "rare orchid" (0x47)
0x0413 (0x0c33): (0x08) Set var[0x10] = (constant) 0x47

/ Get the current location of the "rare orchid"
0x0416 (0x0c36): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the "rare orchid" is NOT at the location "stumbling over sharp stones in a steeply 
/ sloping gulley" (0x0b)
0x0419 (0x0c39): (0x19) If var[0x11] != (constant) 0x0b then Goto 0x042e

/ Rare orchid IS in location "stumbling over sharp stones in a steeply sloping gulley" (0x0b)

/ Set the temporary variable to the object id for the "table "(0x51)
0x041d (0x0c3d): (0x08) Set var[0x10] = (constant) 0x51

/ Get the current location of the "table"
0x0420 (0x0c40): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the "table" is NOT at the location "stumbling over sharp stones in a steeply 
/ sloping gulley" (0x0b)
0x0423 (0x0c43): (0x19) If var[0x11] != (constant) 0x0b then Goto 0x0586

/ Table, rare orchid and player ARE in location "stumbling over sharp stones in a steeply sloping
/ gulley" (0x0b)
0x0428 (0x0c48): (0x08) Set var[0x35] = (constant) 0x2b

/ Skip ahead 
0x042b (0x0c4b): (0x00) Goto 0x0586

**************************************************************************

/ Set the location message to "A sphinx guards the pyramid" (0xca)
0x042e (0x0c4e): (0x08) Set var[0x35] = (constant) 0xca

/ Branch if the player IS at "on trackless desert south of a canyon.
/ A large flat-topped pyramid with steps on all sides...." (0x23)
0x0431 (0x0c51): (0x18) If var[0x0b] == (constant) 0x23 then Goto 0x0439

/ Branch if the player is NOT at "on a rocky outcrop overlooking the 
/ desert and the pyramid" (0x26)
0x0435 (0x0c55): (0x19) If var[0x0b] != (constant) 0x26 then Goto 0x043e

/ Player IS either "on trackless desert south of a canyon.
/ A large flat-topped pyramid with steps on all sides...." (0x23) OR
/ "on trackless desert south of a canyon. A large flat-topped pyramid 
/ with steps on all sides...." (0x26)

/ Branch if the gigantic worm has NOT eaten the Sphinx yet (0x00)
0x0439 (0x0c59): (0x10) If var[0x1f] == var[0x15] then Goto 0x0586

**************************************************************************

/ Set the location message to "Poisonous snakes cover the pyramid" (0xcb)
0x043e (0x0c5e): (0x08) Set var[0x35] = (constant) 0xcb

/ Branch if the player is NOT "on top of the pyramid outside a 
/ small temple" (0x25)
0x0441 (0x0c61): (0x19) If var[0x0b] != (constant) 0x25 then Goto 0x044a

/ Branch if the player has NOT already played the pipes to dance the 
/ snakes away (0x00)
/ var[0x15] is the constant 0x00
0x0445 (0x0c65): (0x10) If var[0x37] == var[0x15] then Goto 0x0586

**************************************************************************

/ Set the location message to "A Djinn stands before you, guarding the 
/ oasis to the south" 0xce
0x044a (0x0c6a): (0x08) Set var[0x35] = (constant) 0xce

/ Branch if the players it NOT "at the north edge of an oasis" (0x2e)
0x044d (0x0c6d): (0x19) If var[0x0b] != (constant) 0x2e then Goto 0x0456

/ Branch if the player has NOT yet opened the bag to blow the djinn to the lamp
0x0451 (0x0c71): (0x10) If var[0x38] == var[0x15] then Goto 0x0586

**************************************************************************

/ Branch if the location is NOT "in a sheltered east-west valley, protected 
/ from the burning sun by high rocky walls" (0x29)
0x0456 (0x0c76): (0x19) If var[0x0b] != (constant) 0x29 then Goto 0x0468

/ Set the location message to "A stone slab blocks the way north" (0xcc)
0x045a (0x0c7a): (0x08) Set var[0x35] = (constant) 0xcc

/ Branch if the player has NOT yet said "open sesame"
0x045d (0x0c7d): (0x10) If var[0x39] == var[0x15] then Goto 0x0586

/ Set the location message to "A cavern opens to the north" (0x4c)
0x0462 (0x0c82): (0x08) Set var[0x35] = (constant) 0x4c

/ Skip ahead
0x0465 (0x0c85): (0x00) Goto 0x0586

**************************************************************************

/ Set the location message to "The tower is surrounded by orcs" (0xcf)
0x0468 (0x0c88): (0x08) Set var[0x35] = (constant) 0xcf

/ Branch if the player IS "on the stone staircase some distance below a 
/ stone tower. A body hangs..." (0x35)
0x046b (0x0c8b): (0x18) If var[0x0b] == (constant) 0x35 then Goto 0x0473

/ Branch if the player is NOT "on stone steps some way above a stone 
/ tower. A narrow path..." (0x3b)
0x046f (0x0c8f): (0x19) If var[0x0b] != (constant) 0x3b then Goto 0x0478

/ Player is either "on the stone staircase some distance below a 
/ stone tower. A body hangs..." (0x35) or "on stone steps some way 
/ above a stone tower. A narrow path..." (0x3b)

/ Branch if the giant pile of rocks has not been pushed onto the orcs (0x00)
/ var[0x15] is the constant 0x00
0x0473 (0x0c93): (0x10) If var[0x21] == var[0x15] then Goto 0x0586

**************************************************************************

/ Set the location message to "A giant sits in the middle of the path, 
/ blocking it. He is picking at the bones of some unfortunate creature" (0xc5)
0x0478 (0x0c98): (0x08) Set var[0x35] = (constant) 0xc5

/ Branch if the player is NOT "on a climbing path up the mountain"
0x047b (0x0c9b): (0x19) If var[0x0b] != (constant) 0x37 then Goto 0x0484

/ Branch if the player has NOT swung the sling at the giant (0x00)
/ var[0x15] is the constant 0x00
0x047f (0x0c9f): (0x10) If var[0x3a] == var[0x15] then Goto 0x0586

/ Player has swung the sling

**************************************************************************

/ Set the location message to "The snowman is chained to the mountain" (0xd0)
0x0484 (0x0ca4): (0x08) Set var[0x35] = (constant) 0xd0

/ Branch if the location is NOT "standing on a snowfield outside a small 
/ dark mountain cave" (0x3f)
0x0487 (0x0ca7): (0x19) If var[0x0b] != (constant) 0x3f then Goto 0x0490

/ Branch if the player has NOT unlocked the snowman (0x01)
/ var[0x01] is the constant 0x01
0x048b (0x0cab): (0x10) If var[0x09] == var[0x01] then Goto 0x0586

**************************************************************************

/ Set the location message to "There is a small stalagmite near the edge" (0xd1)
0x0490 (0x0cb0): (0x08) Set var[0x35] = (constant) 0xd1

/ Branch if the player is NOT " in a smelly cave:..." (0x40)
0x0493 (0x0cb3): (0x19) If var[0x0b] != (constant) 0x40 then Goto 0x04a2

/ Branch if the player has NOT already tied the rope to the stalagmite (0x00)
/ var[0x15] is the constant 0x00
0x0497 (0x0cb7): (0x10) If var[0x3b] == var[0x15] then Goto 0x0586

/ Set the location message to "A rope hangs down into the darkness below" (0xd6)
0x049c (0x0cbc): (0x08) Set var[0x35] = (constant) 0xd6

/ Skip ahead
0x049f (0x0cbf): (0x00) Goto 0x05b2

**************************************************************************

/ Set the location message to "A pile of giant rocks lies beside the steps" (0xd2)
0x04a2 (0x0cc2): (0x08) Set var[0x35] = (constant) 0xd2

/ Branch if the player is NOT "on steps leading upwards" (0x3c)
0x04a5 (0x0cc5): (0x19) If var[0x0b] != (constant) 0x3c then Goto 0x04ae

/ Branch if the giant pile of rocks have not yet been pushed off (0x00)
/ var[0x15] is the constant 0x00
0x04a9 (0x0cc9): (0x10) If var[0x21] == var[0x15] then Goto 0x0586

**************************************************************************

/ Set the location message to "The door is rusted solid" (0xd9)
0x04ae (0x0cce): (0x08) Set var[0x35] = (constant) 0xd9

/ Branch if the player is NOT "south of a huge door on the north shore 
/ of the crater lake" (0x65)
0x04b1 (0x0cd1): (0x19) If var[0x0b] != (constant) 0x65 then Goto 0x04c2

/ Branch if the door has NOT been oiled (0x00)
/ var[0x15] is the constant 0x00
0x04b5 (0x0cd5): (0x10) If var[0x3c] == var[0x15] then Goto 0x0586

**************************************************************************

/ Set the location message to "The door is locked" (0xda)
0x04ba (0x0cda): (0x08) Set var[0x35] = (constant) 0xda

/ Branch if the player has NOT unlocked the door
0x04bd (0x0cdd): (0x10) If var[0x3d] == var[0x15] then Goto 0x0586

**************************************************************************

/ Set the location message to "Orcs block the way north" (0xd5)
0x04c2 (0x0ce2): (0x08) Set var[0x35] = (constant) 0xd5

/ Branch if the location is NOT "on a ledge clinging to the west 
/ wall of a huge cavern." (0xd5)
0x04c5 (0x0ce5): (0x19) If var[0x0b] != (constant) 0x74 then Goto 0x04ce

/ Branch if the earth-stone has NOT been snatched by an orc 
/ var[0x15] is the constant 0x00
0x04c9 (0x0ce9): (0x10) If var[0x27] == var[0x15] then Goto 0x0586

/ Branch if the player is NOT "in an east-west passage by a 
/ narrow entrance to the north" (0xd4)
0x04ce (0x0cee): (0x19) If var[0x0b] != (constant) 0xd4 then Goto 0x04d7

/ Branch if the orcs are NOT chasing the player (0x00)
0x04d2 (0x0cf2): (0x10) If var[0x3e] == var[0x15] then Goto 0x0586

**************************************************************************

/ Set the location message to "A rope bridge spans the chasm 
/ from east to west" (0x2e)
0x04d7 (0x0cf7): (0x08) Set var[0x35] = (constant) 0x2e

/ Branch if the player IS "on a ledge which clings to the west wall 
/ of a large cavern" (0x75)
0x04da (0x0cfa): (0x18) If var[0x0b] == (constant) 0x75 then Goto 0x04e2

/ Branch if the player is NOT "at the entrance to an orc lair" (0x75)
0x04de (0x0cfe): (0x19) If var[0x0b] != (constant) 0x77 then Goto 0x04e7

/ Branch if the rope bridge is still in place (0x00)
/ var[0x15] is the constant 0x00
0x04e2 (0x0d02): (0x10) If var[0x3f] == var[0x15] then Goto 0x0586

/ Rope bridge is still in place... 

**************************************************************************
/ Set the location message to "A dragon fills the cave!" (0xd4)
0x04e7 (0x0d07): (0x08) Set var[0x35] = (constant) 0xd4

/ Branch if the player is NOT "in a round smooth cave with several 
/ exits" (0x7f)
0x04ea (0x0d0a): (0x19) If var[0x0b] != (constant) 0x7f then Goto 0x04f3

/ Branch if player has NOT thrown the bottle of water at the dragon
0x04ee (0x0d0e): (0x10) If var[0x40] == var[0x15] then Goto 0x0586

**************************************************************************

/ Set the location message to "A rock bridge spans the chasm" (0xd3)
0x04f3 (0x0d13): (0x08) Set var[0x35] = (constant) 0xd3

/ Branch if the BALROG has plummeted into the chasm (0x01) - no need
/ to print he's there as he isn't
/ var[0x01] is the constant 0x01
0x04f6 (0x0d16): (0x10) If var[0x41] == var[0x01] then Goto 0x0519

/ Branch if the player's current location IS "on the east side of a 
/ bottomless chasm" (0x93)
0x04fa (0x0d1a): (0x18) If var[0x0b] == (constant) 0x93 then Goto 0x0586

/ Branch if the player's current location IS "on the west of the
/ chasm..." (0x95)
0x04ff (0x0d1f): (0x18) If var[0x0b] == (constant) 0x95 then Goto 0x0586

**************************************************************************

/ Player is NOT on the east or west side of the chasm

/ BALROG only appears if the player has the sun-stone in their inventory

/ Set the location message to "A BALROG stands astride the bridge,
/ holding its whip of flames. You are trapped!"
0x0504 (0x0d24): (0x08) Set var[0x35] = (constant) 0x8f

/ Branch if the location is NOT "on a narrow stone bridge poised 
/ over the chasm" (0x94)
0x0507 (0x0d27): (0x19) If var[0x0b] != (constant) 0x94 then Goto 0x0519

/ Player IS "on a narrow stone bridge poised over the chasm"

/ Set the temporary variable to the sun-stone (0x36)
0x050b (0x0d2b): (0x08) Set var[0x10] = (constant) 0x36

/ Get the current location of the sun-stone 
0x050e (0x0d2e): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the sun-stone IS in the player's inventory (0xff)
/ var[0x07] is the constant 0xff
0x0511 (0x0d31): (0x10) If var[0x11] == var[0x07] then Goto 0x0586

/ Branch if the location IS "on a narrow stone bridge poised over 
/ the chasm" (0x94)
0x0515 (0x0d35): (0x18) If var[0x11] == (constant) 0x94 then Goto 0x0586

**************************************************************************

/ Branch if the player is NOT "on a ledge clinging to the west wall 
/ of a huge cavern" (0x74)
0x0519 (0x0d39): (0x19) If var[0x0b] != (constant) 0x74 then Goto 0x0522

/ Player IS "on a ledge clinging to the west wall"

/ Branch if the player has NOT had the earth-stone snatched by an orc (0x00)
/ print "the orcs all upon you with cries of triumph" and kill the player.
/ Ths is because if the earth-stone has been snatched, they will all be 
/ celebrating in the feast hall instead.
0x051d (0x0d3d): (0x10) If var[0x27] == var[0x15] then Goto 0x0e24

**************************************************************************

/ Branch if the location is NOT the "at an open doorway in a narrow 
/ north-south corridor" (0xce)
0x0522 (0x0d42): (0x19) If var[0x0b] != (constant) 0xce then Goto 0x052b

/ Branch if the player is NOT being chased by the orcs (0x00)
/ var[0x15] is the constant 0x00
0x0526 (0x0d46): (0x10) If var[0x3e] == var[0x15] then Goto 0x0e24

**************************************************************************

/ Set the location message to "A fearsome dark shape flies at you: claws 
/ and tentacles flail the air!" (0x45)
0x052b (0x0d4b): (0x08) Set var[0x35] = (constant) 0x45

/ Branch if the player is NOT "in a small gloomy room with an alcove 
/ in the north wall" (0x49)
0x052e (0x0d4e): (0x19) If var[0x0b] != (constant) 0x49 then Goto 0x0536


/ Player IS "in a small gloomy room with an alcove in the north wall"

/ Branch if the player has NOT thrown the ruby at the fearsome dark shape
0x0532 (0x0d52): (0x10) If var[0x42] == var[0x15] then Goto 0x0586

**************************************************************************

/ Set the location message to nothing (0x00)
/ var[0x15] is the constant 0x00
0x0536 (0x0d56): (0x09) Set var[0x35] = var[0x15]

/ Branch if the player is NOT "in front of a carved granite throne in a 
/ magnificent room lined with decorated leather." 0xcf
0x0539 (0x0d59): (0x19) If var[0x0b] != (constant) 0xc then Goto 0x0544

/ Player IS "in front of a carved granite throne in a magnificent room 
/ lined with decorated leather."

/ Branch if the medallion HAS been waved in front of Agaliarept
0x053d (0x0d5d): (0x10) If var[0x29] == var[0x01] then Goto 0x0544

/ Set the "You stand before the throne where the Demon Lord sits laughing. 
/ You cannot move!" (0xba)
0x0541 (0x0d61): (0x08) Set var[0x35] = (constant) 0xba

/ Branch if the location is NOT "standing by the Bane-fire. But you can't
/ get near enough to use the Amulet because of the evil radiance 
/ from the flames!" (0xe0)
0x0544 (0x0d64): (0x19) If var[0x0b] != (constant) 0xe0 then Goto 0x054b

/ Player is ""standing by the Bane-fire...."

/ Set the location message to "The Demon Lord freezes you with a look: 
/ "You will still fail!", he snarls, "No amulet can work so close to
/ the centre of my power." (0xbf)
0x0548 (0x0d68): (0x08) Set var[0x35] = (constant) 0xbf

**************************************************************************

/ Branch if the player has attacked the sheet of living flame with the 
/ sword (0x01)
/ var[0x01] is the constant 0x01
0x054b (0x0d6b): (0x10) If var[0x43] == var[0x01] then Goto 0x0563

/ Branch if the player is NOT in one of the following locations:
/ 0x8a : on a spiral ramp at the top of Hell-well. The walls of the well are inset with small niches containing small flickering lights
/ 0x8b : on a spiral ramp half way up Hell-well. The walls are inset with small niches containing trapped flames
/ 0x8c : on a spiral ramp near the bottom of Hell-well. The walls of the well are inset with small niches holding tiny flames
/ 0x8d : standing on shattered rocks at the bottom of Hell-well. A broken door leads west
0x054f (0x0d6f): (0x1a) If var[0x0b] < (constant) 0x8a then Goto 0x055c
0x0553 (0x0d73): (0x1b) If var[0x0b] > (constant) 0x8d then Goto 0x055c

/ Player IS in the Hell-well

/ Set the second supplementary message to print at the location 
/ "A sheet of living flame is attacking you" (0x85)
0x0557 (0x0d77): (0x08) Set var[0x1a] = (constant) 0x85

/ Move to the next check
0x055a (0x0d7a): (0x00) Goto 0x0563
**************************************************************************

/ Branch if the second supplementary message is set to "A sheet of living 
/ flame is attacking you" (0x85)
0x055c (0x0d7c): (0x19) If var[0x1a] != (constant) 0x85 then Goto 0x0563

/ Second supplementary message is set to "A sheet of living flame is
/ attacking you" (0x85)

/ Reset the message to nothing (0x00)
/ var[0x15] is the constant 0x00
0x0560 (0x0d80): (0x09) Set var[0x1a] = var[0x15]

/ Branch if the player is NOT "below the Door of Rock...." (0xc9)
0x0563 (0x0d83): (0x19) If var[0x0b] != (constant) 0xc9 then Goto 0x056b

/ Player IS at the "Door of Rock"

/ Branch if the Door of Rock is NOT open (0x01)
/ var[0x01] is the constant 0x01
0x0567 (0x0d87): (0x11) If var[0x44] != var[0x01] then Goto 0x0583

/ Door of Rock IS open

/ Branch if the player is NOT "below the Door of Gold...." (0xca)
0x056b (0x0d8b): (0x19) If var[0x0b] != (constant) 0xca then Goto 0x0573

/ Player IS at the "Door of Gold"

/ Branch if the Door of Gold is NOT open (0x01)
/ var[0x01] is the constant 0x01
0x056f (0x0d8f): (0x11) If var[0x45] != var[0x01] then Goto 0x0583

/ Branch if the player is NOT "below the Door of Silver...." (0xcb)
0x0573 (0x0d93): (0x19) If var[0x0b] != (constant) 0xcb then Goto 0x057b

/ Player IS at the "Door of Silver"

/ Branch if the Door of Silver is NOT open (0x01)
/ var[0x01] is the constant 0x01
0x0577 (0x0d97): (0x11) If var[0x46] != var[0x01] then Goto 0x0583

/ Branch if the player is NOT "below the Door of Glass...." (0xcc)
0x057b (0x0d9b): (0x19) If var[0x0b] != (constant) 0xcc then Goto 0x0586

/ Player IS at the "Door of Glass"

/ BUG - should be checking the status of the Door of Glass - the consequence
/ is that it does NOT print "The door is locked" for the Door of Glass

/ BUG - Branch if the Door of Silver is NOT open (0x01)
/ var[0x01] is the constant 0x01
0x057f (0x0d9f): (0x10) If var[0x46] == var[0x01] then Goto 0x0586

/ Set the location message to "The door is locked" (0xda)
0x0583 (0x0da3): (0x08) Set var[0x35] = (constant) 0xda

**************************************************************************

/ Branch if the player is NOT in one of the following locations:
/ 0xb0 : on a north-south path winding through a dank marsh. Bubbles of gas pop round you
/ 0xb1 : surrounded by a circle of thirteen standing stones on a small hill in the marsh. There is a dead silence
/ 0xb2 : lost in the marsh! There is no visible path
/ 0xb3 : on a narrow east-west path between pools of stinking water
/ 0xb4 : lost in the marsh. A light beckons in the east
/ 0xb5 : lost in the marsh
/ 0xb6 : in deadly quicksand
/ 0xb7 : lost in the marsh. A light flickers from the east
/ 0xb8 : deep in the marsh. You can see a lantern in the east
/ 0xb9 : deep in the marsh with no way out. Every way you look seems blocked by areas of quicksand. A Will o'Wisp dances overhead in triumph
/ 0xba : on a north-south path through the marsh
/ 0xbb : on a path deep in the marsh
/ 0xbc : lost in the marsh
/ 0xbd : on an east-west causeway through the marsh
/ 0xbe : in deadly quicksand
/ 0xbf : on an island outside the door of an ancient house. Lightning flashes, illuminating bats flying overhead, and gusts of wind rattle the flapping shutters
/ 0xc0 : in a ancient panelled entrance hall of a decaying house. Rats scurry behind the walls. There are doors to north and south
0x0586 (0x0da6): (0x1b) If var[0x0b] > (constant) 0xc0 then Goto 0x05a3
0x058a (0x0daa): (0x1a) If var[0x0b] < (constant) 0xb0 then Goto 0x05a3

/ Player IS in one of the marsh locations or island

/ Branch if the second supplementary message is already set
0x058e (0x0dae): (0x13) If var[0x1a] > var[0x15] then Goto 0x05b2

/ Second supplementary message is NOT set

/ Generate a random number 
0x0592 (0x0db2): (0x06) Function - Random - Set var[0x13]=<random number>

/ Branch if the random number is bigger than 20 (0x14) - player has a 21/256
/ chance of having the skeletal hand grab them approximately 8%
0x0595 (0x0db5): (0x1b) If var[0x13] > (constant) 0x14 then Goto 0x05b2

/ Set the second supplementary message to "A skeletal hand is gripping your 
/ leg and dragging you into the marsh!" (0xae)
0x0599 (0x0db9): (0x08) Set var[0x1a] = (constant) 0xae

/ Print the message "A skeletal hand is gripping your 
/ leg and dragging you into the marsh!" (0xae)
0x059c (0x0dbc): (0x04) Print message var[0x1a]

/ Set the number of turns until the skeletal hand kills the player to 3
/ var[0x03] is the constant 0x03
0x059e (0x0dbe): (0x09) Set var[0x28] = var[0x03]

/ Skip to the next check
0x05a1 (0x0dc1): (0x00) Goto 0x05b2

**************************************************************************

/ Branch if the second supplementary message is set to 
/ "A reflected face in the marsh looks back. Your gaze is locked!" (0xa8)
0x05a3 (0x0dc3): (0x18) If var[0x1a] == (constant) 0xa8 then Goto 0x05af

/ Branch if the second supplementary message is set to 
/ "A skeletal hand is gripping your leg and dragging you into the marsh!" (0xae)
0x05a7 (0x0dc7): (0x18) If var[0x1a] == (constant) 0xae then Goto 0x05af

/ Branch if the second supplementary message is NOT set to "You are surrounded
/ by cold shadowy ghosts which are feeding from your very life energy" (0xb1)
0x05ab (0x0dcb): (0x19) If var[0x1a] != (constant) 0xb1 then Goto 0x05b2

/ Message is set to "You are surrounded by cold shadowy ghosts which 
/ are feeding from your very life energy" (0xb1)

/ Reset the supplemental messsage to nothing (0x00)
/ var[0x15] is the constant 0x00
0x05af (0x0dcf): (0x09) Set var[0x1a] = var[0x15]

/ Branch if the player's location is after one of these:
/ 0x01 : lost in the forest
/ 0x02 : lost in the forest
/ 0x03 : lost in the forest
/ 0x04 : lost in the forest
/ 0x05 : lost in the forest beside a huge oak tree with branches resting on the ground
/ 0x06 : in dense forest, surrounded by clinging plants and small biting insects
/ 0x07 : at the end of a road from the north, outside a small brick building. A river flows south through a narrow valley and there is dense woodland all around
/ 0x08 : in a narrow north-south valley through the forest. A small stream, clogged by dead vegetation, seeps sluggishly south. A miasma of decay pervades the scene
/ 0x09 : in a north-south valley. A small steam flows from the north and seeps away into the swampy ground
/ 0x0a : in a 20 foot deep depression in the floor of a steep valley. The remains of an iron grate can just be made out, set into the ground, but it is blocked by concrete and has almost rusted away
/ 0x0b : stumbling over sharp stones in a steeply sloping gulley
/ 0x0c : at the top of a high cliff which slices across the land. Far below you are the southern lowlands: once a prosperous farming area but now devastated by drought, plague and war. A few animals roam the dry fields
/ 0x0d : on the steep east side of a valley, overgrown with brambles and stinging plants
/ 0x0e : at the base of a stone pinnacle which rises from the gloom of the trees into the sunlight above. A narrow path spirals round it, climbing upwards
/ 0x0f : on a road north of the building. All around is desolate scrub-land where sparse weeds strive for life in the poisoned ground
/ 0x10 : at the edge of the 'fertile' land. Nothing grows in the desert which stretches north as far as the eye can see. Heat haze blurs your vision, but you can just make out the shape of a high mountain within it
0x05b2 (0x0dd2): (0x1b) If var[0x0b] > (constant) 0x10 then Goto 0x05c8

/ Player is at one of the locations above

/ Branch if the second supplementary message is already set i.e. wolves will 
/ already be stalking the player
0x05b6 (0x0dd6): (0x13) If var[0x1a] > var[0x15] then Goto 0x05cf

/ Generate a random number
0x05ba (0x0dda): (0x06) Function - Random - Set var[0x13]=<random number>

/ Branch if the random number is greater than 5 (0x05)
/ var[0x05] is the constant 0x05
0x05bd (0x0ddd): (0x13) If var[0x13] > var[0x05] then Goto 0x05cf

/ Set the second supplemental message to "A pack of wolves emerges from the trees!"
0x05c1 (0x0de1): (0x08) Set var[0x1a] = (constant) 0x11

/ Print message  "\nA pack of wolves emerges from the trees! "
0x05c4 (0x0de4): (0x05) Print message (constant) 0x10

/ Skip ahead 
0x05c6 (0x0de6): (0x00) Goto 0x0641

**************************************************************************

/ Branch if the second supplemental message is set to "A pack of wolves 
/ is stalking you" (0x11)
0x05c8 (0x0de8): (0x19) If var[0x1a] != (constant) 0x11 then Goto 0x05cf

/ Reset the second supplemental message to nothing (0x00)
/ var[0x15] is the constant 0x00
0x05cc (0x0dec): (0x09) Set var[0x1a] = var[0x15]

/ Branch if the player is NOT in one of the following location:
/ 0x19 : at the top of a stone pinnacle high above the forest. A steep escarpment falls away to the south, leading down to once-fertile lowlands. A forest of tangled trees smothers the higher land around you and to the north is baked desert. A mountain rises above the sands, and you can just make out a stone tower on its slopes
/ 0x1a : on trackless desert
/ 0x1b : on trackless desert
/ 0x1c : on trackless desert
/ 0x1d : on trackless desert
/ 0x1e : on trackless desert
/ 0x1f : on trackless desert
/ 0x20 : on trackless desert beside a black pillar. The pillar is round, and perfectly smooth but for a single white dot half-way up
/ 0x21 : on trackless desert above a deep canyon. A small oasis sits in the bottom of the canyon, nestling at the foot of the southern cliffs below
/ 0x22 : on trackless desert south of a canyon
/ 0x23 : on trackless desert south of a canyon. A large flat-topped pyramid with steps on all sides rises from the desert, and to the east an outcrop ofpolished rock resists the shifting sands
/ 0x24 : inside a small temple to the sun god on the pyramid. It is surrounded by stone pillars and has a large central altar, but is roofless of course
/ 0x25 : on top of the pyramid outside a small temple
/ 0x26 : on a rocky outcrop overlooking the desert and the pyramid. A path leads down to the north into a chasm between the outcrop and its parent mountain
0x05cf (0x0def): (0x1a) If var[0x0b] < (constant) 0x19 then Goto 0x05d7
0x05d3 (0x0df3): (0x1b) If var[0x0b] > (constant) 0x26 then Goto 0x05da

/ Player IS at one of those locations

/ Note - this variable is never used
/ Reset var[0x47] to 0x0a
0x05d7 (0x0df7): (0x08) Set var[0x47] = (constant) 0x0a

**************************************************************************

/ Branch if the player is NOT at "outside a small door. A foul smell seeps 
/ from behind it" (0x48)
0x05da (0x0dfa): (0x19) If var[0x0b] != (constant) 0x48 then Goto 0x05e1

/ Player IS at "outside a small door. A foul smell seeps from behind it"

/ Reset the number of turns before the player is killed by the fearsome 
/ dark shape to zero (player won't be killed)
/ var[0x15] is the constant 0x00
0x05de (0x0dfe): (0x09) Set var[0x23] = var[0x15]

**************************************************************************

/ Branch if the player is NOT at one of the following locations:
/ 0x53 : in a quiet pool below the rapids and near a gravel beach
/ 0x54 : on a featureless lake-bed
/ 0x55 : on the lake-bed. A huge clam is firmly rooted to the rocks
/ 0x56 : on the lake bed
/ 0x57 : on the lake bed
/ 0x58 : on the lake bed above a deep dark trench
/ 0x59 : on the lake bed above a deep dark trench
0x05e1 (0x0e01): (0x1b) If var[0x0b] > (constant) 0x59 then Goto 0x05fb
0x05e5 (0x0e05): (0x1a) If var[0x0b] < (constant) 0x53 then Goto 0x05fb

/ Player IS at one of the location

/ Branch if the second supplemental message is already set 
0x05e9 (0x0e09): (0x13) If var[0x1a] > var[0x15] then Goto 0x0602

/ Generate a random number
0x05ed (0x0e0d): (0x06) Function - Random - Set var[0x13]=<random number>

/ Branch if the random number is greater than 10 (0x0a)
0x05f0 (0x0e10): (0x1b) If var[0x13] > (constant) 0x0a then Goto 0x0602

/ Number was 10 or less

/ Set the message to print to "A shark circles round, eying you" (0x63)
0x05f4 (0x0e14): (0x08) Set var[0x1a] = (constant) 0x63

/ Print the shark message
0x05f7 (0x0e17): (0x04) Print message var[0x1a]

/ Skip ahead
0x05f9 (0x0e19): (0x00) Goto 0x0641

**************************************************************************

/ Branch if the second supplemental message is NOT set to "A shark circles 
/ round, eying you" (0x63)
0x05fb (0x0e1b): (0x19) If var[0x1a] != (constant) 0x63 then Goto 0x0602

/ Message is set to "A shark cicles round, eying you"

/ Reset the message to nothing (0x00)
0x05ff (0x0e1f): (0x09) Set var[0x1a] = var[0x15]

/ Branch if the player is underwater (0x01)
/ var[0x01] is the constant 0x01
0x0602 (0x0e22): (0x10) If var[0x1c] == var[0x01] then Goto 0x0617

/ Set the second word to the Jellyfish
0x0606 (0x0e26): (0x08) Set var[0x22] = (constant) 0x43

/ Get the location of the "luminous jelly-fish" (0x43)
0x0609 (0x0e29): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the "luminous jelly-fish" is NOT in the player's inventory (0xff)
0x060c (0x0e2c): (0x11) If var[0x11] != var[0x07] then Goto 0x062a

/ Jellyfish is in the inventory

/ Print message  "\nThe luminous jelly shrivels to nothing as it dries "
0x0610 (0x0e30): (0x05) Print message (constant) 0x6c

/ Remove the jelly-fish from the game
0x0612 (0x0e32): (0x01) Gosub 0x0e7f

/ Skip ahead
0x0615 (0x0e35): (0x00) Goto 0x062a

**************************************************************************

/ Branch ahead if the lamp is off (0x00)
/ var[0x15] is the constant 0x00
0x0617 (0x0e37): (0x10) If var[0x14] == var[0x15] then Goto 0x062a

/ Lamp IS on

/ Set the second word to the "lamp" (0x44)
0x061b (0x0e3b): (0x08) Set var[0x22] = (constant) 0x44

/ Get the location of the lamp
0x061e (0x0e3e): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the lamp is NOT in the player's inventory
0x0621 (0x0e41): (0x11) If var[0x11] != var[0x07] then Goto 0x062a

/ Print message  "\nThe water extinguishes your lamp "
0x0625 (0x0e45): (0x05) Print message (constant) 0x0a

/ Set the lamp to off (0x00)
/ var[0x15] is the constant 0x00
0x0627 (0x0e47): (0x09) Set var[0x14] = var[0x15]

/ Branch if the player IS "in deadly quicksand" (0xb6)
0x062a (0x0e4a): (0x18) If var[0x0b] == (constant) 0xb6 then Goto 0x0632

/ Branch if the player is NOT "in deadly quicksand" (0xbe)
0x062e (0x0e4e): (0x19) If var[0x0b] != (constant) 0xbe then Goto 0x0641

/ Player IS in one of the two quicksand locations

/ Set the temporary object id to the "water walking boots" 
0x0632 (0x0e52): (0x08) Set var[0x10] = (constant) 0x38

/ Get the location of the water walking boots
0x0635 (0x0e55): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the boots are NOT in the player's inventory (0xff)
/ var[0x07] is the constant 0xff
0x0638 (0x0e58): (0x10) If var[0x11] == var[0x07] then Goto 0x0641

/ Print message  "\nThe quicksand sucks you down! "
0x063c (0x0e5c): (0x05) Print message (constant) 0xac

/ Kill the player
0x063e (0x0e5e): (0x00) Goto 0x0d64
**************************************************************************

/ Set the first supplementary message to the location message
0x0641 (0x0e61): (0x09) Set var[0x19] = var[0x35]

/ Location message processing complete
0x0644 (0x0e64): (0x02) Return

**************************************************************************
* Command: north/northeast/neast/east/south/seast/southeast/swest/southwest
*          west/nwest/northwest/climb/upwards/downwards/inside/into/outside/
*          cross/yes
**************************************************************************

/ Check to see if the player can move in the required direction from this location
0x0645 (0x0e65): (0x0f) Exits - check location var[0x0b] can move var[0x2d] - exit flags in var[0x48] and target location (or 0x00) in var[0x18]

/ REMINDER
/ var[0x48] contains the exit flags for the direction that player is trying to move
/ var[0x18] contains the target location that it would take it to if the a-code allows it
/ or 0x00 if not allowed

/ Branch if the target location is not null (0x00)
/ var[0x15] is the constant 0x00
0x064a (0x0e6a): (0x13) If var[0x18] > var[0x15] then Goto 0x0653

/ Target location is null

/ Print message  "You cannot move in that direction "
0x064e (0x0e6e): (0x05) Print message (constant) 0x3c

/ Get the player's next command 
0x0650 (0x0e70): (0x00) Goto 0x009a

**************************************************************************
* Check If the player has tied the roped to get to the collapsing ledge
**************************************************************************

/ Branch if the first supplementary message is NOT "There is a small
/ stalagmite near the edge" (0xd1)
0x0653 (0x0e73): (0x19) If var[0x19] != (constant) 0xd1 then Goto 0x0660

/ Roped has NOT been tied to the stalagmite yet

/ Branch if the location the player is trying to move to is NOT "on a ledge. 
/ It collapses, hurling you into a fast-flowing underground river! You are swept along 
/ helplessly" (0x4c)
0x0657 (0x0e77): (0x19) If var[0x18] != (constant) 0x4c then Goto 0x0660

/ Player has not yet tied the rope and is trying to move to the collapsible ledge

/ Print message  "You cannot move in that direction "   
0x065b (0x0e7b): (0x05) Print message (constant) 0x3c

/ Get the player's next command 
0x065d (0x0e7d): (0x00) Goto 0x009a

**************************************************************************
* Check to see if the player is trying to move into the looted treasure cave
**************************************************************************

/ Branch if the location the player is trying to move to is NOT "in a looted
/ treasure cave. It has been cleaned out completely and on one wall
/ is written "Ali wuz here"!"
0x0660 (0x0e80): (0x19) If var[0x18] != (constant) 0x31 then Goto 0x066a

/ Player IS trying to move to the looted treasure cave

/ Branch if the player HAS already said "Open sesame" (0x01)
/ var[0x01] is the constant 0x01
0x0664 (0x0e84): (0x10) If var[0x39] == var[0x01] then Goto 0x066a

/ Player has NOT said "open sesame" and is blockedby the stone slab 
/ so print "You cannot move in that direction "
0x0668 (0x0e88): (0x00) Goto 0x064e

**************************************************************************

/ Branch if the target destination IS "sitting on a gnarled tree-branch 
/ which is half-split from its parent trunk and resting on the ground"
0x066a (0x0e8a): (0x18) If var[0x18] == (constant) 0x11 then Goto 0x0676

/ Branch if the player is NOT trying to move to "on a ledge along the side 
/ of a deep chasm, above a swift river" (0x63)
0x066e (0x0e8e): (0x19) If var[0x18] != (constant) 0x63 then Goto 0x067f

/ Branch if the player is currently in trying to move to "on a ledge above
/ a series of rapids" (0x64)
0x0672 (0x0e92): (0x18) If var[0x0b] == (constant) 0x64 then Goto 0x067f

/ Player is either trying to move to "sitting on a gnarled tree" 
/ OR
/ is trying to move from NOT "on a ledge along the side of a deep chasm,
/ above a swift river" TO "on a ledge above a series of rapids"
/ (Player will be moving up from the river)

/ Branch if the player has nothing in their inventory (0x00)
/ and allows the move
/ var[0x15] is the constant 0x00
0x0676 (0x0e96): (0x10) If var[0x49] == var[0x15] then Goto 0x067f

/ Player is carrying too much to climb up

/ Print message  "You're carrying too much to climb up "
0x067a (0x0e9a): (0x05) Print message (constant) 0x29

/ Get the player's next command 
0x067c (0x0e9c): (0x00) Goto 0x009a

**************************************************************************
* Check to see if the unicorn has been given the rare orchid to clear
* the path in the forest
**************************************************************************

/ Branch if the target destination is NOT "on a path through dense forest"
0x067f (0x0e9f): (0x19) If var[0x18] != (constant) 0x16 then Goto 0x068c

/ Player IS trying to move to "on a oarth through dense forest"

/ Branch if the player HAS given the rare orchid to the unicorn (they can pass)
0x0683 (0x0ea3): (0x10) If var[0x36] == var[0x01] then Goto 0x068c

/ Print message  "Tree branches bend to block the path "
0x0687 (0x0ea7): (0x05) Print message (constant) 0x14

/ Get the player's next command 
0x0689 (0x0ea9): (0x00) Goto 0x009a

**************************************************************************
* Check to see if the player is trying to move past the Sphinx
**************************************************************************

/ Branch if the target destination is NOT "on top of the pyramid outside 
/ a small temple" (0x25)
0x068c (0x0eac): (0x19) If var[0x18] != (constant) 0x25 then Goto 0x0699

/ Branch if "the gigantic worm has eaten the sphinx" (0x01) and allow passage
/ var[0x15] is the constant 0x01
0x0690 (0x0eb0): (0x10) If var[0x1f] == var[0x01] then Goto 0x0699

/ Print message  "You must be joking! That sphinx looks dangerous! "
0x0694 (0x0eb4): (0x05) Print message (constant) 0x4f

/ Get the player's next command 
0x0696 (0x0eb6): (0x00) Goto 0x009a

**************************************************************************
* Check to see if the player is trying to move past the snakes
**************************************************************************

/ Branch if the target desitnation is NOT "inside a small temple to the sun 
/ god on the pyramid." (0x24)
0x0699 (0x0eb9): (0x19) If var[0x18] != (constant) 0x24 then Goto 0x06a6

/ Branch if the snakes have been danced away by the pipes and allow passage
0x069d (0x0ebd): (0x10) If var[0x37] == var[0x01] then Goto 0x06a6

/ Snakes are still in place

/ Print message  "The snakes rear up, spitting venom, and block your way to the temple "
0x06a1 (0x0ec1): (0x05) Print message (constant) 0x50

/ Get the player's next command 
0x06a3 (0x0ec3): (0x00) Goto 0x009a

**************************************************************************
* Check if the player is trying to move past the Djinn
**************************************************************************

/ Branch if the target destination is NOT " in an oasis beside a deep pool 
/ of cool water"
0x06a6 (0x0ec6): (0x19) If var[0x18] != (constant) 0x2f then Goto 0x06af

/ Branch if the if the player has NOT opened the bag to blow the Djinn to 
/ the lamp (0x00) and process the Djinn's reaction
0x06aa (0x0eca): (0x10) If var[0x38] == var[0x15] then Goto 0x0e09

/ Player HAS open the Djinn's bag and blow him away

**************************************************************************
* Check if the player is trying to move past the giant
**************************************************************************

/ Branch if the first supplementary message is "A giant sits in the middle 
/ of the path..." (0xc5)
0x06af (0x0ecf): (0x19) If var[0x19] != (constant) 0xc5 then Goto 0x06bc

/ Branch if the player is NOT trying to move to "on a track up the mountain" (0x38)
0x06b3 (0x0ed3): (0x19) If var[0x18] != (constant) 0x38 then Goto 0x06bc

/ Print message  "The giant picks you up in one hand and carries you off for
/ lunch" (0x3f)
0x06b7 (0x0ed7): (0x05) Print message (constant) 0x3f

/ Kill the player
0x06b9 (0x0ed9): (0x00) Goto 0x0d64

**************************************************************************
* Check to see if the player is trying to move through the door
* "...north of the crater lake..." and see if it's oiled and unlocked
* and they are not carrying any weapons
**************************************************************************

/ Branch if the target destination is after 
0x06bc (0x0edc): (0x1b) If var[0x18] > (constant) 0xcd then Goto 0x0703

/ Branch if the player's target destination is one of the following
/ 0xca : below the Door of Gold. A small opening in the door is just large enough to take one of the Stones
/ 0xcb : below the Door of Silver. A small opening is just large enough to take one of the Stones
/ 0xcc : below the Door of Glass. You can see nothing behind the door. An opening is large enough for a Stone
/ 0xcd : at the south of a magnificent throne-room
0x06c0 (0x0ee0): (0x1b) If var[0x18] > (constant) 0xc9 then Goto 0x06cc

/ Player's target destination is any location with an id less than 0xca

/ Branch if the player's current location is NOT the "south of a huge door on the north shore of the crater 
/ lake. A host of carved stone heads glare at you from above the door, seeming to follow your every move.
/ To the east is a second, smaller entrance, marked with a black dot" (0x65)
0x06c4 (0x0ee4): (0x19) If var[0x0b] != (constant) 0x65 then Goto 0x0703

/ Player's current location IS "south of a huge door on the north shore of 
/ the crater lake."

/ Branch if the player's destination is NOT "at the south of a magnificent 
/ cave with holes all around. A huge door stands open behind you" (0x66)
0x06c8 (0x0ee8): (0x19) If var[0x18] != (constant) 0x66 then Goto 0x0703

/ Player is moving from "south of a huge door on the north shore of the crater lake..."
/ to "at the south of a magnificent cave with holes all around..."
/ OR 
/ the player is at one of the Door of <type>

/ Branch if the player has NOT yet oiled the door indicated by the location message
/ "The door is rusted solid" (0xd9) being set and don't allow the move
0x06cc (0x0eec): (0x18) If var[0x35] == (constant) 0xd9 then Goto 0x06d4

/ Branch if the location message is NOT "The door is locked" and 
/ check to see if they have any weapons (gargoyle will block the player if so)
0x06d0 (0x0ef0): (0x19) If var[0x35] != (constant) 0xda then Goto 0x06d9

/ Door is locked, player can't move that way
0x06d4 (0x0ef4): (0x04) Print message var[0x35]

/ Get the player's next command 
0x06d6 (0x0ef6): (0x00) Goto 0x009a

**************************************************************************
* Check to see if the player has at least one weapon in their inventory
* if they are trying to go North from the  "at the south of a magnificent 
* cave with holes all around. A huge door stands open behind you" (0x66)
* they will be blocked by the gargoyle slamming the door shut
**************************************************************************

/ Set the object in the second word to be the "ruby" (0x40)
0x06d9 (0x0ef9): (0x08) Set var[0x22] = (constant) 0x40

/ Check to see if the "ruby" is in the player's inventory
/ var[0x1b] will be set to 0x00 if it is NOT in the inventory
0x06dc (0x0efc): (0x01) Gosub 0x0f3a

/ Set the object in the second word to be the "sling" (0x4d)
0x06df (0x0eff): (0x08) Set var[0x22] = (constant) 0x4d

/ Check to see if the "sling" is in the player's inventory
/ var[0x1b] will be set to 0x00 if it is NOT in the inventory
0x06e2 (0x0f02): (0x01) Gosub 0x0f3a

/ Set the object in the second word to be the "sword" (0x50)
0x06e5 (0x0f05): (0x08) Set var[0x22] = (constant) 0x50

/ Check to see if the "sword" is in the player's inventory
/ var[0x1b] will be set to 0x00 if it is NOT in the inventory
0x06e8 (0x0f08): (0x01) Gosub 0x0f3a

/ Set the object in the second word to be the "trident" (0x52)
0x06eb (0x0f0b): (0x08) Set var[0x22] = (constant) 0x52

/ Check to see if the "trident" is in the player's inventory
/ var[0x1b] will be set to 0x00 if it is NOT in the inventory
0x06ee (0x0f0e): (0x01) Gosub 0x0f3a

/ Set the object in the second word to be the "wind-bag" (0x53)
0x06f1 (0x0f11): (0x08) Set var[0x22] = (constant) 0x53

/ Check to see if the "wind-bag" is in the player's inventory
/ var[0x1b] will be set to 0x00 if it is NOT in the inventory
0x06f4 (0x0f14): (0x01) Gosub 0x0f3a

/ Branch if the player has NO weapons in their inventory (0x01)
/ var[0x01] is the constant 0x01
0x06f7 (0x0f17): (0x10) If var[0x1b] == var[0x01] then Goto 0x0703

/ Player has at least one weapon in their inventory

/ Print message  ""ARMED INTRUDER! ARMED INTRUDER! ARMED INTRUDER!
/ ARMED INTRUDER! ARMED INTRUDER! ARMED INTRUDER!" yells a gargoyle 
/ overhead. The door slams "
0x06fb (0x0f1b): (0x05) Print message (constant) 0x6f

/ Set the door back to "locked" (0x00)
/ var[0x15] is the constant 0x00
0x06fd (0x0f1d): (0x09) Set var[0x3d] = var[0x15]

/ Get the player's next command 
0x0700 (0x0f20): (0x00) Goto 0x009a

**************************************************************************
* Check to see if the player is trying to cross the rope bridge with the
* earth-stone in their inventory - if so the orcs will start chasing the player
**************************************************************************

/ Branch if the player IS trying to move to "on a ledge which clings to 
/ the west wall of a large cavern" (0x75)
0x0703 (0x0f23): (0x18) If var[0x18] == (constant) 0x75 then Goto 0x070b

/ Player is NOT trying to move to "on a ledge which clings to the west wall of a large cavern" (0x75)

/ Branch if the target destination is NOT "at the entrance to an orc lair" (0x77)
0x0707 (0x0f27): (0x19) If var[0x18] != (constant) 0x77 then Goto 0x0727

/ Player's target destination IS "at the entrance to an orc lair" (0x77)

/ Branch if the player's current location IS "on a ledge which clings to 
/ the west wall of a large cavern" (0x75)
0x070b (0x0f2b): (0x18) If var[0x0b] == (constant) 0x75 then Goto 0x0713

 Player's current location is NOT "on a ledge which clings to 
/ the west wall of a large cavern" (0x75)

/ Branch if the player's current location is NOT "at the entrance 
/ to an orc lair" (0x77)
0x070f (0x0f2f): (0x19) If var[0x0b] != (constant) 0x77 then Goto 0x0727

/ Player is moving from "on a ledge which clings to the west wall of a large
/ cavern" (0x75) to "at the entrance to an orc lair" (0x77) 
/ or vice versa

/ Branch if the rope bridge has been severed (0x01) and stop the player movign
/ var[0x01] is the constant 0x01
0x0713 (0x0f33): (0x10) If var[0x3f] == var[0x01] then Goto 0x064e

/ Set the object in the second word to the "earth-stone" (0x33)
0x0718 (0x0f38): (0x08) Set var[0x22] = (constant) 0x33

/ Get the current location of the earth-stone
0x071b (0x0f3b): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the "earth-stone" is NOT in the player's inventory (0xff)
/ var[0x07] is the constant 0x0ff
0x071e (0x0f3e): (0x11) If var[0x11] != var[0x07] then Goto 0x0727

/ Player HAS the "earth-stone"

/ Print message  "As you cross the bridge the alarm is raised! A host of orcs 
/ rush onto the bridge after you "
0x0722 (0x0f42): (0x05) Print message (constant) 0x77

/ Player now chased by the orcs

/ Set the number of turns until the orcs catch the player to 3
/ var[0x03] is the constant 0x03
0x0724 (0x0f44): (0x09) Set var[0x26] = var[0x03]

**************************************************************************
* Check to see if the player is trying to move past the dragon to its lair
* or the cave overlooking the volcanic crater - if so, block the player
* if the dragon has not had its fire extinguished
**************************************************************************

/ Branch if the first location supplemental message is NOT set to "A dragon 
/ fills the cave!" (0xd4)
0x0727 (0x0f47): (0x19) If var[0x19] != (constant) 0xd4 then Goto 0x0734

/ Dragon is in the cave

/ Branch if the target destination IS "in a sloping corridoor lit from the 
/ west by a weird flickering light. The floor and walls feel warm to the touch" (0x7e)
/ and allow the player to move there
0x072b (0x0f4b): (0x18) If var[0x18] == (constant) 0x7e then Goto 0x0734

/ Player is trying to move to either the dragon's lair or the cave overlooking a huge
/ volcanic crater 

/ Print message  "The dragon's fire drives you back. It grins happily and settles itself,
/ watching you carefully "
0x072f (0x0f4f): (0x05) Print message (constant) 0x78

/ Get the player's next command 
0x0731 (0x0f51): (0x00) Goto 0x009a

**************************************************************************
* Check to see of the BALROG has trapped the player
**************************************************************************

/ Branch if the first location supplemental message IS set to "A BALROG
/ stands astride the bridge, holding its whip of flames. You are trapped!" (0x8f)
/ and stop the player moving in any direction
0x0734 (0x0f54): (0x18) If var[0x19] == (constant) 0x8f then Goto 0x064e

**************************************************************************
* Check to see if the player is trying to walk across the hot coals
* and stop them if the cloak has not been dropped in that location
**************************************************************************

/ Branch if the target destination is NOT "at a crossing between passages. 
/ The floor is made up of red-hot coals" and move to the next check
0x0739 (0x0f59): (0x19) If var[0x18] != (constant) 0x8e then Goto 0x074e

/ Set the temporary variable to the object id for the "insulating cloak" (0x3c)
0x073d (0x0f5d): (0x08) Set var[0x10] = (constant) 0x3c

/ Get the current location of the insulating cloak
0x0740 (0x0f60): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the insulating cloak has not been dropped over the hot coals 
/ i.e. its current location will be "at a crossing between passages...." (0x8e)
0x0743 (0x0f63): (0x10) If var[0x11] == var[0x18] then Goto 0x074c

/ Cloak is NOT in the location with the coals

/ Print message  "You must be joking! Those coals are red-hot! "
0x0747 (0x0f67): (0x05) Print message (constant) 0x89

/ Get the player's next command 
0x0749 (0x0f69): (0x00) Goto 0x009a

/ Cloak IS in the location with the coals

/ Print message  "\nFortunately your feet are protected "
0x074c (0x0f6c): (0x05) Print message (constant) 0x8a

**************************************************************************
* Check if the player is at the long barrow and will get chased by orcs
**************************************************************************

/ Branch if the player's destination is NOT "on a hill-top outside a 
/ long barrow" (0xa5)
0x074e (0x0f6e): (0x19) If var[0x18] != (constant) 0xa5 then Goto 0x0755

/ Player IS "on a hill-top outside a long barrow"

/ Set the number of turns until the orcs catch the player to 5
/ var[0x05] is the constant 5
0x0752 (0x0f72): (0x09) Set var[0x26] = var[0x05]

**************************************************************************
* Check if the player slides down the scree slope losing the orcs
**************************************************************************

/ Branch if the player's current location is NOT "on a hill-top outside a 
/ long barrow." (0xa5) and move to the next check
0x0755 (0x0f75): (0x19) If var[0x0b] != (constant) 0xa5 then Goto 0x0762

/ Player's current location IS "on a hill-top outside a long barrow."
0x0759 (0x0f79): (0x19) If var[0x18] != (constant) 0xa6 then Goto 0x0762

/ Print message  "You slide down a scree slope. The orcs daren't follow.. "
0x075d (0x0f7d): (0x05) Print message (constant) 0xa6

/ Set the number of turns until the orcs reach the player to 0 (no longer chasing)
/ var[0x15] is the constant 0x00
0x075f (0x0f7f): (0x09) Set var[0x26] = var[0x15]

**************************************************************************
* Check if the player has reached the circle of stones for the first time 
* if so the ghosts will appear and kill the player after 3 turns unless
* the brazier is thrown at them
**************************************************************************

/ Branch if the player's target destination is NOT "surrounded by a circle 
/ of thirteen standing stones on a small hill in the marsh" (0xb1)
0x0762 (0x0f82): (0x19) If var[0x18] != (constant) 0xb1 then Goto 0x0773

/ Player's target destination IS "surrounded by a circle of thirteen 
/ standing stones on a small hill in the marsh" (0xb1)

/ Branch if the ghosts have already appeared or have been banished (0x01)
/ var[0x01] is the constant 0x01
0x0766 (0x0f86): (0x10) If var[0x4a] == var[0x01] then Goto 0x0773

/ Set the status of the ghosts to they have appeared (0x01)
/ var[0x01] is the constant 0x01
0x076a (0x0f8a): (0x09) Set var[0x4a] = var[0x01]

/ Set the number of turns until the player is caught by the ghosts to 3
/ var[0x03] is the constant 0x03
0x076d (0x0f8d): (0x09) Set var[0x28] = var[0x03]

/ Set the second supplementary message to "You are surrounded by cold
/ shadowy ghosts which are feeding from your very life energy" (0xb1)
0x0770 (0x0f90): (0x08) Set var[0x1a] = (constant) 0xb1

**************************************************************************
* Check if the player is held securely and cannot move
**************************************************************************

/ Branch if the second supplementary message IS "A skeletal hand is 
/ gripping your leg and dragging you into the marsh!" (0xae) and
/ print the message that they cannot move
0x0773 (0x0f93): (0x18) If var[0x1a] == (constant) 0xae then Goto 0x0783

/ Branch if the second supplementary message IS "A reflected face in the 
/ marsh looks back. Your gaze is locked!" (0xa8) and
/ print the message that they cannot move
0x0777 (0x0f97): (0x18) If var[0x1a] == (constant) 0xa8 then Goto 0x0783

/ Branch if the second supplementary message IS "You stand before the 
/ throne where the Demon Lord sits laughing. You cannot move!" and
/ print the message that they cannot move
0x077b (0x0f9b): (0x18) If var[0x19] == (constant) 0xba then Goto 0x0783

/ Branch if the second supplemental message is NOT "The Demon Lord freezes
/ you with a look: "You will still fail!", he snarls, "No amulet can work
/ so close to the centre of my power."  (0xbf)
0x077f (0x0f9f): (0x19) If var[0x19] != (constant) 0xbf then Goto 0x0788

/ Player IS being held securely 

/ Print message  "You cannot move! "
0x0783 (0x0fa3): (0x05) Print message (constant) 0xb0

/ Get the player's next command 
0x0785 (0x0fa5): (0x00) Goto 0x009a

**************************************************************************
* Process if the vampire is in the location
**************************************************************************

/ Branch if the player is NOT "...in the main hall..." (0xc1)
0x0788 (0x0fa8): (0x19) If var[0x18] != (constant) 0xc1 then Goto 0x07a0

/ Player IS in the main hall

/ Branch if the vampire has already fled from the game (0x01)
/ var[0x01] is the constant 0x01
0x078c (0x0fac): (0x10) If var[0x4b] == var[0x01] then Goto 0x07a0

/ Vampire has NOT yet banished

/ Print message  "\nA cloaked figure stands at the back of the hall. It walks slowly forwards and then springs! "
0x0790 (0x0fb0): (0x05) Print message (constant) 0xb5

/ Branch if the player has eaten the onion/garlic (0x01)
/ var[0x01] is a constant 0x01
0x0792 (0x0fb2): (0x10) If var[0x4c] == var[0x01] then Goto 0x079b

/ Player has NOT eaten the onion/garlic

/ Print message  ""I'm so glad that someone has finally dropped in for a bite. Just tilt your head to one side..." "
0x0796 (0x0fb6): (0x05) Print message (constant) 0xb7

/ Kill the player
0x0798 (0x0fb8): (0x00) Goto 0x0d64

/ Player has eaten the onion/garlic

/ Print message  "'Ugh! Garlic! I'm leaving!' The vampire flees "
0x079b (0x0fbb): (0x05) Print message (constant) 0xb6

/ Set the status of the vampire to "fled" (0x01)
/ var[0x01] is the constant 0x01
0x079d (0x0fbd): (0x09) Set var[0x4b] = var[0x01]

**************************************************************************
* Process if the orcs run past the player if they are hidden
**************************************************************************

/ Branch if the player's current location is NOT " hidden in a curtained
/ alcove" (0xdb)
0x07a0 (0x0fc0): (0x19) If var[0x18] != (constant) 0xdb then Goto 0x07b0

/ Branch if the orcs have already ran past the player and stopped pursuing (0x01)
/ var[0x15] is the constant 0x00
0x07a4 (0x0fc4): (0x11) If var[0x3e] != var[0x15] then Goto 0x07b0

/ Orcs have NOT ran past the player yet

/ Print message  "The orcs run past and the sound of pursuit dies away "
0x07a8 (0x0fc8): (0x05) Print message (constant) 0xbe

/ Set the status of the orcs to "ran past the player" (0x01)
/ var[0x01] is the constant 0x01
0x07aa (0x0fca): (0x09) Set var[0x3e] = var[0x01]

/ Reset the number of turns to 20 turns (0x14) as they have lost track
/ of the player for now....
0x07ad (0x0fcd): (0x08) Set var[0x26] = (constant) 0x14

/ Set the current location to the target location (move the player)
0x07b0 (0x0fd0): (0x09) Set var[0x0b] = var[0x18]

/ Decrement the number of turns until the gigantic worm reaches the player
/ - it will actually be a decrement of 1 as it's incremented by 1 each turn
/ var[0x02] is the constant 0x02
0x07b3 (0x0fd3): (0x0b) Set var[0x0d] -= var[0x02]

/ Branch if this is NOT a teleporation between a black and a white dot
0x07b6 (0x0fd6): (0x12) If var[0x48] < var[0x02] then Goto 0x07bf

/ Print message  "\nThere is a sensation of rapid movement.. "
0x07ba (0x0fda): (0x05) Print message (constant) 0x6e

/ Set the number of turns that the orcs will catch the player to zero (0x00)
/ var[0x15] is the constant 0x00
0x07bc (0x0fdc): (0x09) Set var[0x26] = var[0x15]

/ Print the location description
0x07bf (0x0fdf): (0x00) Goto 0x004b

*************************************************************************
* Command: get/take/catch/wear
*************************************************************************

/ Set the description offset for the objects to 0x00
/ var[0x15] is the constant 0x00
0x07c2 (0x0fe2): (0x09) Set var[0x17] = var[0x15]

/ Check to see if the item is the "insulating cloak" and if it 
/ can be picked up - if it's on the floor in any of the hot rooms 
/ the player will NOT be able to picked it up and var[0x1b] will be 
/ set to 0x00. If it's NOT the cloak, it just checks to see if the 
/ object is in the same location as the player or not and var[0x1b] 
/ will reflect this
0x07c5 (0x0fe5): (0x01) Gosub 0x0e91

/ Branch if the object was the "insulating cloak" and cannot be picked up
/ and get the next command
/ var[0x15] is the constant 0x00
0x07c8 (0x0fe8): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Branch if the player has less than four inventory items, and
/ let them pick up the object (max 4)
/ var[0x04] is the constant 0x04
0x07cd (0x0fed): (0x12) If var[0x49] < var[0x04] then Goto 0x07d6

/ Player already has 4 object in the inventory

/ Print message  "Your hands are full "
0x07d1 (0x0ff1): (0x05) Print message (constant) 0x24

/ Get the player's next command
0x07d3 (0x0ff3): (0x00) Goto 0x009a

**************************************************************************

/ Branch if if the object in the second word is NOT the "rare orchid" (0x47)
0x07d6 (0x0ff6): (0x19) If var[0x22] != (constant) 0x47 then Goto 0x07e3

/ Branch if the first supplementary message is NOT "The orchid is two foot 
/ above your reach" (0x2a)
0x07da (0x0ffa): (0x19) If var[0x19] != (constant) 0x2a then Goto 0x07e3

/ Orchid is too high to reach

/ Print "The orchid is two foot above your reach"
0x07de (0x0ffe): (0x04) Print message var[0x19]

/ Get the player's next command
0x07e0 (0x1000): (0x00) Goto 0x009a

**************************************************************************

/ Branch if if the object in the second word is NOT the "snowman" (0x4e)
0x07e3 (0x1003): (0x19) If var[0x22] != (constant) 0x4e then Goto 0x07f0

/ Branch if the first supplementary message is NOT "The snowman is chained 
/ to the mountain" (0xd0)
0x07e7 (0x1007): (0x19) If var[0x19] != (constant) 0xd0 then Goto 0x07f0

/ Snowman is chained to the mountain

/ Print "The snowman is chained to the mountain"
0x07eb (0x100b): (0x04) Print message var[0x19]

/ Get the player's next command 
0x07ed (0x100d): (0x00) Goto 0x009a

**************************************************************************

/ Branch if if the object in the second word is NOT the "jelly-fish" (0x43)
0x07f0 (0x1010): (0x19) If var[0x22] != (constant) 0x43 then Goto 0x0803

/ Player is trying to get the "jelly-fish"

/ Set the temporary variableto the object id for the "net" (0x45)
0x07f4 (0x1014): (0x08) Set var[0x10] = (constant) 0x45

/ Get the current location of the net
0x07f7 (0x1017): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the net is in the player's inventory (0xff)
/ var[0x07] is the constant 0xff and allow the pick up
0x07fa (0x101a): (0x10) If var[0x11] == var[0x07] then Goto 0x0803

/ Player does NOT have the net 

/ Print message  "The jelly floats just out of reach "
0x07fe (0x101e): (0x05) Print message (constant) 0x67

/ Get the player's next command 
0x0800 (0x1020): (0x00) Goto 0x009a

**************************************************************************

/ Branch if if the object in the second word is NOT the "earth-stone" (0x33)
0x0803 (0x1023): (0x19) If var[0x22] != (constant) 0x33 then Goto 0x082a

/ Object IS the "earth-stone"

/ Branch if the player's current location is NOT "in the lair of a giant 
/ spider, surrounded by a maze of web strands" (0x6b)
0x0807 (0x1027): (0x19) If var[0x0b] != (constant) 0x6b then Goto 0x082a

/ Player IS picking up the earth-stone and IS in the spider's lair

/ Print message  "An enormous spider leaps out as you reach for the stone! "
0x080b (0x102b): (0x05) Print message (constant) 0x74

/ Set the temporary variable to the object id for the "sword" (0x50)
0x080d (0x102d): (0x08) Set var[0x10] = (constant) 0x50

/ Get the location of the "sword"
0x0810 (0x1030): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the sword is NOT in the player's inventory (0xff) and 
/ don't kill the player
/ var[0x07] is the constant 0xff
0x0813 (0x1033): (0x10) If var[0x11] == var[0x07] then Goto 0x081c

/ Player does NOT have the sword 

/ Print message  "You are defenceless! It bites you.. "
0x0817 (0x1037): (0x05) Print message (constant) 0x75

/ Kill the player
0x0819 (0x1039): (0x00) Goto 0x0d64

**************************************************************************

/ Print message  "You fight it off with your sword but the Earth-Stone is lost! Far below, an orc snatches a small object and runs away south-west "
0x081c (0x103c): (0x05) Print message (constant) 0x76

/ Move the earth-stone to the tiny store room

/ Set the temporary variable to the location "in a tiny store-room" (0x7c)
0x081e (0x103e): (0x08) Set var[0x13] = (constant) 0x7c

/ Set the earth-stone's location to the tiny store room
0x0821 (0x1041): (0xe2) Set list#2[var[0x22]] = var[0x13] (list address 0x0820)

/ Set the flag that the earth-stone has been taken by the orcs
/ var[0x01] is the constant 0x01
0x0824 (0x1044): (0x09) Set var[0x27] = var[0x01]

/ Get the player's next command 
0x0827 (0x1047): (0x00) Goto 0x009a

**************************************************************************

/ Set the location of the object to the player's inventory (0xff)
/ var[0x07] is the constant 0xff
0x082a (0x104a): (0xe2) Set list#2[var[0x22]] = var[0x07] (list address 0x0820)

/ Increment the number of items in the player's inventory
0x082d (0x104d): (0x0a) Set var[0x49] += var[0x01]

/ Branch if the object just placed in the inventory is NOT the brazier (0x3a)
0x0830 (0x1050): (0x19) If var[0x22] != (constant) 0x3a then Goto 0x0836

/ Object IS the brazier 

/ Print message  "The brazier shrinks into a tiny ornament "
0x0834 (0x1054): (0x05) Print message (constant) 0xa4

/ Branch if the object just placed in the inventory is NOT the lung-fish
/ and get the player's next command 
0x0836 (0x1056): (0x19) If var[0x22] != (constant) 0x41 then Goto 0x009a

/ Object IS the lung-fish`

/ Getting the lung-fish token flips the status of either being 
/ able to breathe in air (0x00) or underwater (0x01)

/ Set the temporary variable to 1
/ var[0x01] is the constant 0x01
0x083b (0x105b): (0x09) Set var[0x13] = var[0x01]

/ Subtract the current status of the lung-fish 
0x083e (0x105e): (0x0b) Set var[0x13] -= var[0x1d]

/ Set the status to the new value
0x0841 (0x1061): (0x09) Set var[0x1d] = var[0x13]

/ Get the player's next command 
0x0844 (0x1064): (0x00) Goto 0x009a

**************************************************************************
* Command: drop/free
**************************************************************************

/ Check to see if it's a droppable object and if it's in the player's inventory
/ Sets var[0x1b]
0x0847 (0x1067): (0x01) Gosub 0x0ec7

/ Branch if the object is NOT droppable or NOT in the player's inventory
/ and get the player's next command 
0x084a (0x106a): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Player has the object

/ Branch if the location is NOT "at the west end of an underwater trench. 
/ A swift current flows away through a small gap in the rocks" (0x5e)
0x084f (0x106f): (0x19) If var[0x0b] != (constant) 0x5e then Goto 0x085a

/ Player IS in the underwater trench with the small gap

/ Print message  "The current sucks it down a hole! "
0x0853 (0x1073): (0x05) Print message (constant) 0x6d

/ Set the target destination to the "deadly quicksand" (0xbe)
0x0855 (0x1075): (0x08) Set var[0x18] = (constant) 0xbe

/ Move the object to the "deadly quicksand" (0xbe)
0x0858 (0x1078): (0x00) Goto 0x0865

**************************************************************************

/ Branch if the player's location is NOT one of the following:
/ 0x4c : on a ledge. It collapses, hurling you into a fast-flowing underground river! You are swept along helplessly
/ 0x4d : in a raging torrent
/ 0x4e  : buffeted by the swift current
/ 0x4f  : swept round a bend in the river
/ 0x50  : in a series of rapids
/ 0x51  : on the brink of a stretch of rapids
/ 0x52  : tossed around by the rapids
0x085a (0x107a): (0x1a) If var[0x0b] < (constant) 0x4c then Goto 0x0865
0x085e (0x107e): (0x1b) If var[0x0b] > (constant) 0x52 then Goto 0x0865

/ Player IS in one of the rapids locations

/ Set the target destination to "on a small gravel beach to the south
/ of a lake in a volcanic crater. You can see a door on the opposite 
/ shore, almost hidden in deep shadows" (0x62)
0x0862 (0x1082): (0x08) Set var[0x18] = (constant) 0x62

/ Branch if the second word (item to be dropped) IS the "ruby" (0x40) and 
/ process the player dropping the ruby 
0x0865 (0x1085): (0x18) If var[0x22] == (constant) 0x40 then Goto 0x0db0

/ Branch if the second word (item to be dropped) is NOT the "stick" (0x49)
0x086a (0x108a): (0x19) If var[0x22] != (constant) 0x49 then Goto 0x0880

/ Second word is the "crooked stick"

/ Print message  "\nThe stick grows incredibly as it hits the ground. Buds form,
/ leaves burst from them and drink in the light, and then the stick is a mass
/ of flowers! Fruit quickly swells and falls onto the ground and the leaves are
/ shed. It is just a stick again "
0x086e (0x108e): (0x05) Print message (constant) 0x2f

/ Set the temporary variable to the object id for the "fruit" (0x42)
0x0870 (0x1090): (0x08) Set var[0x10] = (constant) 0x42

/ Get the current location of the "fruit" (0x42)
0x0873 (0x1093): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the fruit is NOT in the player's inventory (0xff)
/ var[0x07] is the constant 0xff
0x0876 (0x1096): (0x11) If var[0x11] != var[0x07] then Goto 0x087d

/ Reduce the number of items in the player's inventory by 1
/ var[0x01] is the constant 0x01
0x087a (0x109a): (0x0b) Set var[0x49] -= var[0x01]

/ Move the fruit to the current location OR the small gravel beach if the 
/ player was in the rapids
0x087d (0x109d): (0xe2) Set list#2[var[0x10]] = var[0x18] (list address 0x0820)

**************************************************************************

/ Branch if the second word is NOT the "trident" (0x52)
0x0880 (0x10a0): (0x19) If var[0x22] != (constant) 0x52 then Goto 0x0886

/ Print message  "\nWater bubbles from the ground!\n "
0x0884 (0x10a4): (0x05) Print message (constant) 0x5a

**************************************************************************

/ Branch if the player is NOT in the cave with the dragon filling the cave
/ The first supplementary message will be set to "A dragon fills the cave (0xd4)
0x0886 (0x10a6): (0x19) If var[0x19] != (constant) 0xd4 then Goto 0x089c

/ Player is with the dragon filling the cave
/ Regardless of object, it will get eaten

/ Print message  "The dragon stretches and swallows it in one gulp! "
0x088a (0x10aa): (0x05) Print message (constant) 0x79

/ Set the destination location to out of game (0xe2)
/ var[0x08] is the constant 0xe2
0x088c (0x10ac): (0x09) Set var[0x18] = var[0x08]

/ Branch if the second word is NOT the "bottle" (0x39)
0x088f (0x10af): (0x19) If var[0x22] != (constant) 0x39 then Goto 0x089c

/ Branch if the bottle is not full of water (0x02)
/ var[0x02] is the constant 0x02
0x0893 (0x10b3): (0x12) If var[0x0a] < var[0x02] then Goto 0x089c

/ Bottle contains water (0x02)

/ Print message  "A belch of steam explodes from the dragon's mouth. It hiccoughs and backs away, coughing smoke "
0x0897 (0x10b7): (0x05) Print message (constant) 0x7a

/ Set the status of the dragon to "fire has been extinguished"(0x01)
/ var[0x01] is the constant 0x01
0x0899 (0x10b9): (0x09) Set var[0x40] = var[0x01]

**************************************************************************

/ Branch if the second word (object to be dropped) is NOT the "insulating cloak" (0x3c)
0x089c (0x10bc): (0x19) If var[0x22] != (constant) 0x3c then Goto 0x08b5

/ Object being dropped is the insulating "cloak"

/ Branch if the player IS "in a hot room. The north door is marked with 
/ a black dot" (0x8f)
0x08a0 (0x10c0): (0x18) If var[0x0b] == (constant) 0x8f then Goto 0x08b0

/ Branch if the player IS "in an ornate room decorated with symbols of infinity. 
/ A nest burns on a marble plinth in the centre of the room: yet it is not 
/ consumed, and neither does it give off any smoke or heat" (0x90) and cover the coals
0x08a4 (0x10c4): (0x18) If var[0x0b] == (constant) 0x90 then Goto 0x08b0

/ Branch if the player IS "in a hot east-west corridor. To the east is a 
/ bed of glowing coals" (0x91) and cover the coals
0x08a8 (0x10c8): (0x18) If var[0x0b] == (constant) 0x91 then Goto 0x08b0

/ Branch if the player is NOT  "iQ a very hot passage. The floor is covered by hot 
/ coals to the west" (0x96) and don't cover the coals
0x08ac (0x10cc): (0x19) If var[0x0b] != (constant) 0x96 then Goto 0x08b5

/ Player IS in 0x8f, 0x90, 0x91 or 0x96

/ Print message  "The cloak covers the coals, shutting off their heat "
0x08b0 (0x10d0): (0x05) Print message (constant) 0x8b

/ Set the destination location to "at a crossing between passages. 
/ The floor is made up of red-hot coals" (0x8e) as this is where the cloak
/ ends up when it is thrown/dropped
0x08b2 (0x10d2): (0x08) Set var[0x18] = (constant) 0x8e

**************************************************************************

/ Branch if the second word (item to be dropped) is NOT the "egg" (0x3e)
0x08b5 (0x10d5): (0x19) If var[0x22] != (constant) 0x3e then Goto 0x08c5

/ Second word IS the egg

/ Branch if the player's current location is NOT "in an ornate room 
/ decorated with symbols of infinity. A nest burns on a marble plinth 
/ in the centre of the room: yet it is not consumed, and neither does
/ it give off any smoke or heat" (0x90)
0x08b9 (0x10d9): (0x19) If var[0x0b] != (constant) 0x90 then Goto 0x08c5

/ Player is dropping the egg in the ornate room with the nest

/ Print message  "The egg falls into the nest which burns brighter, throwing up a pillar of sparks which rises to the ceiling. Then a shape seems to come together within the flames, getting ever clearer. A proud bird flies from the now-fading fire: the PHOENIX is born again! "
0x08bd (0x10dd): (0x05) Print message (constant) 0x8d

/ Set the target destination to "out of the game" (0xe2)
0x08bf (0x10df): (0x09) Set var[0x18] = var[0x08]

/ Set the status of the phoenix to risen (0x01)
/ var[0x01] is the constant 0x01
0x08c2 (0x10e2): (0x09) Set var[0x2a] = var[0x01]

**************************************************************************

/ Branch if the second word is NOT the "brazier" (0x3a)
0x08c5 (0x10e5): (0x19) If var[0x22] != (constant) 0x3a then Goto 0x08d7

/ Second word (object being dropped is the brazier)

/ Print message  "The brazier expands, giving out a welcome warmth "
0x08c9 (0x10e9): (0x05) Print message (constant) 0xa5

/ Reset the number of of turns before the player will die of exposure to none (0x00)
/ var[0x15] is the constant 0x00
0x08cb (0x10eb): (0x09) Set var[0x0f] = var[0x15]

/ Branch if the second supplementary message is NOT "You are surrounded by 
/ cold shadowy ghosts which are feeding from your very life energy" (0xb1)
0x08ce (0x10ee): (0x19) If var[0x1a] != (constant) 0xb1 then Goto 0x08d7

/ Player is surrounded by cold shadowy ghosts 

/ Print message  "\nThe blast of heat banishes the shadows "
0x08d2 (0x10f2): (0x05) Print message (constant) 0xb2

/ Rest the second supplementary message to nothing (0x00)
0x08d4 (0x10f4): (0x09) Set var[0x1a] = var[0x15]

/ Set the location of the object being dropped to the target destination
/ (could be the current location or something different depending on the 
/ logic above)
0x08d7 (0x10f7): (0xe2) Set list#2[var[0x22]] = var[0x18] (list address 0x0820)

/ Reduce the number of items in the inventory by 1
/ var[0x01] is the constant 0x01
0x08da (0x10fa): (0x0b) Set var[0x49] -= var[0x01]

**************************************************************************

/ Branch if the player is NOT locked in the marsh with "A reflected face 
/ in the marsh looks back. Your gaze is locked!" (0xa8)
0x08dd (0x10fd): (0x19) If var[0x1a] != (constant) 0xa8 then Goto 0x08e6

/ Player is locked in the marsh by their reflection

/ Print message  "\nRipples disrupt the reflection. You are free! "
0x08e1 (0x1101): (0x05) Print message (constant) 0xab

/ Set the second supplementary message to none (0x00)
/ var[0x15] is the constant 0x00
0x08e3 (0x1103): (0x09) Set var[0x1a] = var[0x15]

/ Get the player's next command 
0x08e6 (0x1106): (0x00) Goto 0x009a

**************************************************************************
* Command: inventory
**************************************************************************

/ Print message  "You have:\n "
0x08e9 (0x1109): (0x05) Print message (constant) 0x0b

/ Set the location to check for and print objects if they are there to 
/ the inventory (0xff)
/ var[0x77] is the constant 0xff
0x08eb (0x110b): (0x09) Set var[0x18] = var[0x07]

/ Set the object description offset to (0xaa) so that e.g. 
/ when added to 0x33 it makes 0xdd, the description entry for 
/ the earth stone
0x08ee (0x110e): (0x08) Set var[0x17] = (constant) 0xaa

/ Print all the objects in the inventory 
0x08f1 (0x1111): (0x01) Gosub 0x0edc

/ Branch if the count of items in the inventory is greater than zero (0x00)
/ and get the player's next command 
/ var[0x15] is the constant 0x00
0x08f4 (0x1114): (0x13) If var[0x1b] > var[0x15] then Goto 0x009a

/ No items in the inventory

/ Print message  "Nothing "
0x08f9 (0x1119): (0x05) Print message (constant) 0x0c

/ Get the player's next command 
0x08fb (0x111b): (0x00) Goto 0x009a

**************************************************************************
* Command: look
**************************************************************************

/ Branch if the Pheonix has NOT been reborn
0x08fe (0x111e): (0x10) If var[0x2a] == var[0x15] then Goto 0x0904

/ Print message  "The stately phoenix perches nearby, watching you "
0x0902 (0x1122): (0x05) Print message (constant) 0x8e

/ Branch if the player is NOT in the marsh
0x0904 (0x1124): (0x1a) If var[0x0b] < (constant) 0xb0 then Goto 0x0919
0x0908 (0x1128): (0x1b) If var[0x0b] > (constant) 0xbe then Goto 0x0919

/ Player IS in the marsh so check to see if they are locked by 
/ their own reflection

/ Generate a random number
0x090c (0x112c): (0x06) Function - Random - Set var[0x13]=<random number>

/ Branch if random number is greater than 50 (0x32)
0x090f (0x112f): (0x1b) If var[0x13] > (constant) 0x32 then Goto 0x0919

/ Set the first supplementary message to "A reflected face in the marsh 
/ looks back. Your gaze is locked!" (0xa8)
0x0913 (0x1133): (0x08) Set var[0x1a] = (constant) 0xa8

/ Set the number of turns until the player will be called to 0x04
/ var[0x04] is the constant 0x04
0x0916 (0x1136): (0x09) Set var[0x28] = var[0x04]

/ Print the location description
0x0919 (0x1139): (0x00) Goto 0x004b

**************************************************************************
* Command: throw
**************************************************************************

/ Check to see if it's a droppable object and if it's in the player's inventory
/ Sets var[0x1b]
0x091c (0x113c): (0x01) Gosub 0x0ec7

/ Branch if the object is NOT droppable or NOT in the player's inventory
/ and get the player's next command 
0x091f (0x113f): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Branch if the second supplementary message is NOT set to "A pack of wolves 
/ is stalking you" (0x11)
0x0924 (0x1144): (0x19) If var[0x1a] != (constant) 0x11 then Goto 0x092d

/ Wolaves are stalking the player, scare them off

/ Print message  "\nThe wolves are startled and run off "
0x0928 (0x1148): (0x05) Print message (constant) 0x13

/ Set the second supplementary message to nothing (0x00)
/ var[0x15] is the constant 0x00
0x092a (0x114a): (0x09) Set var[0x1a] = var[0x15]

/ Branch if the player is NOT " in a smelly cave: the sound of running water reverberates from the walls. A white dot is marked 
on the roof, and at the back of the cave is a sheer drop down into darkness" (0x40)
0x092d (0x114d): (0x19) If var[0x0b] != (constant) 0x40 then Goto 0x0936

/ Set the target destination to "on a small gravel beach to the south 
/ of a lake in a volcanic crater. You can see a door on the opposite 
/ shore, almost hidden in deep shadows" (0x62)
0x0931 (0x1151): (0x08) Set var[0x18] = (constant) 0x62

/ Print message  "\nIt lands with a splash in the distance "
0x0934 (0x1154): (0x05) Print message (constant) 0x52

/ Branch if the player is NOT "on a small ledge south of a small 
/ door marked with a black dot. There is a window in the wall above" (0xc2)
0x0936 (0x1156): (0x19) If var[0x0b] != (constant) 0xc2 then Goto 0x093f

/ Set the target destination to "on a dark granite ramp at the 
/ foot of the BLACK TOWER" (0xc3)
0x093a (0x115a): (0x08) Set var[0x18] = (constant) 0xc3

/ Print message  "\nIt lands with a splash in the distance "
0x093d (0x115d): (0x05) Print message (constant) 0x52

/ Get the current location of the item that is being thrown 
0x093f (0x115f): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ "Drop" the item in the target destination
0x0942 (0x1162): (0x00) Goto 0x0847

**************************************************************************
* Print that there is a puff of smoke and the location description and
* reset that number of turns the player has been unable to breathe to 0
**************************************************************************

/ Print message  "\nThere is a puff of orange smoke.. "
0x0945 (0x1165): (0x05) Print message (constant) 0x20

/ Set the number of turns that the player has been unable to breathe to 0
0x0947 (0x1167): (0x08) Set var[0x1e] = (constant) 0x00

/ Print the location description
0x094a (0x116a): (0x00) Goto 0x004b

**************************************************************************
* Command: quit/stop
**************************************************************************

/ Print message  "\nDo you really want to stop?\n "
0x094d (0x116d): (0x05) Print message (constant) 0x21

/ Get the player's response to the question
0x094f (0x116f): (0x07) Input - results in word1 var[0x2d], word2 var[0x22], word3 var[0x2e], count var[0x2f]

/ If the response was "N" or "No" it will match North (0x01)

/ Branch if the response was "no" and print the location description
0x0954 (0x1174): (0x10) If var[0x2d] == var[0x01] then Goto 0x004b

/ Branch if the response was "y" or "ye" or "yes" and process the print
/ the score and ask if they player wants to play again
0x0959 (0x1179): (0x18) If var[0x2d] == (constant) 0x0e then Goto 0x02b1

/ Print message  "\nPlease answer YES or NO\n "
0x095e (0x117e): (0x05) Print message (constant) 0x23

/ Loop back around this command
0x0960 (0x1180): (0x00) Goto 0x094d

**************************************************************************
* Command: light/on
**************************************************************************

/ Check to see if the second word is the lamp and the lamp is in the
/ player's inventory
0x0962 (0x1182): (0x01) Gosub 0x0980

/ Branch if the player does not have the lamp and get the player's next command 
0x0964 (0x1184): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Print message  "Your lamp is lit and shines brightly "
0x0969 (0x1189): (0x05) Print message (constant) 0x08

/ Set the status of the lamp to lit (0x01)
/ var[0x01] is the constant 0x01
0x096b (0x118b): (0x09) Set var[0x14] = var[0x01]

/ Print the location description
0x096e (0x118e): (0x00) Goto 0x004b

**************************************************************************
* Command: off
**************************************************************************

/ Check to see if the second word is the lamp and the lamp is in the
/ player's inventory
0x0971 (0x1191): (0x01) Gosub 0x0980

/ Branch if the player does not have the lamp and get the player's next command 
0x0973 (0x1193): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Print message  "Your lamp is off "
0x0978 (0x1198): (0x05) Print message (constant) 0x09
0x097a (0x119a): (0x09) Set var[0x14] = var[0x15]

/ Print the location description
0x097d (0x119d): (0x00) Goto 0x004b

**************************************************************************
* Check to see if the lamp or other object is in the player's inventory
* but only allow the lamp to be switched off - everything else gets a 
* "You can't do that"
**************************************************************************

/ Branch if the second word is NOT "North" (0x01) and don't set the second 
/ word to the lamp. Actually think this is just checking to see if there is a 
/ second word and should be 0x00 not 0x01
0x0980 (0x11a0): (0x1b) If var[0x22] > (constant) 0x01 then Goto 0x0987

/ Second word is "North" (it can never be North as the ids are sorted across the
/ words) or empty (0x00)

/ Set the second word to the lamp (0x44)
0x0984 (0x11a4): (0x08) Set var[0x22] = (constant) 0x44

/ Check to see if the object is in the player's inventory
0x0987 (0x11a7): (0x01) Gosub 0x0ec7

/ Branch if the second word is NOT the lamp and print "you can't do that"
0x098a (0x11aa): (0x19) If var[0x22] != (constant) 0x44 then Goto 0x0f1d

/ Lamp can be switched off

/ Return 
0x098f (0x11af): (0x02) Return

**************************************************************************
* Command: tie/attach/fasten
**************************************************************************

/ Branch if the second word is NOT the "coil of rope" (0x4a)  and print 
/ "you can't do that"
0x0990 (0x11b0): (0x19) If var[0x22] != (constant) 0x4a then Goto 0x0f1d

/ Second word IS the "coil of rope"

/ Check to see if the object is in the player's inventory
0x0995 (0x11b5): (0x01) Gosub 0x0ec7

/ Branch if the "coil of rope" is NOT in the player's inventory
/ and get the player's next command 
0x0998 (0x11b8): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Player has the "coil of rope"

/ Remove the "coil of rope" from the game
0x099d (0x11bd): (0x01) Gosub 0x0e7f

/ Set the status indicator that the rope has been tied to the stalagmite (0x01)
/ var[0x01] is the constant 0x01
0x09a0 (0x11c0): (0x09) Set var[0x3b] = var[0x01]

/ Print the location description
0x09a3 (0x11c3): (0x00) Goto 0x004b

**************************************************************************
* Command: unlock/open
**************************************************************************

**************************************************************************
* Check if the player typed "open door" when at one of the Doors of <type>
**************************************************************************

/ Branch if the player is NOT at one of the following locations:
/ 0xc9 : below the Door of Rock. A small opening in the door is just large enough to take one of the Stones
/ 0xca : below the Door of Gold. A small opening in the door is just large enough to take one of the Stones
/ 0xcb : below the Door of Silver. A small opening is just large enough to take one of the Stones
/ 0xcc : below the Door of Glass. You can see nothing behind the door. An opening is large enough for a Stone
0x09a6 (0x11c6): (0x1a) If var[0x0b] < (constant) 0xc9 then Goto 0x09b1
0x09aa (0x11ca): (0x1b) If var[0x0b] > (constant) 0xcc then Goto 0x09b1

/ Player IS at one of the Doors of <type>

/ Print "Please be more specific"
0x09ae (0x11ce): (0x00) Goto 0x0f25

**************************************************************************
* Check if the player typed "open sesame"
**************************************************************************

/ Player is NOT at one ofthe Doors of <type>

/ Branch if the second word is NOT "sesame" (0x7a) 
0x09b1 (0x11d1): (0x19) If var[0x22] != (constant) 0x7a then Goto 0x09c2

/ Player typed "open sesame"

/ Branch if the location is NOT "in a dry east-west canyon with sheer rocky walls" (0x29)
/ and print "Nothing happens"
0x09b5 (0x11d5): (0x19) If var[0x0b] != (constant) 0x29 then Goto 0x0f2d

/ Player is "in a dry east-west canyon..." so open sesame will work

/ Print message  "A cavern opens to the north "
0x09ba (0x11da): (0x05) Print message (constant) 0x4c

/ Set the status that the player has said "open sesame" and opened the door 
/ var[0x01] is the constant 0x01
0x09bc (0x11dc): (0x09) Set var[0x39] = var[0x01]

/ Get the player's next command 
0x09bf (0x11df): (0x00) Goto 0x009a

**************************************************************************
* Check if the player typed "open clam"
**************************************************************************


/ Branch ifthe player is NOT "on the lake-bed. A huge clam is firmly 
/ rooted to the rocks" (0x55)
0x09c2 (0x11e2): (0x19) If var[0x0b] != (constant) 0x55 then Goto 0x09cb

/ Player is at the clam's location

/ Print message  "The clam opens, belches out a cloud of decaying filth in your direction, and then snaps tight shut again. Its shell contains nothing but clam. "
0x09c6 (0x11e6): (0x05) Print message (constant) 0x66

/ Get the player's next command 
0x09c8 (0x11e8): (0x00) Goto 0x009a

**************************************************************************
* Check if the player typed "open windbag"
**************************************************************************

/ Branch if the second word is NOT the "wind-bag" (0x53)
0x09cb (0x11eb): (0x19) If var[0x22] != (constant) 0x53 then Goto 0x09e6

/ Second word is the wind-bag

/ Check to see if the object is in the player's inventory
0x09cf (0x11ef): (0x01) Gosub 0x0ec7

/ Branch if the player does NOT have the object (0x00) and get the
/ player's next command 
/ var[0x15] is the constant 0x00
0x09d2 (0x11f2): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Print message  "A blast of air roars from the bag "
0x09d7 (0x11f7): (0x05) Print message (constant) 0x54

/ Branch if the first supplementary message is NOT "A Djinn stands
/ before you, guarding the oasis to the south" (0xce)
/ and get the player's next command 
0x09d9 (0x11f9): (0x19) If var[0x19] != (constant) 0xce then Goto 0x009a

/ Print message  ": blowing the Djinn towards a nearby lamp "
0x09de (0x11fe): (0x05) Print message (constant) 0x55

/ Set the indicator that the Djinn has been blow away
0x09e0 (0x1200): (0x09) Set var[0x38] = var[0x01]

/ Get the player's next command 
0x09e3 (0x1203): (0x00) Goto 0x009a

**************************************************************************
* Check if the player typed "open snowman"
**************************************************************************

/ Branch if the second word is NOT the "abominable snowman" (0x4e)
0x09e6 (0x1206): (0x19) If var[0x22] != (constant) 0x4e then Goto 0x0a09

/ Second word is the "abominable snowman" (0x4e)

/ Check that the abominable snowman is in the player's current location
0x09ea (0x120a): (0x01) Gosub 0x0e91

/ Branch if abominable snowman is NOT in the player's current location 
/ (error already printed) and get the player's next command 
/ var[0x15] is the constant 0x00
0x09ed (0x120d): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Branch if the first supplementary message is NOT "The snowman is chained 
/ to the mountain" (0xd0)
0x09f2 (0x1212): (0x19) If var[0x19] != (constant) 0xd0 then Goto 0x0f1d

/ Snoman IS chained to the mountain

/ Set the temporary variable to the bunch of keys (0x3b)
0x09f7 (0x1217): (0x08) Set var[0x10] = (constant) 0x3b

/ Get the location of the bunch of keys 
0x09fa (0x121a): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the keys are NOT in the player's inventory (0xff)
/ and print "You have no keys (or crowbar)"
/ var[0x07] is the constant 0xff
0x09fd (0x121d): (0x11) If var[0x11] != var[0x07] then Goto 0x0a19

/ Set the status of the snowman to "freed" (0x00)
/ var[0x15] is the constant 0x00
0x0a01 (0x1221): (0x09) Set var[0x09] = var[0x15]

/ Print message  "The snowman is free and leaps about joyfully "
0x0a04 (0x1224): (0x05) Print message (constant) 0x42

/ Get the player's next command 
0x0a06 (0x1226): (0x00) Goto 0x009a

**************************************************************************

/ Branch if the second word is NOT "door" or "gate" (0x7b) and print 
/ "You can't do that"
0x0a09 (0x1229): (0x19) If var[0x22] != (constant) 0x7b then Goto 0x0f1d

/ Second word IS "door" or "gate"

/ Branch if the player is NOT at "south of a huge door on the north shore
/ of the crater lake. A host of carved stone heads glare at you from above 
/ the door, seeming to follow your every move. To the east is a second, 
/ smaller entrance, marked with a black dot
0x0a0e (0x122e): (0x19) If var[0x0b] != (constant) 0x65 then Goto 0x0a33

/ Player IS "south of a huge door..."

/ Get the location of the bunch of keys (0x3b)
0x0a12 (0x1232): (0xc2) Set var[0x13] = list#2[0x3b]

/ Branch if the keys ARE in the player's inventory (0xff)
/ var[0x07] is the constant 0xff
0x0a15 (0x1235): (0x10) If var[0x13] == var[0x07] then Goto 0x0a1e

/ Keys are not in the player's inventory

/ Print message  "You have no keys (or crowbar) "
0x0a19 (0x1239): (0x05) Print message (constant) 0x38

/ Get the player's next command 
0x0a1b (0x123b): (0x00) Goto 0x009a

**************************************************************************

/ Branch if the first supplementary message is NOT "The door is rusted solid"
0x0a1e (0x123e): (0x19) If var[0x19] != (constant) 0xd9 then Goto 0x0a27

/ Print "The door is rusted solid" (0xd9)
0x0a22 (0x1242): (0x04) Print message var[0x19]

/ Get the player's next command 
0x0a24 (0x1244): (0x00) Goto 0x009a

**************************************************************************

/ Branch if the first supplementary message is NOT "The door is locked" (0xda)
0x0a27 (0x1247): (0x19) If var[0x19] != (constant) 0xda then Goto 0x0a33

/ Door IS locked

/ Print message  "The door swings open "
0x0a2b (0x124b): (0x05) Print message (constant) 0xb9

/ Set the status of the door to "oiled and unlocked" (0x01)
/ var[0x01] is the constant 0x01
0x0a2d (0x124d): (0x09) Set var[0x3d] = var[0x01]

/ Get the player's next command 
0x0a30 (0x1250): (0x00) Goto 0x009a

**************************************************************************

/ Branch if the player is NOT "on an island outside the door of an 
/ ancient house." (0xbf)
0x0a33 (0x1253): (0x19) If var[0x0b] != (constant) 0xbf then Goto 0x0a3f

/ Print message  "The bell rings and the door creaks open. A gravelly voice croaks from the darkness: 'Enter.. The master awaits..' "
0x0a37 (0x1257): (0x05) Print message (constant) 0xb4

/ Set the status of the ancient house's door to open (0x01)
/ var[0x01] is the constant 0x01
0x0a39 (0x1259): (0x09) Set var[0x4d] = var[0x01]

/ Get the player's next command 
0x0a3c (0x125c): (0x00) Goto 0x009a

**************************************************************************
/ Print message  "There is nothing here worth opening "
0x0a3f (0x125f): (0x05) Print message (constant) 0x37

/ Get the player's next command 
0x0a41 (0x1261): (0x00) Goto 0x009a

**************************************************************************
* Command: rub
**************************************************************************

/ Check to see if the object is in the player's inventory
/ Sets var[0x1b]
0x0a44 (0x1264): (0x01) Gosub 0x0ec7

/ Branch if the player does not have the object and get the player's next command 
/ var[0x15] is the constant 0x00
0x0a47 (0x1267): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Player HAS the object

/ Branch if the second word IS the "ruby" (0x40) and remove the ruby
/ from the game!
0x0a4c (0x126c): (0x18) If var[0x22] == (constant) 0x40 then Goto 0x0db0

/ Branch if the second word is NOT the "lamp" (0x44) and print "nothing happens"
0x0a51 (0x1271): (0x19) If var[0x22] != (constant) 0x44 then Goto 0x0f2d

/ Second word IS the lamp
/ Print message  "The djinn appears: "
0x0a56 (0x1276): (0x05) Print message (constant) 0x0e

/ Process the Djinn warning the player
0x0a58 (0x1278): (0x00) Goto 0x0e09

**************************************************************************
* Command: eat
**************************************************************************

/ Check to see if the object is in the player's inventory
0x0a5b (0x127b): (0x01) Gosub 0x0ec7

/ Branch if the object is NOT in the player's inventory and 
/ get the player's next command 
/ var[0x15] is the constant 0x00
0x0a5e (0x127e): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Branch if the second word IS the "egg" (0x3e) and print 
/ "That's just what you needed"
0x0a63 (0x1283): (0x18) If var[0x22] == (constant) 0x3e then Goto 0x0a7b

/ Branch if the second word IS the "fruit" (0x42) and print 
/ "That's just what you needed"
0x0a67 (0x1287): (0x18) If var[0x22] == (constant) 0x42 then Goto 0x0a7b

/ Branch if the second word IS the "rare orchid" (0x47) and print 
/ "That's just what you needed"
0x0a6b (0x128b): (0x18) If var[0x22] == (constant) 0x47 then Goto 0x0a7b

/ Branch if the second word is NOT the "onion" / "garlic" (0x46) and
/ print "You can't do that"
0x0a6f (0x128f): (0x19) If var[0x22] != (constant) 0x46 then Goto 0x0f1d

/ Set the status to the player having eaten the garlic (0x01)
/ var[0x01] is the constant 0x01
0x0a74 (0x1294): (0x09) Set var[0x4c] = var[0x01]

/ Print message  "The 'onion' tastes very odd: it is garlic! However
/  as you are obviously ravenous (why else would anyone want 
/ to eat an entire onion) you gulp it down. Then you notice movement nearby 
/ and turn in fascination: all the vegetation down-wind has curled up "
0x0a77 (0x1297): (0x05) Print message (constant) 0x30

/ Skip ahead and remove item from the game
0x0a79 (0x1299): (0x00) Goto 0x0a7d

**************************************************************************

/ Print message  "That was just what you needed "
0x0a7b (0x129b): (0x05) Print message (constant) 0x25

/ Remove object in second word from game (either onion or 
/ fruit or rare orchid or egg)
0x0a7d (0x129d): (0x01) Gosub 0x0e7f

/ Branch if the player has more than 4 turns before they die of cold
/ var[0x04] is the constant 0x04
0x0a80 (0x12a0): (0x13) If var[0x0f] > var[0x04] then Goto 0x0a8a

/ Print message  "\nThe food warms you a little "
0x0a84 (0x12a4): (0x05) Print message (constant) 0xa1

/ Get the player's next command if the number of turns before
/ they die of cold is 0 - it can never be zero as the player 
/ will already be dead
/ var[0x15] is the constant 0x00
0x0a86 (0x12a6): (0x10) If var[0x0f] == var[0x15] then Goto 0x0a8d

/ Set the number of turns until the player dies of cold to 6
/ var[0x06] is the constant 0x06
0x0a8a (0x12aa): (0x09) Set var[0x0f] = var[0x06]

/ Get the player's next command 
0x0a8d (0x12ad): (0x00) Goto 0x009a

**************************************************************************
* Command: read
**************************************************************************

/ Check to see if the player has the object in their inventory
0x0a90 (0x12b0): (0x01) Gosub 0x0ec7

/ Branch if the player does not have the object in their inventory and
/ get the player's next command 
/ var[0x15] is the constant 0x00
0x0a93 (0x12b3): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Player DOES have the object

/ Branch if the second word is NOT the "scroll" (0x4b) and print 
/ "You can't do that"
0x0a98 (0x12b8): (0x19) If var[0x22] != (constant) 0x4b then Goto 0x0f1d

/ Second word IS the scroll

/ Print message  ""Take the Talisman to the Black Tower through the four elements twice. It can defeat the Demon Lord, but only a companion can bring victory at the end. The Talisman is nearby, but you will also need 4 Stones to gain entry and these are guarded by servants of the Enemy. You are the only hope for Middle Earth - the High Council lied when they pretended otherwise. The blesssing of Typo, god of Adventures, goes with you. Good Luck!" "
0x0a9d (0x12bd): (0x05) Print message (constant) 0x19

/ Get the player's next command 
0x0a9f (0x12bf): (0x00) Goto 0x009a

**************************************************************************
* Command: play/blow
**************************************************************************

/ Check to see if the player has the object in their inventory
0x0aa2 (0x12c2): (0x01) Gosub 0x0ec7

/ Branch if the player does not have the object in their inventory and
/ get the player's next command 
/ var[0x15] is the constant 0x00
0x0aa5 (0x12c5): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Player DOES have the object

/ Branch if the second word is NOT the "pipes" (0x48) and print 
/ "You can't do that"
0x0aaa (0x12ca): (0x19) If var[0x22] != (constant) 0x48 then Goto 0x0f1d

/ Second word IS the pipes

/ Print message  "The pipes play oriental music "
0x0aaf (0x12cf): (0x05) Print message (constant) 0x2c

/ Branch if the player is NOT "on top of the pyramid 
/ outside a small temple" (0x25) and get the player's next command 
0x0ab1 (0x12d1): (0x19) If var[0x0b] != (constant) 0x25 then Goto 0x009a

/ Player IS "on top of the pyramid outside a small temple"

/ Branch if the player has already danced away the snakes with the pipes (0x01) 
/ and get the player's next command
/ var[0x01] is the constant 0x01
0x0ab6 (0x12d6): (0x10) If var[0x37] == var[0x01] then Goto 0x009a

/ Print message  "and the snakes dance away into holes "
0x0abb (0x12db): (0x05) Print message (constant) 0x51
0x0abd (0x12dd): (0x09) Set var[0x37] = var[0x01]

/ Get the player's next command 
0x0ac0 (0x12e0): (0x00) Goto 0x009a

**************************************************************************
* Command: insert/feed/give/replace/put
**************************************************************************

/ Check to see if the object in the second word IS in the player's inventory
0x0ac3 (0x12e3): (0x01) Gosub 0x0ec7

/ Branch if the object is NOT in the player's inventory (error message 
/ already printed) and get the player's next command 
0x0ac6 (0x12e6): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Branch if the player's current location is NOT "in woodland above the valley." (0x17)
0x0acb (0x12eb): (0x19) If var[0x0b] != (constant) 0x17 then Goto 0x0ae8

/ Player IS "in woodland above the valley." (0x17)

/ Branch if the player has already given the rare orchid to the unicorn
/ and print "You can't do that"
0x0acf (0x12ef): (0x10) If var[0x36] == var[0x01] then Goto 0x0f35

/ Player has NOT given the rare orchid to the unicorn

/ Branch if the player is NOT giving the "rare orchid" (0x47) and print
/ "The unicorn snorts disdainfully"
0x0ad4 (0x12f4): (0x19) If var[0x22] != (constant) 0x47 then Goto 0x0ae3

/ Print message  "The unicorn takes the orchid, nods and walks off north. He 
/ gestures for you to follow "
0x0ad8 (0x12f8): (0x05) Print message (constant) 0x16

/ Set state of the unicorn to having received the orchid (0x01)
/ var[0x01] is the constant 0x01
0x0ada (0x12fa): (0x09) Set var[0x36] = var[0x01]

/ Remove the "rare orchid" from the game
0x0add (0x12fd): (0x01) Gosub 0x0e7f

/ Get the player's next command 
0x0ae0 (0x1300): (0x00) Goto 0x009a

**************************************************************************

/ Print message  "The unicorn snorts disdainfully "
0x0ae3 (0x1303): (0x05) Print message (constant) 0x15

/ Get the player's next command 
0x0ae5 (0x1305): (0x00) Goto 0x009a

**************************************************************************

/ Branch if the player's current location is NOT "in a small dead-end room. 
/ An ancient statue of a warrior elf stands in the centre. One of his eyes
/  is covered by a jewelled patch - the other is missing." (0x6e)
0x0ae8 (0x1308): (0x19) If var[0x0b] != (constant) 0x6e then Goto 0x0afe

/ Branch if the second word is NOT the "emerald eye"
0x0aec (0x130c): (0x19) If var[0x22] != (constant) 0x3f then Goto 0x0afe

/ Print message  "The status nods in thanks and gives you its rune-encrusted sword.
/ It uses the eye to look around for a while and then hides it in 
/ one marble fist " (0x73)
0x0af0 (0x1310): (0x05) Print message (constant) 0x73

/ Set the location of the "emerald eye" to out of game (0xe2)
/ var[0x08] is the constant 0xe2
0x0af2 (0x1312): (0xe2) Set list#2[var[0x22]] = var[0x08] (list address 0x0820)

/ Set the temporary variable to the object id for the "sword" (0x50)
0x0af5 (0x1315): (0x08) Set var[0x13] = (constant) 0x50

/ Set the "sword"'s current location to the player's inventory (0xff)
/ var[0x07] is the constant 0xff
0x0af8 (0x1318): (0xe2) Set list#2[var[0x13]] = var[0x07] (list address 0x0820)

/ Get the player's next command 
0x0afb (0x131b): (0x00) Goto 0x009a

**************************************************************************

/ Branch if the player is NOT at any of the following locations:
/ 0xc9 : below the Door of Rock. A small opening in the door is just large enough to take one of the Stones
/ 0xca : below the Door of Gold. A small opening in the door is just large enough to take one of the Stones
/ 0xcb : below the Door of Silver. A small opening is just large enough to take one of the Stones
/ 0xcc : below the Door of Glass. You can see nothing behind the door. An opening is large enough for a Stone
0x0afe (0x131e): (0x1a) If var[0x0b] < (constant) 0xc9 then Goto 0x0b45
0x0b02 (0x1322): (0x1b) If var[0x0b] > (constant) 0xcc then Goto 0x0b45

/ Branch if the second word object IS the "sun-stone" (0x36)
0x33  /  0x1e3a EARTH-STONE
0x34  /  0x1e46 MIST-STONE
0x35  /  0x1e51 STAR-STONE
0x36  /  0x1e5c SUN-STONE
0x0b06 (0x1326): (0x18) If var[0x22] == (constant) 0x36 then Goto 0x0b1f

/ Branch if the second word object IS the "star-stone" (0x35)
0x0b0a (0x132a): (0x18) If var[0x22] == (constant) 0x35 then Goto 0x0b28

/ Branch if the second word object IS the "mist-stone" (0x34)
0x0b0e (0x132e): (0x18) If var[0x22] == (constant) 0x34 then Goto 0x0b31

/ Branch if the second word object is NOT the "earth-stone" (0x33)
0x0b12 (0x1332): (0x19) If var[0x22] != (constant) 0x33 then Goto 0x0b45

/ Second word is the "earth-stone"

/ Branch if the player is NOT at the "...Door of Rock" (0xc9)
0x0b16 (0x1336): (0x19) If var[0x0b] != (constant) 0xc9 then Goto 0x0b40

/ Set the status of the Door of Rock to "open" (0x01)
/ var[0x01] is the constant 0x01
0x0b1a (0x133a): (0x09) Set var[0x44] = var[0x01]

/ Print "the door swings open" and get the player's next command
0x0b1d (0x133d): (0x00) Goto 0x0b38
**************************************************************************

/ Branch if the player is NOT at the "...Door of Gold" (0xca) 
/ and print that the alarm sounds as it's the stone has been put into the
/ wrong door
0x0b1f (0x133f): (0x19) If var[0x0b] != (constant) 0xca then Goto 0x0b40

/ Sun-stone inserted into the Door of Gold 

/ Set the status of the Door of Gold to "open" (0x01)
/ var[0x01] is the constant 0x01
0x0b23 (0x1343): (0x09) Set var[0x45] = var[0x01]

/ Print "the door swings open" and get the player's next command
0x0b26 (0x1346): (0x00) Goto 0x0b38
**************************************************************************

/ Branch if the player is NOT at the "...Door of Silver" (0xcb)
/ and print that the alarm sounds as it's the stone has been put into the
/ wrong door
0x0b28 (0x1348): (0x19) If var[0x0b] != (constant) 0xcb then Goto 0x0b40

/ Star-stone inserted into the Door of Silver

/ Set the status of the Door of Silver to "open" (0x01)
/ var[0x01] is the constant 0x01
0x0b2c (0x134c): (0x09) Set var[0x46] = var[0x01]

/ Print "the door swings open" and get the player's next command
0x0b2f (0x134f): (0x00) Goto 0x0b38
**************************************************************************

/ Branch if the player is NOT at the "...Door of Glass" (0xcc)
/ and print that the alarm sounds as it's the stone has been put into the
/ wrong door
0x0b31 (0x1351): (0x19) If var[0x0b] != (constant) 0xcc then Goto 0x0b40

0x0b35 (0x1355): (0x09) Set var[0x4e] = var[0x01]

/ Print message  "The door swings open "
0x0b38 (0x1358): (0x05) Print message (constant) 0xb9

/ Remove the <type>-stone from the player's inventory
0x0b3a (0x135a): (0x01) Gosub 0x0e7f

/ Get the player's next command 
0x0b3d (0x135d): (0x00) Goto 0x009a
**************************************************************************

/ Print message  "As you insert the stone the alarms sound. It's the wrong one! The corridoor fills with gas.. "
0x0b40 (0x1360): (0x05) Print message (constant) 0xb8

/ Kill the player
0x0b42 (0x1362): (0x00) Goto 0x0d64

**************************************************************************

/ Player is NOT at any of the Door of <type> locations

/ Print "You can't do that"
0x0b45 (0x1365): (0x00) Goto 0x0f35

**************************************************************************
* Message to print when the player tries to interact with the Will O'Wisp
**************************************************************************

/ Print message  "You can't get near to it "
0x0b48 (0x1368): (0x05) Print message (constant) 0xcd

/ Print the location description
0x0b4a (0x136a): (0x00) Goto 0x004b

**************************************************************************
* Command: drink
**************************************************************************

/ Branch if the player IS underwater (0x01) and print "That's just
/ what you needed" 
/ var[0x01] is the constant 0x01
0x0b4d (0x136d): (0x10) If var[0x1c] == var[0x01] then Goto 0x0b6b

/ Player is NOT underwater

/ Branch if the player IS "in an oasis beside a deep pool of cool water" (0x2f)
0x0b51 (0x1371): (0x18) If var[0x0b] == (constant) 0x2f then Goto 0x0b6b

/ Player is NOT "in an oasis beside a deep pool of cool water" (0x2f)

/ Set the temporary variable to the object id for the "bottle" (0x39)
0x0b55 (0x1375): (0x08) Set var[0x10] = (constant) 0x39

/ Get the current location of the bottle
0x0b58 (0x1378): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the bottle is NOT in the player's inventory (0x0ff)
/ var[0x07] is the constant 0xff
0x0b5b (0x137b): (0x11) If var[0x11] != var[0x07] then Goto 0x0b63

/ Branch if the bottle is "full of water" (0x02)
/ var[0x01] is the constant 0x01
0x0b5f (0x137f): (0x13) If var[0x0a] > var[0x01] then Goto 0x0b68

/ Print message  "You have nothing to drink "
0x0b63 (0x1383): (0x05) Print message (constant) 0xd7

/ Get the player's next command 
0x0b65 (0x1385): (0x00) Goto 0x009a

**************************************************************************

/ Player has a bottle full of water

/ Set the status of the bottle to "empty" (0x00)
/ var[0x15] is the constant 0x00
0x0b68 (0x1388): (0x09) Set var[0x0a] = var[0x15]

**************************************************************************

/ Player is either underwater, at the oasis or has a bottle full of water

/ Print message  "That was just what you needed "
0x0b6b (0x138b): (0x05) Print message (constant) 0x25

/ Reset the number of turns until the player dies from thirst to not thirsty (0x00)
/ var[0x15] is the constant 0x00
0x0b6d (0x138d): (0x09) Set var[0x20] = var[0x15]

/ Get the player's next command 
0x0b70 (0x1390): (0x00) Goto 0x009a

*************************************************************************
* Command: Fill
*************************************************************************

/ Check to see if the object in the second word IS in the player's inventory
0x0b73 (0x1393): (0x01) Gosub 0x0ec7

/ Branch if the player does not have the object in their inventory (error
/ message already printed) and get the player's next command
0x0b76 (0x1396): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Branch if the second word is NOT the "bottle" (0x39) and print "You 
/ can't do that" (0x39)
0x0b7b (0x139b): (0x19) If var[0x22] != (constant) 0x39 then Goto 0x0f1d

/ Branch if the player IS "in a sheltered wadi. Oil seeps from the rocks" (0x2c)
/ and fill the bottle with oil
0x0b80 (0x13a0): (0x18) If var[0x0b] == (constant) 0x2c then Goto 0x0bb6

/ Next check if the trident is in the player's current location - if it 
/ is "water bubbles from the ground" so there's a water source

/ Set the temporary variable to the object id for the "trident" (0x52)
0x0b84 (0x13a4): (0x08) Set var[0x10] = (constant) 0x52

/ Get the current location of the "trident"
0x0b87 (0x13a7): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the trident IS in the player's current location
/ and allow the bottle to be filled with water
0x0b8a (0x13aa): (0x10) If var[0x11] == var[0x0b] then Goto 0x0bae

/ Trident is NOT in the player's current location

/ Branch if the player IS "underwater" (0x01) and allow the bottle to
/ be filled with water
0x0b8e (0x13ae): (0x10) If var[0x1c] == var[0x01] then Goto 0x0bae

/ Player is NOT undewater

/ Branch if the player's current location IS "in an oasis beside a deep 
/ pool of cool water" (0x2f) and allow the bottle to be filled with water
0x0b92 (0x13b2): (0x18) If var[0x0b] == (constant) 0x2f then Goto 0x0bae

/ Branch if the player is in any of the locations after "at the foot 
/ of a flight of steps leading upwards through the mist" (0xc8) as none
/ have a water source so print a message that there is none
0x0b96 (0x13b6): (0x1b) If var[0x0b] > (constant) 0xc8 then Goto 0x0bbe

/ Branch if the player IS in the marsh locations or at the waterfall but also
/ allow these which seem dry? Allow the bottle to be filled.
/ 0xc0 : in a ancient panelled entrance hall of a decaying house. Rats scurry behind the walls. There are doors to north and south
/ 0xc1 : in the main hall. Steps lead upwards
/ 0xc2 : in a high room. A window looks out onto the marsh to the south, and you catch a glimpse of a huge black tower nearby
/ 0xc3 : on a small ledge south of a small door marked with a black dot. There is a window in the wall above
/ 0xc4 : on a dark granite ramp at the foot of the BLACK TOWER
0x0b9a (0x13ba): (0x1b) If var[0x0b] > (constant) 0xae then Goto 0x0bae

/ Branch if the player IS in and around the volcanic crater and do NOT
/ allow the bottle to be filled
0x0b9e (0x13be): (0x1b) If var[0x0b] > (constant) 0x65 then Goto 0x0bbe

/ Branch if the player IS in and around the rapids or lake bed and allow
/ the bottle to be filled
0x0ba2 (0x13c2): (0x1b) If var[0x0b] > (constant) 0x4b then Goto 0x0bae

/ Branch if the player is in the valley or desert and don't allow the water 
/ bottle to be filled
0x0ba6 (0x13c6): (0x1b) If var[0x0b] > (constant) 0x09 then Goto 0x0bbe

/ Branch ift he player is NOT at either of these locations and don't allow
/ the bottle to be filled up
/ 0x08 : in a narrow north-south valley through the forest. A small stream, clogged by dead vegetation, seeps sluggishly south. A miasma of decay pervades the scene
/ 0x09 : in a north-south valley. A small steam flows from the north and seeps away into the swampy ground
0x0baa (0x13ca): (0x1a) If var[0x0b] < (constant) 0x07 then Goto 0x0bbe

/ Set the status of the bottle to "full of water" (0x03)
/ Bug - should be 0x02
/ var[0x03] is the constant 0x03
0x0bae (0x13ce): (0x09) Set var[0x0a] = var[0x03]

/ Print message  "it is full of water "
0x0bb1 (0x13d1): (0x05) Print message (constant) 0x26

/ Get the player's next command 
0x0bb3 (0x13d3): (0x00) Goto 0x009a

**************************************************************************

/ Set the status of the bottle to "full of oil" (0x02)
0x0bb6 (0x13d6): (0x09) Set var[0x0a] = var[0x01]

/ Print message  "it is full of oil "
0x0bb9 (0x13d9): (0x05) Print message (constant) 0x27

/ Get the player's next command 
0x0bbb (0x13db): (0x00) Goto 0x009a

**************************************************************************

/ Print message  "There is no suitable liquid within reach "
0x0bbe (0x13de): (0x05) Print message (constant) 0xd8

/ Print the location description
0x0bc0 (0x13e0): (0x00) Goto 0x004b

**************************************************************************
* Command: empty/pour
**************************************************************************

/ Branch if the second word IS "water" (0x54)
0x0bc3 (0x13e3): (0x18) If var[0x22] == (constant) 0x54 then Goto 0x0bcb

/ Branch if the second word is NOT "oil" (0x54)
0x0bc7 (0x13e7): (0x19) If var[0x22] != (constant) 0x14 then Goto 0x0bce

/ Set the second word to the "bottle" (0x39)
0x0bcb (0x13eb): (0x08) Set var[0x22] = (constant) 0x39

/ Check to see if the bottle is in the player's inventory
0x0bce (0x13ee): (0x01) Gosub 0x0ec7

/ Branch if the bottle is NOT in the player's inventory
/ and get the player's next command
0x0bd1 (0x13f1): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Branch if the second word is NOT the "bottle" (0x39)
/ Will be if the player typed "pour oil" as it gets replaced otherwise 
/ could be anything
0x0bd6 (0x13f6): (0x19) If var[0x22] != (constant) 0x39 then Goto 0x0f1d

/ Branch if the bottle is empty (0x00) and print "Nothing happens"
/ var[0x15] is the constant 0x00
0x0bdb (0x13fb): (0x10) If var[0x0a] == var[0x15] then Goto 0x0f2d

/ Branch if the bottle is NOT full of oil i.e. full of water and print 
/ "the liquid soaks intot he ground"
0x0be0 (0x1400): (0x11) If var[0x0a] != var[0x01] then Goto 0x0bef

/ Bottle IS full of oil

/ Branch if the first supplementary message is NOT "The door is 
/ rusted solid" (0xd9) and print "The liquid soaks into the ground"
0x0be4 (0x1404): (0x19) If var[0x35] != (constant) 0xd9 then Goto 0x0bef

/ Door IS rusted solid

/ Print message  "You oil the door and think that it might open now "
0x0be8 (0x1408): (0x05) Print message (constant) 0xdb

/ Set the status of the door to "oiled" (0x01)
/ var[0x01] is the constant 0x01
0x0bea (0x140a): (0x09) Set var[0x3c] = var[0x01]

/ 
0x0bed (0x140d): (0x00) Goto 0x0bf1
**************************************************************************

/ Print message  "The liquid soaks into the ground "
0x0bef (0x140f): (0x05) Print message (constant) 0x28

**************************************************************************

/ Set the status of the bottle to "empty" (0x00)
/ var[0x15] is the constant 0x00
0x0bf1 (0x1411): (0x09) Set var[0x0a] = var[0x15]

/ Get the player's next command 
0x0bf4 (0x1414): (0x00) Goto 0x009a

**************************************************************************
* Command: oil
**************************************************************************

/ Set the second word to the "bottle" (0x39)
0x0bf7 (0x1417): (0x08) Set var[0x22] = (constant) 0x39

/ Treat this command the same as "empty" / "pour"
0x0bfa (0x141a): (0x00) Goto 0x0bc3

**************************************************************************
* Command: move/dislodge/push
**************************************************************************

/ Branch if the second word is NOT the "rocks" / "boulders" (0x1c)
/ and print "Nothing happens"
0x0bfc (0x141c): (0x19) If var[0x22] != (constant) 0x1c then Goto 0x0f2d

/ Player is pushing the rocks

/ Branch if the first supplementary message is NOT "A pile of giant rocks 
/ lies beside the steps"
0x0c01 (0x1421): (0x19) If var[0x19] != (constant) 0xd2 then Goto 0x0f1d

/ There is "A pile of giant rocks...." here

/ Print message  "You aren't strong enough to move the rocks "
0x0c06 (0x1426): (0x05) Print message (constant) 0x43

/ Set the second word to the "abominable snowman"
0x0c08 (0x1428): (0x08) Set var[0x22] = (constant) 0x4e

/ Get the current location of the "abominable snowman"
0x0c0b (0x142b): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the location is the player's current location
0x0c0e (0x142e): (0x10) If var[0x11] == var[0x0b] then Goto 0x0c17

/ Branch if the "abominable snowman" is NOT in the player's inventory (0xff)
/ and get the player's next command
/ var[0x07] is the constant 0xff
0x0c12 (0x1432): (0x11) If var[0x11] != var[0x07] then Goto 0x009a

/ Abominable snowman is either in the player's current location of inventory

/ Print message  "but with the snowman's help they move! The orcs in the tower flee as the giant stones bounce towards them followed by the abominable snowman. Eventually the dust settles: the mountain seems to be deserted "
0x0c17 (0x1437): (0x05) Print message (constant) 0x44

/ Remove the abominable snowman from the game
0x0c19 (0x1439): (0x01) Gosub 0x0e7f

/ Set the flag to indicate that the rocks have been pushed over (0x01)
/ var[0x01] is the constant 0x01
0x0c1c (0x143c): (0x09) Set var[0x21] = var[0x01]

/ Get the player's next command 
0x0c1f (0x143f): (0x00) Goto 0x009a

**************************************************************************
* Command: rocks/boulders
**************************************************************************

/ Perform the same checks as "push rocks" or "push boulders" above
0x0c22 (0x1442): (0x00) Goto 0x0c01

**************************************************************************
* Command: swing/reveal/wave/show
**************************************************************************

/ Check to see if the object is in the player's inventory
/ Sets var[0x1b]
0x0c24 (0x1444): (0x01) Gosub 0x0ec7

/ Branch if the player does NOT have the object and get the player's next command
0x0c27 (0x1447): (0x10) If var[0x1b] == var[0x15] then Goto 0x009a

/ Player has the object in their inventory

/ Branch if the second word IS the "sling" (0x4d)
0x0c2c (0x144c): (0x18) If var[0x22] == (constant) 0x4d then Goto 0x0c47

/ Branch if the second word is NOT the "talisman" (0x4d) and print 
/ "Nothing happens"
0x0c30 (0x1450): (0x19) If var[0x22] != (constant) 0x37 then Goto 0x0f2d

/ Player is waving the amulet 

/ Print message  "The Talisman shines with a clear blue light and you seem to hear triumphal music "
0x0c35 (0x1455): (0x05) Print message (constant) 0x39

/ Branch if the first supplementary message is NOT "You stand 
/ before the throne where the Demon Lord sits laughing. 
/ You cannot move!" (0xda) and get the player's next command
0x0c37 (0x1457): (0x19) If var[0x19] != (constant) 0xba then Goto 0x009a

/ Player is in front of the demon and waving the medallion

/ Print message  "\nThe Demon shrieks in terror, struggles 
/ through the skins lining the north wall and is gone "
0x0c3c (0x145c): (0x05) Print message (constant) 0xbc

/ Set the status that the player has waved the medallion in front of the demon (0x01)
/ var[0x01] is the constant 0x01
0x0c3e (0x145e): (0x09) Set var[0x29] = var[0x01]

/ Set the number of turns until the orcs catch the player to 10 (0x0a)
/ Only a problem if the phoenix is not there to finish the demon
0x0c41 (0x1461): (0x08) Set var[0x26] = (constant) 0x0a

/ Get the player's next command 
0x0c44 (0x1464): (0x00) Goto 0x009a

**************************************************************************

/ Second word was "sling" (0x4d) from above

/ Set the second word to "silver ball " (0x4c)
0x0c47 (0x1467): (0x08) Set var[0x22] = (constant) 0x4c

/ Get the current location of the "silver ball"
0x0c4a (0x146a): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the "silver ball" IS in the player's inventory
0x0c4d (0x146d): (0x10) If var[0x11] == var[0x07] then Goto 0x0c56

/ Player does NOT have the silver ball

/ Print message  "You have no sling stone "
0x0c51 (0x1471): (0x05) Print message (constant) 0x36

/ Get the player's next command 
0x0c53 (0x1473): (0x00) Goto 0x009a

**************************************************************************

/ Player DOES have the "silver ball"

/ Print message  "You swing the silver ball around in the sling and release it. "
0x0c56 (0x1476): (0x05) Print message (constant) 0x35

/ Branch if the first supplementary message is NOT "A giant sits in the 
/ middle of the path, blocking it. He is picking at the bones of some
/ unfortunate creature" (0xc5) and perform the "throw ball" command
0x0c58 (0x1478): (0x19) If var[0x19] != (constant) 0xc5 then Goto 0x0c61

/ Giant is sat here

/ Print message  "\nThe giant dodges and runs off: "Stay there, I'm 
 just off to fetch my helmet", he booms "
0x0c5c (0x147c): (0x05) Print message (constant) 0x40

/ Set that status that the giant has been attacked by the sling (0x01)
/ var[0x01] is the constant 0x01
0x0c5e (0x147e): (0x09) Set var[0x3a] = var[0x01]

/ Perform the "throw ball" command
0x0c61 (0x1481): (0x00) Goto 0x091c

**************************************************************************
* Command: hit/fight/smite/cut/kill/attack
**************************************************************************

/ Branch if the second word is NOT the "bridge" (0x75)
0x0c64 (0x1484): (0x19) If var[0x22] != (constant) 0x75 then Goto 0x0c82

/ Second word IS the "bridge" 

/ Branch if the first supplementary message is NOT "A rope bridge spans 
/ the chasm from east to west" (0x2e)
0x0c68 (0x1488): (0x19) If var[0x19] != (constant) 0x2e then Goto 0x0c77

/ First supplementary message IS "A rope bridge spans the chasm..." (0x2e)

/ Print message  "You sever the rope bridge, preventing pursuit "
0x0c6c (0x148c): (0x05) Print message (constant) 0x2d

/ Set the status of the rope bridge to "severed" (0x01)
/ var[0x01] is the constant 0x01
0x0c6e (0x148e): (0x09) Set var[0x3f] = var[0x01]

/ Reset the number of turns that the orcs will take to catch the player to they can't (0x00)
/ var[0x15] is the constant 0x00
0x0c71 (0x1491): (0x09) Set var[0x26] = var[0x15]

/ Get the player's next command 
0x0c74 (0x1494): (0x00) Goto 0x009a

**************************************************************************

0x0c77 (0x1497): (0x19) If var[0x19] != (constant) 0x8f then Goto 0x0c82
/ Print message  "You smite the bridge assunder and the Balrog plummets 
/ into the chasm. But its whip catches you even as it falls and you are
/ dragged down "
0x0c7b (0x149b): (0x05) Print message (constant) 0x94

/ Set the status of the BALROG to have plummeted into the chasm (0x01)
/ var[0x01] is the constant 0x01
0x0c7d (0x149d): (0x09) Set var[0x41] = var[0x01]

/ Print the "you fall for hours" message and put the player on the bleak moor
0x0c80 (0x14a0): (0x00) Goto 0x0cdb

**************************************************************************

/ Branch if the second supplementary message IS "A skeletal hand is 
/ gripping your leg and dragging you into the marsh!" (0xae)
0x0c82 (0x14a2): (0x18) If var[0x1a] == (constant) 0xae then Goto 0x0c8a

/ Branch if the second supplementary message is NOT "A sheet of living 
/ flame is attacking you" (0x85)
0x0c86 (0x14a6): (0x19) If var[0x1a] != (constant) 0x85 then Goto 0x0cab

/ Set the temporary object id to the "sword" (0x50)
0x0c8a (0x14aa): (0x08) Set var[0x10] = (constant) 0x50

/ Get the current location for the "sword" 
0x0c8d (0x14ad): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the location is NOT in the player's inventory (0xff)
0x0c90 (0x14b0): (0x11) If var[0x11] != var[0x07] then Goto 0x0cbc

/ "sword" IS in the player's inventory 

/ Branch if the first supplementary message IS  "A skeletal hand is 
/ gripping your leg and dragging you into the marsh!" (0xae)
0x0c94 (0x14b4): (0x18) If var[0x1a] == (constant) 0xae then Goto 0x0ca3

/ Sheet of living flame is attacking the player 

/ Print message  "The flame vanishes into the sword! A hundred voices seem 
/ to shout in disappointment from the walls of Hell Well "
0x0c98 (0x14b8): (0x05) Print message (constant) 0x87

/ Set the status of the sheet of living flame to has been attacked 
/ var[0x01] is the constant 0x01
0x0c9a (0x14ba): (0x09) Set var[0x43] = var[0x01]

/ Set the second supplementary message to 0x00
/ var[0x15] is the constant 0x00
0x0c9d (0x14bd): (0x09) Set var[0x1a] = var[0x15]

/ Get the player's next command 
0x0ca0 (0x14c0): (0x00) Goto 0x009a

**************************************************************************

/ Player is gripped by the skeletal hand

/ Print message  "You sever the hand which falls back into the marsh "
0x0ca3 (0x14c3): (0x05) Print message (constant) 0xaf

/ Set the second supplementary message to 0x00
/ var[0x15] is the constant 0x00
0x0ca5 (0x14c5): (0x09) Set var[0x1a] = var[0x15]

/ Get the player's next command 
0x0ca8 (0x14c8): (0x00) Goto 0x009a

**************************************************************************

/ Branch if the second supplementary message is NOT empty
0x0cab (0x14cb): (0x11) If var[0x1a] != var[0x15] then Goto 0x0cbc

/ No second supplementary message

/ Branch if the orcs are chasing the player (turns are counting down 
/ until the orcs catch the player)
0x0caf (0x14cf): (0x11) If var[0x26] != var[0x15] then Goto 0x0cbc

/ Branch if the first supplementary message is NOT empty
0x0cb3 (0x14d3): (0x11) If var[0x19] != var[0x15] then Goto 0x0cbc

/ Print message  "You should only attack enemies "
0x0cb7 (0x14d7): (0x05) Print message (constant) 0x97

/ Get the player's next command 
0x0cb9 (0x14d9): (0x00) Goto 0x009a

**************************************************************************

/ Branch if the second word is NOT an NPC
0x0cbc (0x14dc): (0x1a) If var[0x22] < (constant) 0x65 then Goto 0x0f1d

/ Second word is an NPC (0x65+)

/ Set the temporary object to the message id "They retreat slightly and 
/ then lunge forward again" (0x17)
0x0cc1 (0x14e1): (0x08) Set var[0x13] = (constant) 0x17

/ Branch if the second word is an "plural" NPC e.g.:
/ 0x65 : Wolves 
/ 0x66 : Elemental flames
/ 0x67 : Cold shadowy ghosts
/ 0x68 : Orcs
/ 0x69 : Snakes
/ and print " "They retreat slightly and then lunge forward again" (0x17)"
0x0cc4 (0x14e4): (0x1a) If var[0x22] < (constant) 0x6a then Goto 0x0cd6

/ Set the temporary message to "Your blows pass through it with no effect!" (0x93)
0x0cc8 (0x14e8): (0x08) Set var[0x13] = (constant) 0x93

/ Branch if the second word is NOT one of the NPCs below
0x0ccb (0x14eb): (0x1a) If var[0x22] < (constant) 0x6f then Goto 0x0cd6
0x0ccf (0x14ef): (0x1b) If var[0x22] > (constant) 0x7b then Goto 0x0cd6

/ NPC is one of the folloiwng:
/ 0x6f : Dragon
/ 0x70 : Giant
/ 0x71 : Sphinx
/ 0x72 : Spider
/ 0x73 : Skeletal hand
/ 0x74 : Will O'Wisp / gallows / throne / bell / body / unicorn / phoenix
/ 0x75 : (Already handled above)
/ 0x76 : Clam
/ 0x77 : Reflection
/ 0x78 : Priestess 
/ 0x79 : Statue
/ 0x7a : Sesame (!)
/ 0x7b : Door / Gate

/ Set the temporary variable to the message id "Your blows bounce 
/ off its thick skin" (0x5b)
0x0cd3 (0x14f3): (0x08) Set var[0x13] = (constant) 0x5b

/ Print the right message for the NPC
0x0cd6 (0x14f6): (0x04) Print message var[0x13]

/ Print the location description
0x0cd8 (0x14f8): (0x00) Goto 0x004b

**************************************************************************

/ Print message  "\nYou fall for hours, it seems, but then a thick mist 
/ gently slows your speed..\n " (0x96)
0x0cdb (0x14fb): (0x05) Print message (constant) 0x96

/ Set the player's location is "on a bleak moor" (0xaf)
0x0cdd (0x14fd): (0x08) Set var[0x0b] = (constant) 0xaf

/ Print the location description
0x0ce0 (0x1500): (0x00) Goto 0x004b

**************************************************************************
* Command: score
**************************************************************************

0x0ce3 (0x1503): (0x01) Gosub 0x0cf2

/ Get the player's next command 
0x0ce5 (0x1505): (0x00) Goto 0x009a

**************************************************************************
* Command: save
**************************************************************************

0x0ce8 (0x1508): (0x06) Function - Save (0x03)

/ Print the location description
0x0cea (0x150a): (0x00) Goto 0x004b

**************************************************************************
* Command: restore
**************************************************************************

0x0ced (0x150d): (0x06) Function - Restore (0x04)

/ Print the location description
0x0cef (0x150f): (0x00) Goto 0x004b

**************************************************************************
* Command: score
**************************************************************************

/ Player's score is calculated as:
/ 1. Maximum location id reached x 8 (maxes at 225 x 8 = 1,800)
/ 2. Score for staying alive (max 1,000)
/ 3. Add another 900 if player has reached in the Black Tower destinations
/    "...Door of Rock..." (0xc9) to "...standing by the Bane-fire..." (0xe0)
/ 4. Add 500 per <type>-stone that the player has either used on a Door of <type>
/    or is in the player's inventory.  Maximum 4 x 500 = 2000 points
/ 5. Subtract the number of commands/turns entered by the player
/ 6. Add 1,000 if the player completed the game and killed/banished The Demon Lord


/ 1. Maximum location id reached x 8 (maxes at 225 x 8 = 1,800)

/ Get the highest location id the player has reached 
/ maxed at 225 (0xe1) and multiply by 4 so the maximum 
/ the player can score is 900 (4 x 225)
0x0cf2 (0x1512): (0x09) Set var[0x2c] = var[0x32]
0x0cf5 (0x1515): (0x0a) Set var[0x2c] += var[0x2c]
0x0cf8 (0x1518): (0x0a) Set var[0x2c] += var[0x2c]
0x0cfb (0x151b): (0x0a) Set var[0x2c] += var[0x2c]

**************************************************************************

/ 2. Score for staying alive (max 1,000)

/ Add on the score for staying alive - starts at 1,000 but gets
/ deducted by 300 everytime the player dies
0x0cfe (0x151e): (0x0a) Set var[0x2c] += var[0x0e]

**************************************************************************

/ 3. Add another 900 if player has reached in the Black Tower destinations
/    "...Door of Rock..." (0xc9) to "...standing by the Bane-fire..." (0xe0)

/ Player will score 900 points if they are in the Black Tower 

/ Set the temporary variable to 900 
0x0d01 (0x1521): (0x08) Set var[0x13] = (constant) 0x384

/ Branch if the player is towards the end game at the black tower
/ from the "Door of Rock" to " standing by the Bane-fire"
0x0d05 (0x1525): (0x1a) If var[0x0b] < (constant) 0xc9 then Goto 0x0d10
0x0d09 (0x1529): (0x1b) If var[0x0b] > (constant) 0xe0 then Goto 0x0d10

/ Player IS in the black tower

/ Add on the 900 for being in the black tower
0x0d0d (0x152d): (0x0a) Set var[0x2c] += var[0x13]

**************************************************************************

/ 4. Add 500 per <type>-stone that the player has either used on a Door of <type>
/    or is in the player's inventory.  Maximum 4 x 500 = 2000 points

/ Set the temporary variable to hold the score 500 (0x1f4)
0x0d10 (0x1530): (0x08) Set var[0x13] = (constant) 0x1f4

/ Set the temporary variable to the "earth-stone" (0x33)
/ the first of the stones
0x0d14 (0x1534): (0x08) Set var[0x10] = (constant) 0x33

/ Get the current location of the object (the stone)
0x0d17 (0x1537): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Branch if the object is NOT out of the game (0xe2) or in the
/ player's inventory (0xff) and don't score but move to the next object
0x0d1a (0x153a): (0x12) If var[0x11] < var[0x08] then Goto 0x0d21

/ Object IS out of game or in the player's invenotry so score it

/ Add on 500 per object that is not out of game or in the 
/ player's inventory
0x0d1e (0x153e): (0x0a) Set var[0x2c] += var[0x13]

/ Move to the next object
0x0d21 (0x1541): (0x0a) Set var[0x10] += var[0x01]

/ Loop back around the "stones" 
0x0d24 (0x1544): (0x1a) If var[0x10] < (constant) 0x37 then Goto 0x0d17

/ Subtract the number of commands/turns entered by the player
0x0d28 (0x1548): (0x0b) Set var[0x2c] -= var[0x30]

**************************************************************************

/ 6. Add 1,000 if the player completed the game and killed/banished The Demon Lord

/ Add on the score 1,000 for completing the game 
/ or 0 if the player has not completed the game
0x0d2b (0x154b): (0x0a) Set var[0x2c] += var[0x2b]

/ Branch and print the score if it's less than 20,000 (0x4e20)
0x0d2e (0x154e): (0x1a) If var[0x2c] < (constant) 0x4e20 then Goto 0x0d36

/ Reset the score to zero if it's greater than 20,000
0x0d33 (0x1553): (0x08) Set var[0x2c] = (constant) 0x00

/ Print message  "You scored "
0x0d36 (0x1556): (0x05) Print message (constant) 0xc3

/ Print the player's calculated score
0x0d38 (0x1558): (0x03) Print Number var[0x2c]

/ Print message  "out of about 6000.\n "
0x0d3a (0x155a): (0x05) Print message (constant) 0xc4

/ Return
0x0d3c (0x155c): (0x02) Return

**************************************************************************

/ Print message  "\nFires leap from the crater to the: "
0x0d3d (0x155d): (0x05) Print message (constant) 0xc7

/ Now display either north-east, north-west or west and add 3 
/ to the message id to print the opposite direction
/ 0x7b : north-east
/ 0x7c : north-west
/ 0x7d : west
/ 0x7e : south-west
/ 0x7f : south-east
/ 0x80 : east

/ Set the base message to the first direction description (0x7b)
0x0d3f (0x155f): (0x08) Set var[0x13] = (constant) 0x7b

/ Add on the flames counter 
0x0d42 (0x1562): (0x0a) Set var[0x13] += var[0x31]

/ Print the first direction 
0x0d45 (0x1565): (0x04) Print message var[0x13]

/ Add on 3 to the message id to get the opposite direction description
0x0d47 (0x1567): (0x0a) Set var[0x13] += var[0x03]

/ Print the second direction
0x0d4a (0x156a): (0x04) Print message var[0x13]

/ Next check to see if the flames hit the player
/ by adding the flame counter to the base location of 0x83
/ for the first flame and then adding the counter
/ again for the second flame. If either matches
/ the player's current location, kill the player
/ The flame counter counts down every turn and cycles
/ through 0x02, 0x01, 0x00 and back again

/ Set the base location to "on a ledge north-east of the crater" (0x83)
0x0d4c (0x156c): (0x08) Set var[0x13] = (constant) 0x83

/ Add on the flames counter 
0x0d4f (0x156f): (0x0a) Set var[0x13] += var[0x31]

/ Branch and kill the player if the first flame landed in 
/ the player's current location
0x0d52 (0x1572): (0x10) If var[0x13] == var[0x0b] then Goto 0x0d60

/ Add on 3 to the message id to get the opposite direction description
0x0d56 (0x1576): (0x0a) Set var[0x13] += var[0x03]

/ Branch and kill the player if the first flame landed in 
/ the player's current location
0x0d59 (0x1579): (0x10) If var[0x13] == var[0x0b] then Goto 0x0d60

/ Print message  "\nThey all miss! "
0x0d5d (0x157d): (0x05) Print message (constant) 0x83

/ Flames missed
0x0d5f (0x157f): (0x02) Return

**************************************************************************

/ Print message  "\nA blast of fire licks you into the crater.. "
0x0d60 (0x1580): (0x05) Print message (constant) 0x82

/ Kill the player
0x0d62 (0x1582): (0x00) Goto 0x0d64

**************************************************************************
* Kill the player
**************************************************************************

/ Increment the number of times the player has died 
0x0d64 (0x1584): (0x0a) Set var[0x4f] += var[0x01]

/ Set the temporary variable to 300 (0x12c)
0x0d67 (0x1587): (0x08) Set var[0x13] = (constant) 0x12c

/ When the player dies, subtract 300 from the 1,000 they could
/ have scored (added at the start of the game)
0x0d6b (0x158b): (0x0b) Set var[0x0e] -= var[0x13]

/ Set the target location to the player's current location
0x0d6e (0x158e): (0x09) Set var[0x18] = var[0x0b]

/ Set the player's current location to out of the game (0xe2)
0x0d71 (0x1591): (0x08) Set var[0x0b] = (constant) 0xe2

/ Set the temporary variable to the base insult message id 
0x0d74 (0x1594): (0x08) Set var[0x13] = (constant) 0x1a

/ Add on the number of times the player has died so that one of the 
/ following will be printed:
/ 0x1b - Oh dear! You got yourself killed
/ 0x1c - FOOL! You got killed again!
/ 0x1d - This is becoming a habit!
0x0d77 (0x1597): (0x0a) Set var[0x13] += var[0x4f]

/ Print the message 
0x0d7a (0x159a): (0x04) Print message var[0x13]

/ Print message  "\nDo you want to be resurrected?\n "
0x0d7c (0x159c): (0x05) Print message (constant) 0x1e

/ Get the player's yes or no answer
0x0d7e (0x159e): (0x07) Input - results in word1 var[0x2d], word2 var[0x22], word3 var[0x2e], count var[0x2f]

/ Branch if the first word is "N" (actually North gets matched for No) (0x01)
/ and print the score
0x0d83 (0x15a3): (0x10) If var[0x2d] == var[0x01] then Goto 0x02b1

/ Branch if the first word is "yes" (0x0e)
0x0d88 (0x15a8): (0x18) If var[0x2d] == (constant) 0x0e then Goto 0x0d90

/ Answer was not "yes" or "no" so ask the player again

/ Print message  "\nPlease answer YES or NO\n "
0x0d8c (0x15ac): (0x05) Print message (constant) 0x23

/ Get the player's input again
0x0d8e (0x15ae): (0x00) Goto 0x0d7c

**************************************************************************
* Process player wants to be resurrected 
**************************************************************************

/ Player can only be resurrected 2 times 

/ Branch if the player has died less than 3 times 
0x0d90 (0x15b0): (0x12) If var[0x4f] < var[0x03] then Goto 0x0e31

/ Print message  "Sorry, I've run out of orange smoke.. "
0x0d95 (0x15b5): (0x05) Print message (constant) 0x1f

/ Print the score
0x0d97 (0x15b7): (0x00) Goto 0x02b1

**************************************************************************
* Process if the player wants to play again (not resurrected)
**************************************************************************

/ Print message  "\nDo you want to try again?\n "
0x0d9a (0x15ba): (0x05) Print message (constant) 0x22

/ Get the player's yes or no answer
0x0d9c (0x15bc): (0x07) Input - results in word1 var[0x2d], word2 var[0x22], word3 var[0x2e], count var[0x2f]

/ Branch if the first word is "N" (actually North gets matched for No) (0x01)
/ and quit
0x0da1 (0x15c1): (0x10) If var[0x2d] == var[0x01] then Goto 0x0dae

/ Branch if the first word is "yes" (0x0e) and restart the game
0x0da5 (0x15c5): (0x18) If var[0x2d] == (constant) 0x0e then Goto 0x0000

/ Print message  "\nPlease answer YES or NO\n "
0x0daa (0x15ca): (0x05) Print message (constant) 0x23

/ Get the player's input again
0x0dac (0x15cc): (0x00) Goto 0x0d9a

**************************************************************************
* Quit the game
**************************************************************************
0x0dae (0x15ce): (0x06) Function - Quit (0x01)


**************************************************************************
* Process the player dropping or throwing the ruby
**************************************************************************

/ Remove the "ruby" from the game
0x0db0 (0x15d0): (0x01) Gosub 0x0e7f

/ Set the second supplementary message to nothing (0x00)
/ var[0x15] is the constant 0x00
0x0db3 (0x15d3): (0x09) Set var[0x1a] = var[0x15]

/ Set the number of turns until the gigantic worm catches the 
/ player to 10 (0x0a) - presumably the explosion scares it off a little bit
0x0db6 (0x15d6): (0x08) Set var[0x0d] = (constant) 0x0a

**************************************************************************
* Check if the ruby kills the unicorn
**************************************************************************

/ Branch if the location is NOT "in woodland above the valley. A path leads 
/ north into dense forest" (0x17)
0x0db9 (0x15d9): (0x19) If var[0x0b] != (constant) 0x17 then Goto 0x0dc0

/ Player's current location is "in a woodland above the valley..." where the unicorn is

/ Kill the unicorn - seems pointless as it's not used for scoring and the 
/ player will also be klled by the ruby exploding
/ var[0x01] is the constant 0x01
0x0dbd (0x15dd): (0x09) Set var[0x36] = var[0x01]

**************************************************************************
* Check if the ruby kills the sphinx 
**************************************************************************

/ Branch if the location is NOT "on trackless desert south of a canyon. 
/ A large flat-topped pyramid with steps on all sides rises from the
/ desert, and to the east an outcrop ofpolished rock resists the shifting sands" (0x23)
/ (where the sphinx is)
0x0dc0 (0x15e0): (0x19) If var[0x0b] != (constant) 0x23 then Goto 0x0dc7

/ Player is at the pyramid 

/ Set the sphinx to dead (0x01)
/ var[0x01] is the constant 0x01
0x0dc4 (0x15e4): (0x09) Set var[0x1f] = var[0x01]

**************************************************************************
* Check if the ruby kills the snakes
**************************************************************************

/ Branch if the location is NOT "on top of the pyramid outside a small temple" (0x25)
0x0dc7 (0x15e7): (0x19) If var[0x0b] != (constant) 0x25 then Goto 0x0dce

/ Player is on top of the pyramid

/ Set the snakes to dead (0x01)
/ var[0x01] is the constant 0x01
0x0dcb (0x15eb): (0x09) Set var[0x37] = var[0x01]

**************************************************************************
* Check if the ruby kills the giant
**************************************************************************

/ Branch if the location is NOT "on a climbing path up the mountain" (0x37)
/ where the giant is
0x0dce (0x15ee): (0x19) If var[0x0b] != (constant) 0x37 then Goto 0x0dd5

/ Player IS "on a climbing path up the mountain"

/ Set the giant to dead (0x01)
/ var[0x01] is the constant 0x01
0x0dd2 (0x15f2): (0x09) Set var[0x3a] = var[0x01]

**************************************************************************
* Check if the ruby kills the orcs
**************************************************************************

/ Branch if the location IS "standing on a snowfield outside a small dark mountain cave" (0x41)
0x0dd5 (0x15f5): (0x18) If var[0x0b] == (constant) 0x41 then Goto 0x0ddd

/ Branch if the location is NOT "in a smelly cave: the sound of running water reverberates 
/ from the walls. A white dot is marked on the roof, and at the back of the cave
/ is a sheer drop down into darkness" (0x42)
0x0dd9 (0x15f9): (0x19) If var[0x0b] != (constant) 0x42 then Goto 0x0de0

/ Player is either "...on a snowfield..." or "...in a smelly cave..."

/ Set the orcs to dead (0x01)
/ var[0x01] is the constant 0x01
0x0ddd (0x15fd): (0x09) Set var[0x21] = var[0x01]

**************************************************************************
* Check if the ruby kills the fearsone shape
**************************************************************************

/ Branch if the player is NOT "on a spiral staircase half-way up the tower" (0x49)
0x0de0 (0x1600): (0x19) If var[0x0b] != (constant) 0x49 then Goto 0x0de7

/ Player is on a sprial staircase

/ Set the fearsome dark shape as dead (0x01)
/ var[0x01] is the constant 0x01
0x0de4 (0x1604): (0x09) Set var[0x42] = var[0x01]

**************************************************************************
* Check if the ruby kills the abominable snowman
**************************************************************************

/ Set the second word to the abominable snowman (0x4e)
0x0de7 (0x1607): (0x08) Set var[0x22] = (constant) 0x4e

/ Get the current location of the abominable snowman
0x0dea (0x160a): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the abominable snowman IS in the player's inventory (0xff)
/ and remove the snowman from the game
/ var[0x07] is the constant 0xff
0x0ded (0x160d): (0x10) If var[0x11] == var[0x07] then Goto 0x0df5

/ Branch if the abominable snowman IS in the player's current location
/ and remove the snowman from the game
0x0df1 (0x1611): (0x11) If var[0x11] != var[0x0b] then Goto 0x0dfb

/ Snowman is either in the player's inventory or current location

/ Remove the snowman 
0x0df5 (0x1615): (0x01) Gosub 0x0e7f

/ Set the status of the snowman to dead (0x00)
/ var[0x15] is the constant 0x00
0x0df8 (0x1618): (0x09) Set var[0x09] = var[0x15]

**************************************************************************
* Check if the ruby kills the player
**************************************************************************

/ Branch if the first word is NOT "throw" (0x21) and let the player live
0x0dfb (0x161b): (0x18) If var[0x2d] == (constant) 0x21 then Goto 0x0e04

/ Player did NOT throw the ruby (they dropped it)

/ Print message  "The ruby ball explodes, surrounding you with a ball of searing flame! "
0x0dff (0x161f): (0x05) Print message (constant) 0x56

/ Kill the player
0x0e01 (0x1621): (0x00) Goto 0x0d64

**************************************************************************

/ Player DID throw the ruby

/ Print message  "The ruby explodes as it lands, destroying everything nearby in a ball of fire "
0x0e04 (0x1624): (0x05) Print message (constant) 0x57

/ Print the location description
0x0e06 (0x1626): (0x00) Goto 0x004b

**************************************************************************
* Process the Djinn warning the player
**************************************************************************

/ Branch if the player has NOT tried to move past the Djinn previously 
/ and has NOT yet been warned (0x00)
/ var[0x15] is the constant 0x00
0x0e09 (0x1629): (0x10) If var[0x50] == var[0x15] then Goto 0x0e1c

/ Print message  "\n"Right, you asked for it!", he shouts, gesticulating crudely.. "
0x0e0d (0x162d): (0x05) Print message (constant) 0x5c

/ Generate a random destination 
0x0e0f (0x162f): (0x06) Function - Random - Set var[0x0b]=<random number>

/ Generate another random number if the location is after the "in a small dead-end room" (0x64)
0x0e12 (0x1632): (0x1b) If var[0x0b] > (constant) 0x64 then Goto 0x0e0f

/ Reset that the player has been warned 
/ var[0x15] is the constant 0x00
0x0e16 (0x1636): (0x09) Set var[0x50] = var[0x15]

/ Print that there is a puff of smoke and the location description
0x0e19 (0x1639): (0x00) Goto 0x0945

**************************************************************************

/ Player has NOT been warned by the Djinn so warn them now

/ Print message  ""Do that again and you'll regret it!", snarls the djinn "
0x0e1c (0x163c): (0x05) Print message (constant) 0x0d

/ Set the status that the player HAS been warned by the Djinn (0x01)
/ var[0x01] is the constant 0x01
0x0e1e (0x163e): (0x09) Set var[0x50] = var[0x01]

/ Print the location description
0x0e21 (0x1641): (0x00) Goto 0x004b

**************************************************************************
* Process the orcs catching the player
**************************************************************************

/ Print message  "\nThe orcs fall upon you with cries of triumph "
0x0e24 (0x1644): (0x05) Print message (constant) 0x3e

/ Kill the player
0x0e26 (0x1646): (0x00) Goto 0x0d64

**************************************************************************
* Unused
**************************************************************************

/ Nothing calls this instruction

/ Print the location description
0x0e29 (0x1649): (0x00) Goto 0x004b

**************************************************************************
/ Print message  "The liquid soaks into the ground "
0x0e2c (0x164c): (0x05) Print message (constant) 0x28

/ Get the player's next command 
0x0e2e (0x164e): (0x00) Goto 0x009a

**************************************************************************

/ Reset the second supplementary to nothing (0x00)
0x0e31 (0x1651): (0x09) Set var[0x1a] = var[0x15]

/ Reset the lung-fish status to "player can breathe in air" (0x00)
/ var[0x15] is the constant 0x00
0x0e34 (0x1654): (0x09) Set var[0x1d] = var[0x15]

/ Set the resurrection location to "on trackless desert" (0x1a) which actually
/ will be "at the top of a stone pinnacle high above the forest. A steep escarpment
/ falls away to the south, leading down to once-fertile lowlands. A forest
/ of tangled trees smothers the higher land around you and to the north is baked 
/ desert. A mountain rises above the sands, and you can just make out a stone 
/ tower on its slopes" (0x19) because it's decremented by -1 later
0x0e37 (0x1657): (0x08) Set var[0x0b] = (constant) 0x1a

/ Use this resurrection location if the player is still in the forest area
/ at the start 
0x0e3a (0x165a): (0x12) If var[0x18] < var[0x0b] then Goto 0x0e74

/ Set the resurrection location to "on a stone staircase zig-zagging up the 
/ mountain" (0x33) which actually will be "in a sheltered east-west valley,
/ protected from the burning sun by high rocky walls" (0x32) because 
/ it's decremented by -1 later
0x0e3e (0x165e): (0x08) Set var[0x0b] = (constant) 0x33

/ Branch if the player is in location 0x1a to 0x32 
0x0e41 (0x1661): (0x12) If var[0x18] < var[0x0b] then Goto 0x0e76

/ Set the resurrection URL "in the south tower room. A spiral staircase 
/ leads upwards and there are doors to south and east" (0x4c) which actually 
/ will be "on a wide stone staircase climbing up the mountain. A narrow uneven
/ path joins it from the westand leads round the mountain" (0x4b) because 
/ it's decremented by -1 later
0x0e45 (0x1665): (0x08) Set var[0x0b] = (constant) 0x4c

/ Branch if the player is in location 0x33 to 0x4b
0x0e48 (0x1668): (0x12) If var[0x18] < var[0x0b] then Goto 0x0e76

/ Set the resurrection location to "on a ledge along the side of a deep 
/ chasm, above a swift river" (0x63) which actually 
/ will be "on a small gravel beach to the south of a lake 
/ in a volcanic crater. You can see a door on the opposite 
/ shore, almost hidden in deep shadows" because 
/ it's decremented by -1 later
0x0e4c (0x166c): (0x08) Set var[0x0b] = (constant) 0x63

/ Branch if the player is in location 0x4c to 0x64
0x0e4f (0x166f): (0x1a) If var[0x18] < (constant) 0x65 then Goto 0x0e76

/ Set the resurrection location to in "a sloping corridoor lit from the 
/ west by a weird flickering light. The floor and walls feel warm 
/ to the touch" (0x7e) which actually will be 
/ "in a mass of giant rocks" (0x7d) because 
/ it's decremented by -1 later
0x0e53 (0x1673): (0x08) Set var[0x0b] = (constant) 0x7e

/ Branch if the player is in location 0x64 to 0x7d
0x0e56 (0x1676): (0x12) If var[0x18] < var[0x0b] then Goto 0x0e76

/ Set the resurrection location to in "on a bleak moor" (0x97)
/ which actually will be "iQ a very hot passage. The floor is covered 
/ by hot coals to the west" (0x96) because 
/ it's decremented by -1 later
0x0e5a (0x167a): (0x08) Set var[0x0b] = (constant) 0x97

/ Branch if the player is in location 0x7e to 0x96
0x0e5d (0x167d): (0x12) If var[0x18] < var[0x0b] then Goto 0x0e76

/ Set the resurrection location to "on a north-south path 
/ winding through a dank marsh. Bubbles of gas pop round you" (0xb0)
/ which actually will be "on a bleak moor" (0xaf) because 
/ it's decremented by -1 later
0x0e61 (0x1681): (0x08) Set var[0x0b] = (constant) 0xb0

/ Branch if the player is in location 0x97 to 0xaf
0x0e64 (0x1684): (0x12) If var[0x18] < var[0x0b] then Goto 0x0e76

/ Set the resurrection location to "below the Door of Rock. A 
/ small opening in the door is just large enough to take one 
/ of the Stones"" (0xc9) which actually will be "at the foot of 
/ a flight of steps leading upwards through the mist" (0x96) because 
/ it's decremented by -1 later
0x0e68 (0x1688): (0x08) Set var[0x0b] = (constant) 0xc9

/ Branch if the player is in location 0xb0 to 0xc8
0x0e6b (0x168b): (0x12) If var[0x18] < var[0x0b] then Goto 0x0e76

/ Set the resurrection location to "in Purgatory. You will have to stay here 
/ for a century or two.. if you're lucky!" (0xe1) which actually will be "
/ on a wide ramp up the side of the Black Tower" (0xe1) because 
/ it's decremented by -1 later
0x0e6f (0x168f): (0x08) Set var[0x0b] = (constant) 0xe2

/ No puff of orange smoke when the player is in locations 0xc9 to 0xe1
0x0e72 (0x1692): (0x00) Goto 0x0e76

**************************************************************************

/ Print message  "\nThere is a puff of orange smoke.. "
0x0e74 (0x1694): (0x05) Print message (constant) 0x20

/ Take one off of the resurrection target location 
0x0e76 (0x1696): (0x0b) Set var[0x0b] -= var[0x01]

/ Perform location checks
0x0e79 (0x1699): (0x01) Gosub 0x0390

/ Print that there is a puff of smoke and the location description and
/ reset that number of turns the player has been unable to breathe to 0
0x0e7c (0x169c): (0x00) Goto 0x0945

**************************************************************************
* Remove object in second word from game
**************************************************************************

/ Get the current location of the item to remove from the game
/ which is in the second word
0x0e7f (0x169f): (0xa2) Set var[0x13] = list#2[var[0x22]] (list address 0x0820)

/ Set the location of the item to out of the game (0xe2)
/ var[0x08] is the constant 0xe2
0x0e82 (0x16a2): (0xe2) Set list#2[var[0x22]] = var[0x08] (list address 0x0820)

/ Branch if the location was NOT in the player's inventory and return
0x0e85 (0x16a5): (0x11) If var[0x13] != var[0x07] then Goto 0x0e90

/ Item was in the player's inventory

/ Branch if there is the count of inventory items is already zero (0x00)
/ var[0x15] is the constant 0x00
0x0e89 (0x16a9): (0x10) If var[0x49] == var[0x15] then Goto 0x0e90

/ Decrement the number of items in the inventory
0x0e8d (0x16ad): (0x0b) Set var[0x49] -= var[0x01].

/ Item removed from game
0x0e90 (0x16b0): (0x02) Return

**************************************************************************
* Checks to see if the object is in the player's inventory or current location
* with special checks for the insulating cloak
**************************************************************************

/ Branch if the object in the second word is NOT an NPC
0x0e91 (0x16b1): (0x1a) If var[0x22] < (constant) 0x64 then Goto 0x0e99

/ Object in the second word is an NPC

/ Print message  "You can't do that"
0x0e95 (0x16b5): (0x05) Print message (constant) 0x05

/ Bug? This will print "It's not on the ground" even when the NPC 
/ is in the same location. Feels like this should be "Goto 0x0ec3"
0x0e97 (0x16b7): (0x00) Goto 0x0ec1

**************************************************************************
* Check to see if the player is trying to get the insulating cloak 
* and if so don't allow it if it's in one of the "hot rooms". If it's 
* NOT the cloak, just check to see if the object is in the same location 
* as the player
**************************************************************************

/ Branch if the second word is NOT the "insulating cloak" (0x3c)
0x0e99 (0x16b9): (0x19) If var[0x22] != (constant) 0x3c then Goto 0x0eba

/ Second word IS the "insulating cloak" (0x3c)

/ Don't allow the player to pick up the cloak if it's in any of these "hot rooms"
/ 0x8e : at a crossing between passages. The floor is made up of red-hot coals
/ 0x8f : in a hot room. The north door is marked with a black dot
/ 0x90 : in an ornate room decorated with symbols of infinity. A nest burns on a marble plinth in the centre of the room: yet it is not consumed, and neither does it give off any smoke or heat
/ 0x91 : in a hot east-west corridor. To the east is a bed of glowing coals
/ 0x96 : iQ a very hot passage. The floor is covered by hot coals to the west
/ Bug? Shouldn't they all go to 0x0eb6 as the cloak IS on the ground

/ Don't allow the pick up if the cloak IS in location "in a hot room.
/ The north door is marked with a black dot" (0x8f)
0x0e9d (0x16bd): (0x18) If var[0x0b] == (constant) 0x8f then Goto 0x0eb1

/ Don't allow the pick up if the cloak IS in location "in an ornate room
/ decorated with symbols of infinity. A nest burns on a marble plinth in
/ the centre of the room: yet it is not consumed, and neither does it give
/ off any smoke or heat" (0x90)
0x0ea1 (0x16c1): (0x18) If var[0x0b] == (constant) 0x90 then Goto 0x0eb1

/ Don't allow the pick up if the cloak IS in location "in a hot east-west 
/ corridor. To the east is a bed of glowing coals" (0x91)
0x0ea5 (0x16c5): (0x18) If var[0x0b] == (constant) 0x91 then Goto 0x0eb1

/ Branch if the player's current location is "at a crossing between passages. 
/ The floor is made up of red-hot coals" (0x8e) and don't allow
/ the player to pick up the cloak as the coals are too hot
0x0ea9 (0x16c9): (0x18) If var[0x0b] == (constant) 0x8e then Goto 0x0eb6

/ Don't allow the pick up if the cloak IS in location "iQ a very hot
/ passage. The floor is covered by hot coals to the west" (0x96)
/ but branch and allow for anything else
0x0ead (0x16cd): (0x19) If var[0x0b] != (constant) 0x96 then Goto 0x0eba

/ Don't allwo the player to pick up the cloak by setting the player's location
/ to somewhere the cloak is NOT so the same location check will fail

/ Set the target location to "at a crossing between passages. The floor is 
/ made up of red-hot coals" (0x8e)
0x0eb1 (0x16d1): (0x08) Set var[0x18] = (constant) 0x8e

/ Check to see if the cloak is in the player's location (will fail now even
/ if it was because the player's target destination is used and it's been 
/ changed)
0x0eb4 (0x16d4): (0x00) Goto 0x0eba

**************************************************************************

/ Print message  "You must be joking! Those coals are red-hot! "
0x0eb6 (0x16d6): (0x05) Print message (constant) 0x89

/ Set the flag to indicate that the player cannot pick up the cloak
0x0eb8 (0x16d8): (0x00) Goto 0x0ec3

**************************************************************************

/ Get the location of the object in the second word
0x0eba (0x16da): (0xa2) Set var[0x13] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the object IS in the player's current location and return
0x0ebd (0x16dd): (0x10) If var[0x13] == var[0x18] then Goto 0x0ec6

/ Print message  "It's not on the ground "
0x0ec1 (0x16e1): (0x05) Print message (constant) 0x07

/ Set the flag to indicate if the player can pick up the object to false (0x00)
/ var[0x15] is the constant 0x00
0x0ec3 (0x16e3): (0x09) Set var[0x1b] = var[0x15]

/ All checks complete
0x0ec6 (0x16e6): (0x02) Return

**************************************************************************
* Check to see if it's a droppable object and if it's in the player's inventory
**************************************************************************

/ Branch if the object in word two is a pickupable object 
0x0ec7 (0x16e7): (0x1a) If var[0x22] < (constant) 0x64 then Goto 0x0ecf

/ Not an object that can be picked up

/ Print "You can't do that"
/ var[0x05] is the constant 0x05
0x0ecb (0x16eb): (0x04) Print message var[0x05]

/ Set the indicator it can't be dropped and return
0x0ecd (0x16ed): (0x00) Goto 0x0ed8

/ Get the location of the droppable item
0x0ecf (0x16ef): (0xa2) Set var[0x13] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the location IS in the inventory and return
/ (var[0x1b] already set to 0x01 at the start of the turn)
0x0ed2 (0x16f2): (0x10) If var[0x13] == var[0x07] then Goto 0x0edb

/ Object is NOT in the inventory

/ Print message  "You don't have it "
0x0ed6 (0x16f6): (0x05) Print message (constant) 0x06

/ Set the indicator that the object is NOT in the inventory (0x00)
/ var[0x15] is the constant 0x00
0x0ed8 (0x16f8): (0x09) Set var[0x1b] = var[0x15]

/ Return
0x0edb (0x16fb): (0x02) Return

**************************************************************************
* Print all objects that are in the passed location
**************************************************************************

/ On entry: 
/    var[0x18] is passed in as the location to check
/    var[0x17] contains the description offset for the objects
/ On return:
/    var[0x1b] count of objects in the passed location

/ Set the temporary variable to the id of the first object (0x33)
0x0edc (0x16fc): (0x08) Set var[0x10] = (constant) 0x33

/ Set the number of objects in the passed location to 0x00
/ var[0x15] is the constant 0x00
0x0edf (0x16ff): (0x09) Set var[0x1b] = var[0x15]

/ Get the location of the object 
0x0ee2 (0x1702): (0xa2) Set var[0x11] = list#2[var[0x10]] (list address 0x0820)

/ Set the default status of the object to " " (0x33)
0x0ee5 (0x1705): (0x08) Set var[0x51] = (constant) 0x33

/ Branch if the object is in the passed location
0x0ee8 (0x1708): (0x10) If var[0x11] == var[0x18] then Goto 0x0ef4

/ Move to the next object
0x0eec (0x170c): (0x0a) Set var[0x10] += var[0x01]

/ If there are still objects to process, loop around again 
0x0eef (0x170f): (0x1a) If var[0x10] < (constant) 0x54 then Goto 0x0ee2

/ All objects processed for the location check
0x0ef3 (0x1713): (0x02) Return

**************************************************************************

/ Object is in the passed location

/ Branch if the current object is NOT the "bottle" / "flask" (0x39)
0x0ef4 (0x1714): (0x19) If var[0x10] != (constant) 0x39 then Goto 0x0f06

/ Current object IS the "bottle" / "flask"

/ Branch if the bottle is empty (0x00)
/ var[0x0a] is the constant 0x00
0x0ef8 (0x1718): (0x10) If var[0x0a] == var[0x15] then Goto 0x0f06

/ Status is either full of water (0x02) or full of oil (0x01)

/ Set the status message to "full of oil" (0x27)
0x0efc (0x171c): (0x08) Set var[0x51] = (constant) 0x27

/ Branch if the status is "full of oil" (0x01)
0x0eff (0x171f): (0x10) If var[0x0a] == var[0x01] then Goto 0x0f06

/ Set the status message to "full of water" (0x26)
0x0f03 (0x1723): (0x08) Set var[0x51] = (constant) 0x26

/ Set the temporary variable to the passed in description offset 
0x0f06 (0x1726): (0x09) Set var[0x13] = var[0x17]

/ Add on the object id to get to the correct description id
0x0f09 (0x1729): (0x0a) Set var[0x13] += var[0x10]

/ Add one to the number of objects in the passed location
0x0f0c (0x172c): (0x0a) Set var[0x1b] += var[0x01]

/ If the description offset is zero (0x00) then loop to the next
/ object - with the game A-code this can never happen as it's 
/ always set to either 0xaa or 0xd2
/ var[0x15] is the constant 0x00
0x0f0f (0x172f): (0x10) If var[0x17] == var[0x15] then Goto 0x0eec

/ Print message  "\n "
0x0f13 (0x1733): (0x05) Print message (constant) 0x33

/ Print the object's description
0x0f15 (0x1735): (0x04) Print message var[0x13]

/ Print the status message for the bottle (will be empty for everything else)
0x0f17 (0x1737): (0x04) Print message var[0x51]

/ Print message  "\n "
0x0f19 (0x1739): (0x05) Print message (constant) 0x33

/ Loop to the next object
0x0f1b (0x173b): (0x00) Goto 0x0eec

**************************************************************************
* Print common message "You can't do that"
**************************************************************************

/ Print message  "You can't do that "
0x0f1d (0x173d): (0x05) Print message (constant) 0x05

/ Set the indicator that the action could not be carried out (0x00)
/ var[0x15] is the constant 0x00
0x0f1f (0x173f): (0x09) Set var[0x1b] = var[0x15]

/ Get the player's next command 
0x0f22 (0x1742): (0x00) Goto 0x009a

**************************************************************************
* Print common message "Please be more specific"
**************************************************************************

/ Print message  "Please be more specific "
0x0f25 (0x1745): (0x05) Print message (constant) 0x04

/ Set the indicator that the action could not be carried out (0x00)
/ var[0x15] is the constant 0x00
0x0f27 (0x1747): (0x09) Set var[0x1b] = var[0x15]

/ Get the player's next command 
0x0f2a (0x174a): (0x00) Goto 0x009a

**************************************************************************
* Print common message "Nothing happens"
**************************************************************************

/ Print message  "Nothing happens "
0x0f2d (0x174d): (0x05) Print message (constant) 0xc8

/ Set the indicator that the action could not be carried out (0x00)
/ var[0x15] is the constant 0x00
0x0f2f (0x174f): (0x09) Set var[0x1b] = var[0x15]

/ Get the player's next command 
0x0f32 (0x1752): (0x00) Goto 0x009a

**************************************************************************
* Print common message "You can't do that"
**************************************************************************

/ Print message  "You can't do that "
0x0f35 (0x1755): (0x05) Print message (constant) 0x05

/ Get the player's next command 
0x0f37 (0x1757): (0x00) Goto 0x009a

**************************************************************************
* Check to see if the object is in their inventory if 
* so var[0x1b] will be set to 0x00. This is used for checking to 
* see if the player has any weapons in their inventory
**************************************************************************

/ Get the current location of the object in the second word
0x0f3a (0x175a): (0xa2) Set var[0x11] = list#2[var[0x22]] (list address 0x0820)

/ Branch if the location is NOT in the player's inventory (0xff)
/ and return with 
/ var[0x07] is the constant 0xff
0x0f3d (0x175d): (0x11) If var[0x11] != var[0x07] then Goto 0x0f44

/ Set the variable to 0x00 to indicate that the object IS in the 
/ player's inventory 
/ var[0x15] is the constant 0xff
0x0f41 (0x1761): (0x09) Set var[0x1b] = var[0x15]

/ All done
0x0f44 (0x1764): (0x02) Return

**************************************************************************
Level 9 A-Code game dissassembly complete
**************************************************************************
